/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface ClearingV2Interface extends ethers.utils.Interface {
  functions: {
    "PRECISION()": FunctionFragment;
    "addPosition(address,uint8)": FunctionFragment;
    "appendList(address,address[])": FunctionFragment;
    "applyRatio(address,address,uint256,uint256)": FunctionFragment;
    "checkPriceChange(address,uint32,uint256)": FunctionFragment;
    "clearDeposit(uint256,uint256,address,address,address,uint256[4])": FunctionFragment;
    "clearShares(address,uint256)": FunctionFragment;
    "customDeposit(address,uint256,uint256,uint256,uint256)": FunctionFragment;
    "customRatio(address,bool,uint256,uint256)": FunctionFragment;
    "deltaScale()": FunctionFragment;
    "depositDelta()": FunctionFragment;
    "freeDepositList(address,address)": FunctionFragment;
    "getDepositAmount(address,address,uint256)": FunctionFragment;
    "getListed(address,address)": FunctionFragment;
    "getPositionInfo(address)": FunctionFragment;
    "getSqrtTwapX96(address,uint32)": FunctionFragment;
    "owner()": FunctionFragment;
    "pause(bool)": FunctionFragment;
    "paused()": FunctionFragment;
    "positions(address)": FunctionFragment;
    "priceThreshold()": FunctionFragment;
    "removeListed(address,address)": FunctionFragment;
    "removeRatio(address)": FunctionFragment;
    "setDeltaScale(uint256)": FunctionFragment;
    "setDepositDelta(uint256)": FunctionFragment;
    "setDepositOverride(address,bool)": FunctionFragment;
    "setPriceThreshold(uint256)": FunctionFragment;
    "setTwapCheck(bool)": FunctionFragment;
    "setTwapInterval(uint32)": FunctionFragment;
    "setTwapOverride(address,bool,uint32,uint256)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "twapCheck()": FunctionFragment;
    "twapInterval()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "PRECISION", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "addPosition",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "appendList",
    values: [string, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "applyRatio",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "checkPriceChange",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "clearDeposit",
    values: [
      BigNumberish,
      BigNumberish,
      string,
      string,
      string,
      [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "clearShares",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "customDeposit",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "customRatio",
    values: [string, boolean, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deltaScale",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "depositDelta",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "freeDepositList",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getDepositAmount",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getListed",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getPositionInfo",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getSqrtTwapX96",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "pause", values: [boolean]): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(functionFragment: "positions", values: [string]): string;
  encodeFunctionData(
    functionFragment: "priceThreshold",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeListed",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "removeRatio", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setDeltaScale",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setDepositDelta",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setDepositOverride",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setPriceThreshold",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setTwapCheck",
    values: [boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setTwapInterval",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setTwapOverride",
    values: [string, boolean, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "twapCheck", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "twapInterval",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "PRECISION", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "appendList", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "applyRatio", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "checkPriceChange",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "clearDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "clearShares",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "customDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "customRatio",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "deltaScale", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "depositDelta",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "freeDepositList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDepositAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getListed", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPositionInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSqrtTwapX96",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pause", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "positions", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "priceThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeListed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeRatio",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDeltaScale",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDepositDelta",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDepositOverride",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPriceThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTwapCheck",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTwapInterval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTwapOverride",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "twapCheck", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "twapInterval",
    data: BytesLike
  ): Result;

  events: {
    "CustomDeposit(address,uint256,uint256,uint256)": EventFragment;
    "CustomRatio(address,uint256,uint256)": EventFragment;
    "DeltaScaleSet(uint256)": EventFragment;
    "DepositDeltaSet(uint256)": EventFragment;
    "DepositOverrideSet(address,bool)": EventFragment;
    "ListAppended(address,address[])": EventFragment;
    "ListRemoved(address,address)": EventFragment;
    "PositionAdded(address,uint8)": EventFragment;
    "PriceThresholdPosSet(address,uint256)": EventFragment;
    "PriceThresholdSet(uint256)": EventFragment;
    "RatioRemoved(address)": EventFragment;
    "TwapCheckSet(bool)": EventFragment;
    "TwapIntervalSet(uint32)": EventFragment;
    "TwapOverrideSet(address,bool,uint32,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CustomDeposit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CustomRatio"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DeltaScaleSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DepositDeltaSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DepositOverrideSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ListAppended"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ListRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PositionAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PriceThresholdPosSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PriceThresholdSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RatioRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TwapCheckSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TwapIntervalSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TwapOverrideSet"): EventFragment;
}

export type CustomDepositEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber] & {
    arg0: string;
    arg1: BigNumber;
    arg2: BigNumber;
    arg3: BigNumber;
  }
>;

export type CustomRatioEvent = TypedEvent<
  [string, BigNumber, BigNumber] & {
    pos: string;
    fauxTotal0: BigNumber;
    fauxTotal1: BigNumber;
  }
>;

export type DeltaScaleSetEvent = TypedEvent<
  [BigNumber] & { _deltaScale: BigNumber }
>;

export type DepositDeltaSetEvent = TypedEvent<
  [BigNumber] & { _depositDelta: BigNumber }
>;

export type DepositOverrideSetEvent = TypedEvent<
  [string, boolean] & { pos: string; depositOverride: boolean }
>;

export type ListAppendedEvent = TypedEvent<
  [string, string[]] & { pos: string; listed: string[] }
>;

export type ListRemovedEvent = TypedEvent<
  [string, string] & { pos: string; listed: string }
>;

export type PositionAddedEvent = TypedEvent<
  [string, number] & { arg0: string; arg1: number }
>;

export type PriceThresholdPosSetEvent = TypedEvent<
  [string, BigNumber] & { pos: string; _priceThreshold: BigNumber }
>;

export type PriceThresholdSetEvent = TypedEvent<
  [BigNumber] & { _priceThreshold: BigNumber }
>;

export type RatioRemovedEvent = TypedEvent<[string] & { pos: string }>;

export type TwapCheckSetEvent = TypedEvent<[boolean] & { twapCheck: boolean }>;

export type TwapIntervalSetEvent = TypedEvent<
  [number] & { _twapInterval: number }
>;

export type TwapOverrideSetEvent = TypedEvent<
  [string, boolean, number, BigNumber] & {
    pos: string;
    twapOverride: boolean;
    _twapInterval: number;
    _priceThreshold: BigNumber;
  }
>;

export class ClearingV2 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ClearingV2Interface;

  functions: {
    PRECISION(overrides?: CallOverrides): Promise<[BigNumber]>;

    addPosition(
      pos: string,
      version: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    appendList(
      pos: string,
      listed: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    applyRatio(
      pos: string,
      token: string,
      total0: BigNumberish,
      total1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { ratioStart: BigNumber; ratioEnd: BigNumber }
    >;

    checkPriceChange(
      pos: string,
      _twapInterval: BigNumberish,
      _priceThreshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { price: BigNumber }>;

    clearDeposit(
      deposit0: BigNumberish,
      deposit1: BigNumberish,
      from: string,
      to: string,
      pos: string,
      minIn: [BigNumberish, BigNumberish, BigNumberish, BigNumberish],
      overrides?: CallOverrides
    ): Promise<[boolean] & { cleared: boolean }>;

    clearShares(
      pos: string,
      shares: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean] & { cleared: boolean }>;

    customDeposit(
      pos: string,
      deposit0Max: BigNumberish,
      deposit1Max: BigNumberish,
      maxTotalSupply: BigNumberish,
      customDepositDelta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    customRatio(
      pos: string,
      _customRatio: boolean,
      fauxTotal0: BigNumberish,
      fauxTotal1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    deltaScale(overrides?: CallOverrides): Promise<[BigNumber]>;

    depositDelta(overrides?: CallOverrides): Promise<[BigNumber]>;

    freeDepositList(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getDepositAmount(
      pos: string,
      token: string,
      _deposit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { amountStart: BigNumber; amountEnd: BigNumber }
    >;

    getListed(
      pos: string,
      i: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getPositionInfo(
      pos: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          boolean,
          boolean,
          boolean,
          boolean,
          boolean,
          number,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          customRatio: boolean;
          customTwap: boolean;
          ratioRemoved: boolean;
          depositOverride: boolean;
          twapOverride: boolean;
          version: number;
          twapInterval: number;
          priceThreshold: BigNumber;
          deposit0Max: BigNumber;
          deposit1Max: BigNumber;
          maxTotalSupply: BigNumber;
          fauxTotal0: BigNumber;
          fauxTotal1: BigNumber;
          customDepositDelta: BigNumber;
        }
      ]
    >;

    getSqrtTwapX96(
      pos: string,
      _twapInterval: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { sqrtPriceX96: BigNumber }>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    pause(
      _paused: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    paused(overrides?: CallOverrides): Promise<[boolean]>;

    positions(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        number,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        customRatio: boolean;
        customTwap: boolean;
        ratioRemoved: boolean;
        depositOverride: boolean;
        twapOverride: boolean;
        version: number;
        twapInterval: number;
        priceThreshold: BigNumber;
        deposit0Max: BigNumber;
        deposit1Max: BigNumber;
        maxTotalSupply: BigNumber;
        fauxTotal0: BigNumber;
        fauxTotal1: BigNumber;
        customDepositDelta: BigNumber;
      }
    >;

    priceThreshold(overrides?: CallOverrides): Promise<[BigNumber]>;

    removeListed(
      pos: string,
      listed: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeRatio(
      pos: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setDeltaScale(
      _deltaScale: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setDepositDelta(
      _depositDelta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setDepositOverride(
      pos: string,
      _depositOverride: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setPriceThreshold(
      _priceThreshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTwapCheck(
      _twapCheck: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTwapInterval(
      _twapInterval: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setTwapOverride(
      pos: string,
      twapOverride: boolean,
      _twapInterval: BigNumberish,
      _priceThreshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    twapCheck(overrides?: CallOverrides): Promise<[boolean]>;

    twapInterval(overrides?: CallOverrides): Promise<[number]>;
  };

  PRECISION(overrides?: CallOverrides): Promise<BigNumber>;

  addPosition(
    pos: string,
    version: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  appendList(
    pos: string,
    listed: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  applyRatio(
    pos: string,
    token: string,
    total0: BigNumberish,
    total1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { ratioStart: BigNumber; ratioEnd: BigNumber }
  >;

  checkPriceChange(
    pos: string,
    _twapInterval: BigNumberish,
    _priceThreshold: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  clearDeposit(
    deposit0: BigNumberish,
    deposit1: BigNumberish,
    from: string,
    to: string,
    pos: string,
    minIn: [BigNumberish, BigNumberish, BigNumberish, BigNumberish],
    overrides?: CallOverrides
  ): Promise<boolean>;

  clearShares(
    pos: string,
    shares: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  customDeposit(
    pos: string,
    deposit0Max: BigNumberish,
    deposit1Max: BigNumberish,
    maxTotalSupply: BigNumberish,
    customDepositDelta: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  customRatio(
    pos: string,
    _customRatio: boolean,
    fauxTotal0: BigNumberish,
    fauxTotal1: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  deltaScale(overrides?: CallOverrides): Promise<BigNumber>;

  depositDelta(overrides?: CallOverrides): Promise<BigNumber>;

  freeDepositList(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getDepositAmount(
    pos: string,
    token: string,
    _deposit: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { amountStart: BigNumber; amountEnd: BigNumber }
  >;

  getListed(
    pos: string,
    i: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getPositionInfo(
    pos: string,
    overrides?: CallOverrides
  ): Promise<
    [
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      number,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      customRatio: boolean;
      customTwap: boolean;
      ratioRemoved: boolean;
      depositOverride: boolean;
      twapOverride: boolean;
      version: number;
      twapInterval: number;
      priceThreshold: BigNumber;
      deposit0Max: BigNumber;
      deposit1Max: BigNumber;
      maxTotalSupply: BigNumber;
      fauxTotal0: BigNumber;
      fauxTotal1: BigNumber;
      customDepositDelta: BigNumber;
    }
  >;

  getSqrtTwapX96(
    pos: string,
    _twapInterval: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  pause(
    _paused: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  positions(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [
      boolean,
      boolean,
      boolean,
      boolean,
      boolean,
      number,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      customRatio: boolean;
      customTwap: boolean;
      ratioRemoved: boolean;
      depositOverride: boolean;
      twapOverride: boolean;
      version: number;
      twapInterval: number;
      priceThreshold: BigNumber;
      deposit0Max: BigNumber;
      deposit1Max: BigNumber;
      maxTotalSupply: BigNumber;
      fauxTotal0: BigNumber;
      fauxTotal1: BigNumber;
      customDepositDelta: BigNumber;
    }
  >;

  priceThreshold(overrides?: CallOverrides): Promise<BigNumber>;

  removeListed(
    pos: string,
    listed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeRatio(
    pos: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setDeltaScale(
    _deltaScale: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setDepositDelta(
    _depositDelta: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setDepositOverride(
    pos: string,
    _depositOverride: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setPriceThreshold(
    _priceThreshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTwapCheck(
    _twapCheck: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTwapInterval(
    _twapInterval: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setTwapOverride(
    pos: string,
    twapOverride: boolean,
    _twapInterval: BigNumberish,
    _priceThreshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  twapCheck(overrides?: CallOverrides): Promise<boolean>;

  twapInterval(overrides?: CallOverrides): Promise<number>;

  callStatic: {
    PRECISION(overrides?: CallOverrides): Promise<BigNumber>;

    addPosition(
      pos: string,
      version: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    appendList(
      pos: string,
      listed: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    applyRatio(
      pos: string,
      token: string,
      total0: BigNumberish,
      total1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { ratioStart: BigNumber; ratioEnd: BigNumber }
    >;

    checkPriceChange(
      pos: string,
      _twapInterval: BigNumberish,
      _priceThreshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    clearDeposit(
      deposit0: BigNumberish,
      deposit1: BigNumberish,
      from: string,
      to: string,
      pos: string,
      minIn: [BigNumberish, BigNumberish, BigNumberish, BigNumberish],
      overrides?: CallOverrides
    ): Promise<boolean>;

    clearShares(
      pos: string,
      shares: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    customDeposit(
      pos: string,
      deposit0Max: BigNumberish,
      deposit1Max: BigNumberish,
      maxTotalSupply: BigNumberish,
      customDepositDelta: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    customRatio(
      pos: string,
      _customRatio: boolean,
      fauxTotal0: BigNumberish,
      fauxTotal1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    deltaScale(overrides?: CallOverrides): Promise<BigNumber>;

    depositDelta(overrides?: CallOverrides): Promise<BigNumber>;

    freeDepositList(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getDepositAmount(
      pos: string,
      token: string,
      _deposit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { amountStart: BigNumber; amountEnd: BigNumber }
    >;

    getListed(
      pos: string,
      i: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getPositionInfo(
      pos: string,
      overrides?: CallOverrides
    ): Promise<
      [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        number,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        customRatio: boolean;
        customTwap: boolean;
        ratioRemoved: boolean;
        depositOverride: boolean;
        twapOverride: boolean;
        version: number;
        twapInterval: number;
        priceThreshold: BigNumber;
        deposit0Max: BigNumber;
        deposit1Max: BigNumber;
        maxTotalSupply: BigNumber;
        fauxTotal0: BigNumber;
        fauxTotal1: BigNumber;
        customDepositDelta: BigNumber;
      }
    >;

    getSqrtTwapX96(
      pos: string,
      _twapInterval: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    pause(_paused: boolean, overrides?: CallOverrides): Promise<void>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    positions(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [
        boolean,
        boolean,
        boolean,
        boolean,
        boolean,
        number,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        customRatio: boolean;
        customTwap: boolean;
        ratioRemoved: boolean;
        depositOverride: boolean;
        twapOverride: boolean;
        version: number;
        twapInterval: number;
        priceThreshold: BigNumber;
        deposit0Max: BigNumber;
        deposit1Max: BigNumber;
        maxTotalSupply: BigNumber;
        fauxTotal0: BigNumber;
        fauxTotal1: BigNumber;
        customDepositDelta: BigNumber;
      }
    >;

    priceThreshold(overrides?: CallOverrides): Promise<BigNumber>;

    removeListed(
      pos: string,
      listed: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeRatio(pos: string, overrides?: CallOverrides): Promise<void>;

    setDeltaScale(
      _deltaScale: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setDepositDelta(
      _depositDelta: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setDepositOverride(
      pos: string,
      _depositOverride: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setPriceThreshold(
      _priceThreshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setTwapCheck(_twapCheck: boolean, overrides?: CallOverrides): Promise<void>;

    setTwapInterval(
      _twapInterval: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setTwapOverride(
      pos: string,
      twapOverride: boolean,
      _twapInterval: BigNumberish,
      _priceThreshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    twapCheck(overrides?: CallOverrides): Promise<boolean>;

    twapInterval(overrides?: CallOverrides): Promise<number>;
  };

  filters: {
    "CustomDeposit(address,uint256,uint256,uint256)"(
      undefined?: null,
      undefined?: null,
      undefined?: null,
      undefined?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber],
      { arg0: string; arg1: BigNumber; arg2: BigNumber; arg3: BigNumber }
    >;

    CustomDeposit(
      undefined?: null,
      undefined?: null,
      undefined?: null,
      undefined?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber],
      { arg0: string; arg1: BigNumber; arg2: BigNumber; arg3: BigNumber }
    >;

    "CustomRatio(address,uint256,uint256)"(
      pos?: null,
      fauxTotal0?: null,
      fauxTotal1?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { pos: string; fauxTotal0: BigNumber; fauxTotal1: BigNumber }
    >;

    CustomRatio(
      pos?: null,
      fauxTotal0?: null,
      fauxTotal1?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { pos: string; fauxTotal0: BigNumber; fauxTotal1: BigNumber }
    >;

    "DeltaScaleSet(uint256)"(
      _deltaScale?: null
    ): TypedEventFilter<[BigNumber], { _deltaScale: BigNumber }>;

    DeltaScaleSet(
      _deltaScale?: null
    ): TypedEventFilter<[BigNumber], { _deltaScale: BigNumber }>;

    "DepositDeltaSet(uint256)"(
      _depositDelta?: null
    ): TypedEventFilter<[BigNumber], { _depositDelta: BigNumber }>;

    DepositDeltaSet(
      _depositDelta?: null
    ): TypedEventFilter<[BigNumber], { _depositDelta: BigNumber }>;

    "DepositOverrideSet(address,bool)"(
      pos?: null,
      depositOverride?: null
    ): TypedEventFilter<
      [string, boolean],
      { pos: string; depositOverride: boolean }
    >;

    DepositOverrideSet(
      pos?: null,
      depositOverride?: null
    ): TypedEventFilter<
      [string, boolean],
      { pos: string; depositOverride: boolean }
    >;

    "ListAppended(address,address[])"(
      pos?: null,
      listed?: null
    ): TypedEventFilter<[string, string[]], { pos: string; listed: string[] }>;

    ListAppended(
      pos?: null,
      listed?: null
    ): TypedEventFilter<[string, string[]], { pos: string; listed: string[] }>;

    "ListRemoved(address,address)"(
      pos?: null,
      listed?: null
    ): TypedEventFilter<[string, string], { pos: string; listed: string }>;

    ListRemoved(
      pos?: null,
      listed?: null
    ): TypedEventFilter<[string, string], { pos: string; listed: string }>;

    "PositionAdded(address,uint8)"(
      undefined?: null,
      undefined?: null
    ): TypedEventFilter<[string, number], { arg0: string; arg1: number }>;

    PositionAdded(
      undefined?: null,
      undefined?: null
    ): TypedEventFilter<[string, number], { arg0: string; arg1: number }>;

    "PriceThresholdPosSet(address,uint256)"(
      pos?: null,
      _priceThreshold?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { pos: string; _priceThreshold: BigNumber }
    >;

    PriceThresholdPosSet(
      pos?: null,
      _priceThreshold?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { pos: string; _priceThreshold: BigNumber }
    >;

    "PriceThresholdSet(uint256)"(
      _priceThreshold?: null
    ): TypedEventFilter<[BigNumber], { _priceThreshold: BigNumber }>;

    PriceThresholdSet(
      _priceThreshold?: null
    ): TypedEventFilter<[BigNumber], { _priceThreshold: BigNumber }>;

    "RatioRemoved(address)"(
      pos?: null
    ): TypedEventFilter<[string], { pos: string }>;

    RatioRemoved(pos?: null): TypedEventFilter<[string], { pos: string }>;

    "TwapCheckSet(bool)"(
      twapCheck?: null
    ): TypedEventFilter<[boolean], { twapCheck: boolean }>;

    TwapCheckSet(
      twapCheck?: null
    ): TypedEventFilter<[boolean], { twapCheck: boolean }>;

    "TwapIntervalSet(uint32)"(
      _twapInterval?: null
    ): TypedEventFilter<[number], { _twapInterval: number }>;

    TwapIntervalSet(
      _twapInterval?: null
    ): TypedEventFilter<[number], { _twapInterval: number }>;

    "TwapOverrideSet(address,bool,uint32,uint256)"(
      pos?: null,
      twapOverride?: null,
      _twapInterval?: null,
      _priceThreshold?: null
    ): TypedEventFilter<
      [string, boolean, number, BigNumber],
      {
        pos: string;
        twapOverride: boolean;
        _twapInterval: number;
        _priceThreshold: BigNumber;
      }
    >;

    TwapOverrideSet(
      pos?: null,
      twapOverride?: null,
      _twapInterval?: null,
      _priceThreshold?: null
    ): TypedEventFilter<
      [string, boolean, number, BigNumber],
      {
        pos: string;
        twapOverride: boolean;
        _twapInterval: number;
        _priceThreshold: BigNumber;
      }
    >;
  };

  estimateGas: {
    PRECISION(overrides?: CallOverrides): Promise<BigNumber>;

    addPosition(
      pos: string,
      version: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    appendList(
      pos: string,
      listed: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    applyRatio(
      pos: string,
      token: string,
      total0: BigNumberish,
      total1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    checkPriceChange(
      pos: string,
      _twapInterval: BigNumberish,
      _priceThreshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    clearDeposit(
      deposit0: BigNumberish,
      deposit1: BigNumberish,
      from: string,
      to: string,
      pos: string,
      minIn: [BigNumberish, BigNumberish, BigNumberish, BigNumberish],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    clearShares(
      pos: string,
      shares: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    customDeposit(
      pos: string,
      deposit0Max: BigNumberish,
      deposit1Max: BigNumberish,
      maxTotalSupply: BigNumberish,
      customDepositDelta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    customRatio(
      pos: string,
      _customRatio: boolean,
      fauxTotal0: BigNumberish,
      fauxTotal1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    deltaScale(overrides?: CallOverrides): Promise<BigNumber>;

    depositDelta(overrides?: CallOverrides): Promise<BigNumber>;

    freeDepositList(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDepositAmount(
      pos: string,
      token: string,
      _deposit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getListed(
      pos: string,
      i: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPositionInfo(pos: string, overrides?: CallOverrides): Promise<BigNumber>;

    getSqrtTwapX96(
      pos: string,
      _twapInterval: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    pause(
      _paused: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    positions(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    priceThreshold(overrides?: CallOverrides): Promise<BigNumber>;

    removeListed(
      pos: string,
      listed: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeRatio(
      pos: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setDeltaScale(
      _deltaScale: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setDepositDelta(
      _depositDelta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setDepositOverride(
      pos: string,
      _depositOverride: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setPriceThreshold(
      _priceThreshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTwapCheck(
      _twapCheck: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTwapInterval(
      _twapInterval: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setTwapOverride(
      pos: string,
      twapOverride: boolean,
      _twapInterval: BigNumberish,
      _priceThreshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    twapCheck(overrides?: CallOverrides): Promise<BigNumber>;

    twapInterval(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    PRECISION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    addPosition(
      pos: string,
      version: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    appendList(
      pos: string,
      listed: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    applyRatio(
      pos: string,
      token: string,
      total0: BigNumberish,
      total1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkPriceChange(
      pos: string,
      _twapInterval: BigNumberish,
      _priceThreshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    clearDeposit(
      deposit0: BigNumberish,
      deposit1: BigNumberish,
      from: string,
      to: string,
      pos: string,
      minIn: [BigNumberish, BigNumberish, BigNumberish, BigNumberish],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    clearShares(
      pos: string,
      shares: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    customDeposit(
      pos: string,
      deposit0Max: BigNumberish,
      deposit1Max: BigNumberish,
      maxTotalSupply: BigNumberish,
      customDepositDelta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    customRatio(
      pos: string,
      _customRatio: boolean,
      fauxTotal0: BigNumberish,
      fauxTotal1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    deltaScale(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    depositDelta(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    freeDepositList(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDepositAmount(
      pos: string,
      token: string,
      _deposit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getListed(
      pos: string,
      i: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPositionInfo(
      pos: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSqrtTwapX96(
      pos: string,
      _twapInterval: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pause(
      _paused: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    positions(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    priceThreshold(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeListed(
      pos: string,
      listed: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeRatio(
      pos: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setDeltaScale(
      _deltaScale: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setDepositDelta(
      _depositDelta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setDepositOverride(
      pos: string,
      _depositOverride: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setPriceThreshold(
      _priceThreshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTwapCheck(
      _twapCheck: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTwapInterval(
      _twapInterval: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setTwapOverride(
      pos: string,
      twapOverride: boolean,
      _twapInterval: BigNumberish,
      _priceThreshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    twapCheck(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    twapInterval(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
