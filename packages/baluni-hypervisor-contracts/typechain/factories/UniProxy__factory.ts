/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UniProxy, UniProxyInterface } from "../UniProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_clearance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pos",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_version",
        type: "uint8",
      },
    ],
    name: "addPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "clearance",
    outputs: [
      {
        internalType: "contract IClearing",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deposit0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deposit1",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "pos",
        type: "address",
      },
      {
        internalType: "uint256[4]",
        name: "minIn",
        type: "uint256[4]",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pos",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deposit",
        type: "uint256",
      },
    ],
    name: "getDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountEnd",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newClearance",
        type: "address",
      },
    ],
    name: "transferClearance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ab7380380610ab783398101604081905261002f91610065565b6001600081905560028054336001600160a01b0319918216179091558154166001600160a01b0392909216919091179055610093565b600060208284031215610076578081fd5b81516001600160a01b038116811461008c578182fd5b9392505050565b610a15806100a26000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d65780638e3c92e4146100de578063d0cbfac6146100fe578063f2fde38b146101115761007d565b806314897194146100825780635ccfb71d146100a05780636aa29881146100c1575b600080fd5b61008a610124565b60405161009791906107b7565b60405180910390f35b6100b36100ae366004610606565b610133565b604051610097929190610977565b6100d46100cf366004610641565b6101c7565b005b61008a61025e565b6100f16100ec3660046106d7565b61026d565b604051610097919061096e565b6100d461010c3660046105e5565b6104cb565b6100d461011f3660046105e5565b61054a565b6001546001600160a01b031681565b600154604051635ccfb71d60e01b815260009182916001600160a01b0390911690635ccfb71d9061016c908890889088906004016107cb565b604080518083038186803b15801561018357600080fd5b505afa158015610197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bb91906106b4565b91509150935093915050565b6002546001600160a01b031633146101fa5760405162461bcd60e51b81526004016101f190610937565b60405180910390fd5b604051636aa2988160e01b81526001600160a01b03831690636aa29881906102289085908590600401610808565b600060405180830381600087803b15801561024257600080fd5b505af1158015610256573d6000803e3d6000fd5b505050505050565b6002546001600160a01b031681565b6000600260005414156102c7576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000556001600160a01b0384166102f25760405162461bcd60e51b81526004016101f190610824565b600154604051634fc782b960e11b81526001600160a01b0390911690639f8f05729061032c908990899033908a908a908a90600401610985565b60206040518083038186803b15801561034457600080fd5b505afa158015610358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037c919061067c565b6103985760405162461bcd60e51b81526004016101f190610900565b60405163238f24b960e21b81526001600160a01b03841690638e3c92e4906103cc90899089908990339089906004016109cb565b602060405180830381600087803b1580156103e657600080fd5b505af11580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e919061069c565b6001546040516329adafa360e21b81529192506001600160a01b03169063a6b6be8c9061045190869085906004016107ef565b60206040518083038186803b15801561046957600080fd5b505afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a1919061067c565b6104bd5760405162461bcd60e51b81526004016101f1906108c9565b600160005595945050505050565b6002546001600160a01b031633146104f55760405162461bcd60e51b81526004016101f190610937565b6001600160a01b03811661051b5760405162461bcd60e51b81526004016101f19061085b565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6002546001600160a01b031633146105745760405162461bcd60e51b81526004016101f190610937565b6001600160a01b03811661059a5760405162461bcd60e51b81526004016101f190610892565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b80356001600160a01b03811681146105e057600080fd5b919050565b6000602082840312156105f6578081fd5b6105ff826105c9565b9392505050565b60008060006060848603121561061a578182fd5b610623846105c9565b9250610631602085016105c9565b9150604084013590509250925092565b60008060408385031215610653578182fd5b61065c836105c9565b9150602083013560ff81168114610671578182fd5b809150509250929050565b60006020828403121561068d578081fd5b815180151581146105ff578182fd5b6000602082840312156106ad578081fd5b5051919050565b600080604083850312156106c6578182fd5b505080516020909101519092909150565b60008060008060006101008087890312156106f0578182fd5b863595506020808801359550610708604089016105c9565b9450610716606089016105c9565b935088609f890112610726578283fd5b6040516080810181811067ffffffffffffffff8211171561074357fe5b6040528060808a01848b018c1015610759578586fd5b8594505b600485101561077c57803582526001949094019390830190830161075d565b50508093505050509295509295909350565b8060005b60048110156107b1578151845260209384019390910190600101610792565b50505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0392909216825260ff16602082015260400190565b60208082526015908201527f746f2073686f756c64206265206e6f6e2d7a65726f0000000000000000000000604082015260600190565b6020808252601f908201527f6e6577436c656172616e63652073686f756c64206265206e6f6e2d7a65726f00604082015260600190565b6020808252601b908201527f6e65774f776e65722073686f756c64206265206e6f6e2d7a65726f0000000000604082015260600190565b60208082526012908201527f736861726573206e6f7420636c65617265640000000000000000000000000000604082015260600190565b60208082526013908201527f6465706f736974206e6f7420636c656172656400000000000000000000000000604082015260600190565b6020808252600a908201527f6f6e6c79206f776e657200000000000000000000000000000000000000000000604082015260600190565b90815260200190565b918252602082015260400190565b868152602081018690526001600160a01b03858116604083015284811660608301528316608082015261012081016109c060a083018461078e565b979650505050505050565b858152602081018590526001600160a01b0384811660408301528316606082015261010081016109fe608083018461078e565b969550505050505056fea164736f6c6343000706000a";

export class UniProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _clearance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniProxy> {
    return super.deploy(_clearance, overrides || {}) as Promise<UniProxy>;
  }
  getDeployTransaction(
    _clearance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_clearance, overrides || {});
  }
  attach(address: string): UniProxy {
    return super.attach(address) as UniProxy;
  }
  connect(signer: Signer): UniProxy__factory {
    return super.connect(signer) as UniProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniProxyInterface {
    return new utils.Interface(_abi) as UniProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniProxy {
    return new Contract(address, _abi, signerOrProvider) as UniProxy;
  }
}
