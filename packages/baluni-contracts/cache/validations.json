{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "e639b75d1d80f35f1dbda2502514677ab3855c3e5c74bec4365f9305c22aeded",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "953ea46d64e5f0ee1eae596c2a8de43f16525b772b23dfa5a94b68cfd31750b5",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "d9843de46531a064c8d91497c0414ab8762811a3021413140667e2994acc5791",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:IQuoter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteExactInput(bytes,uint256)",
          "quoteExactInputSingle(address,address,uint24,uint256,uint160)",
          "quoteExactOutput(bytes,uint256)",
          "quoteExactOutputSingle(address,address,uint24,uint256,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/I1inchSpotAgg.sol:I1inchSpotAgg": {
        "src": "contracts/interfaces/I1inchSpotAgg.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRate(address,address,bool)",
          "getRateToEth(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Agent.sol:IBaluniV1Agent": {
        "src": "contracts/interfaces/IBaluniV1Agent.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execute(struct IBaluniV1Agent.Call[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1AgentFactory.sol:IBaluniV1AgentFactory": {
        "src": "contracts/interfaces/IBaluniV1AgentFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAgentAddress(address)",
          "getOrCreateAgent(address)",
          "getRegistry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1DCAVault.sol:IBaluniV1DCAVault": {
        "src": "contracts/interfaces/IBaluniV1DCAVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseAsset()",
          "quoteAsset()",
          "registry()",
          "lastDeposit()",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1HyperUniProxy.sol:IBaluniV1HyperUniProxy": {
        "src": "contracts/interfaces/IBaluniV1HyperUniProxy.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256,uint256,address,address,address)",
          "getDepositAmount(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Hypervisor.sol:IBaluniV1Hypervisor": {
        "src": "contracts/interfaces/IBaluniV1Hypervisor.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256,uint256,address,address,uint256[4])",
          "withdraw(uint256,address,address,uint256[4])",
          "compound()",
          "compound(uint256[4])",
          "rebalance(int24,int24,int24,int24,address,uint256[4],uint256[4])",
          "addBaseLiquidity(uint256,uint256,uint256[2])",
          "addLimitLiquidity(uint256,uint256,uint256[2])",
          "pullLiquidity(int24,int24,uint128,uint256[2])",
          "pullLiquidity(uint256,uint256[4])",
          "addLiquidity(int24,int24,uint256,uint256,uint256[2])",
          "pool()",
          "currentTick()",
          "tickSpacing()",
          "baseLower()",
          "baseUpper()",
          "limitLower()",
          "limitUpper()",
          "token0()",
          "token1()",
          "deposit0Max()",
          "deposit1Max()",
          "balanceOf(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "getTotalAmounts()",
          "getBasePosition()",
          "totalSupply()",
          "setWhitelist(address)",
          "setFee(uint8)",
          "removeWhitelisted()",
          "transferOwnership(address)",
          "toggleDirectDeposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle": {
        "src": "contracts/interfaces/IBaluniV1Oracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Pool.sol:IBaluniV1Pool": {
        "src": "contracts/interfaces/IBaluniV1Pool.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rebalanceAndDeposit(address)",
          "swap(address,address,uint256,uint256,address,uint256)",
          "quotePotentialSwap(address,address,uint256)",
          "getSlippage(address)",
          "getTokenWeight(address)",
          "getDeviationForToken(address)",
          "getSlippageParams()",
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "getAmountOut(address,address,uint256)",
          "rebalance()",
          "getDeviations()",
          "assetLiquidity(uint256)",
          "totalValuation()",
          "liquidity()",
          "unitPrice()",
          "getReserves()",
          "getAssetReserve(address)",
          "getAssets()",
          "getWeights()",
          "isRebalanceNeeded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1PoolPeriphery.sol:IBaluniV1PoolPeriphery": {
        "src": "contracts/interfaces/IBaluniV1PoolPeriphery.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "swapTokenForToken(address,address,uint256,uint256,address,address,uint256)",
          "swapTokensForTokens(address[],address[],uint256,uint256,address,uint256)",
          "batchSwap(address[],address[],uint256[],address[])",
          "getAmountOut(address,address,uint256)",
          "getPoolsContainingToken(address)",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1PoolRegistry.sol:IBaluniV1PoolRegistry": {
        "src": "contracts/interfaces/IBaluniV1PoolRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPoolByAssets(address,address)",
          "getPoolsByAsset(address)",
          "poolExist(address)",
          "getAllPools()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Rebalancer.sol:IBaluniV1Rebalancer": {
        "src": "contracts/interfaces/IBaluniV1Rebalancer.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rebalance(uint256[],address[],uint256[],uint256,address,address,address)",
          "checkRebalance(uint256[],address[],uint256[],uint256,address,address)",
          "convert(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Registry.sol:IBaluniV1Registry": {
        "src": "contracts/interfaces/IBaluniV1Registry.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setUniswapFactory(address)",
          "setUniswapRouter(address)",
          "setUniswapQuoter(address)",
          "setBaluniAgentFactory(address)",
          "setBaluniPoolPeriphery(address)",
          "setBaluniSwapper(address)",
          "setBaluniOracle(address)",
          "setBaluniPoolRegistry(address)",
          "setBaluniDCAVaultRegistry(address)",
          "setBaluniRebalancer(address)",
          "setBaluniRouter(address)",
          "setBaluniRegistry(address)",
          "setWNATIVE(address)",
          "setUSDC(address)",
          "setREBALANCE_THRESHOLD(uint256)",
          "setTreasury(address)",
          "set1inchSpotAgg(address)",
          "setBPS_FEE(uint256)",
          "setBaluniYearnVaultRegistry(address)",
          "setBaluniPoolZap(address)",
          "setBaluniHyperPoolZap(address)",
          "getUniswapQuoter()",
          "getUniswapFactory()",
          "getUniswapRouter()",
          "getBaluniSwapper()",
          "getBaluniOracle()",
          "getBaluniAgentFactory()",
          "getBaluniPoolPeriphery()",
          "getBaluniDCAVaultRegistry()",
          "getBaluniPoolRegistry()",
          "getBaluniRebalancer()",
          "getBaluniRouter()",
          "getBaluniRegistry()",
          "getWNATIVE()",
          "getUSDC()",
          "get1inchSpotAgg()",
          "getBPS_FEE()",
          "getMAX_BPS_FEE()",
          "getBPS_BASE()",
          "getREBALANCE_THRESHOLD()",
          "getTreasury()",
          "setStaticOracle(address)",
          "getStaticOracle()",
          "getBaluniYearnVaultRegistry()",
          "getBaluniPoolZap()",
          "getBaluniHyperPoolZap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Router.sol:IBaluniV1Router": {
        "src": "contracts/interfaces/IBaluniV1Router.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "_MAX_BPS_FEE()",
          "_BPS_FEE()",
          "_BPS_BASE()",
          "getTokens()",
          "USDC()",
          "WNATIVE()",
          "oracle()",
          "uniswapRouter()",
          "uniswapFactory()",
          "baluniFactory()",
          "baluniPeriphery()",
          "agentFactory()",
          "marketOracle()",
          "rebalancer()",
          "treasury()",
          "initialize(address,address,address,address,address,address)",
          "reinitialize(address,address,address,address,address,address,uint64)",
          "initializeMarketOracle(address)",
          "changeMarketOracle(address)",
          "changeBpsFee(uint256)",
          "changeTreasury(address)",
          "changeRebalancer(address)",
          "changeAgentFactory(address)",
          "execute(struct IBaluniV1Agent.Call[],address[])",
          "liquidate(address)",
          "liquidateAll()",
          "burnERC20(uint256)",
          "burnUSDC(uint256)",
          "getAgentAddress(address)",
          "mintWithUSDC(uint256)",
          "callRebalance(address[],uint256[],address,address,uint256,address)",
          "requiredUSDCtoMint(uint256)",
          "calculateTokenShare(uint256,uint256,uint256,uint256)",
          "tokenValuation(uint256,address)",
          "totalValuation()",
          "getUSDCShareValue(uint256)",
          "fetchMarketPrices()",
          "getVersion()",
          "unitPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Swapper.sol:IBaluniV1Swapper": {
        "src": "contracts/interfaces/IBaluniV1Swapper.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "singleSwap(address,address,uint256,address)",
          "multiHopSwap(address,address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1YearnVault.sol:IBaluniV1YearnVault": {
        "src": "contracts/interfaces/IBaluniV1YearnVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseAsset()",
          "yearnVault()",
          "quoteAsset()",
          "registry()",
          "lastDeposit()",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "buy()",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()",
          "interestEarned()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IStaticOracle.sol:IStaticOracle": {
        "src": "contracts/interfaces/IStaticOracle.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "UNISWAP_V3_FACTORY()",
          "CARDINALITY_PER_MINUTE()",
          "supportedFeeTiers()",
          "isPairSupported(address,address)",
          "getAllPoolsForPair(address,address)",
          "quoteAllAvailablePoolsWithTimePeriod(uint128,address,address,uint32)",
          "quoteSpecificFeeTiersWithTimePeriod(uint128,address,address,uint24[],uint32)",
          "quoteSpecificPoolsWithTimePeriod(uint128,address,address,address[],uint32)",
          "prepareAllAvailablePoolsWithTimePeriod(address,address,uint32)",
          "prepareSpecificFeeTiersWithTimePeriod(address,address,uint24[],uint32)",
          "prepareSpecificPoolsWithTimePeriod(address[],uint32)",
          "prepareAllAvailablePoolsWithCardinality(address,address,uint16)",
          "prepareSpecificFeeTiersWithCardinality(address,address,uint24[],uint16)",
          "prepareSpecificPoolsWithCardinality(address[],uint16)",
          "addNewFeeTier(uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IYearnVault.sol:IYearnVault": {
        "src": "contracts/interfaces/IYearnVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "asset()",
          "balanceOf(address)",
          "maxDeposit(address)",
          "redeem(uint256,address,address)",
          "deposit(uint256,address)",
          "totalAssets()",
          "convertToAssets(uint256)",
          "convertToShares(uint256)",
          "previewWithdraw(uint256)",
          "maxRedeem(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "contracts/libs/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b4b4c700a76811308eee6df41d4ecf97ec01a630e62dfdb37786fb9c7cc88e8b",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/ClonesUpgradeable.sol:ClonesUpgradeable": {
        "src": "contracts/libs/ClonesUpgradeable.sol:19",
        "version": {
          "withMetadata": "3c55e223059360a3aed8ef5f796df59794958639bed8913cd6789aaaa57e4f57",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/DSMath.sol:DSMath": {
        "src": "contracts/libs/DSMath.sol:20",
        "version": {
          "withMetadata": "aa02ffcc368d0d7948dfff7010b1b9f026de79464ab0ffd5b2eef34160dc1d36",
          "withoutMetadata": "d7e66f3490ae9a84ce01632c9357a9744e908d597973b7d263015ee6521bc2ba",
          "linkedWithoutMetadata": "d7e66f3490ae9a84ce01632c9357a9744e908d597973b7d263015ee6521bc2ba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable": {
        "src": "contracts/libs/EnumerableSetUpgradeable.sol:38",
        "version": {
          "withMetadata": "a8612c197221fb014521a7a74c61e03e3023d23300b15277753acb21359b87aa",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1HyperPoolZap.sol:BaluniV1HyperPoolZap": {
        "src": "contracts/managers/BaluniV1HyperPoolZap.sol:20",
        "version": {
          "withMetadata": "51b30a062a43d5f6c8443dbfd52fa36e19805ccb0f9a7e3dcf49a71030d91cf2",
          "withoutMetadata": "e213ef064ada57c341e0aaf78c86c0f36344fc12367b398b4c97867e87195d69",
          "linkedWithoutMetadata": "e213ef064ada57c341e0aaf78c86c0f36344fc12367b398b4c97867e87195d69"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "changeUniProxy(address)",
          "changeSwapper(address)",
          "changeRegistry(address)",
          "()",
          "zapIn(address,address,uint256,uint256,address)",
          "zapOut(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:21"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Swapper)5203",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:22"
            },
            {
              "label": "baluniHyperUniProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1HyperUniProxy)3919",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:23"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1HyperUniProxy)3919": {
              "label": "contract IBaluniV1HyperUniProxy",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Swapper)5203": {
              "label": "contract IBaluniV1Swapper",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1HyperPoolZap.sol:IWETH": {
        "src": "contracts/managers/BaluniV1HyperPoolZap.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:BaluniV1PoolZap": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:25",
        "version": {
          "withMetadata": "9b07d43818d19e995a833669992fb5d07ff02194423e9a8c482036fe61bd7195",
          "withoutMetadata": "3cf75d542c08ca50717704a4a49144ec64ddd8f00fda9d7dd17fd204217d37e3",
          "linkedWithoutMetadata": "3cf75d542c08ca50717704a4a49144ec64ddd8f00fda9d7dd17fd204217d37e3"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "()",
          "zapIn(address,address,uint256,uint256,address)",
          "zapOut(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:26"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Swapper)5203",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:27"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Swapper)5203": {
              "label": "contract IBaluniV1Swapper",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:IBaluniV1Pool": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "getAssets()",
          "getReserves()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:IWETH": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1Rebalancer.sol:BaluniV1Rebalancer": {
        "src": "contracts/managers/BaluniV1Rebalancer.sol:50",
        "version": {
          "withMetadata": "ece805a9704e6b52242f7914a14f2b195e1252164a597dc1a857024749b83246",
          "withoutMetadata": "3679da33a5a00ddd4af91a07c8885e76ef1ea4024e939b632fd7b58fefd58b6b",
          "linkedWithoutMetadata": "3679da33a5a00ddd4af91a07c8885e76ef1ea4024e939b632fd7b58fefd58b6b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "rebalance(uint256[],address[],uint256[],uint256,address,address,address)",
          "checkRebalance(uint256[],address[],uint256[],uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Rebalancer",
              "src": "contracts/managers/BaluniV1Rebalancer.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1Swapper.sol:BaluniV1Swapper": {
        "src": "contracts/managers/BaluniV1Swapper.sol:54",
        "version": {
          "withMetadata": "1339da00a44e3e12179f207b4e1217a44be64f3ba20cd381a3ede3b269e68ba8",
          "withoutMetadata": "d8e53f27623ce5366d7420695d8470aeaeacf164cc1294a582c5bc1e8c6d4e39",
          "linkedWithoutMetadata": "d8e53f27623ce5366d7420695d8470aeaeacf164cc1294a582c5bc1e8c6d4e39"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "singleSwap(address,address,uint256,address)",
          "multiHopSwap(address,address,address,uint256,address)",
          "setSlippagePercentage(uint256)",
          "getSlippagePercentage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Swapper",
              "src": "contracts/managers/BaluniV1Swapper.sol:55"
            },
            {
              "label": "slippagePct",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaluniV1Swapper",
              "src": "contracts/managers/BaluniV1Swapper.sol:236"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockOracle.sol:MockOracle": {
        "src": "contracts/mock/MockOracle.sol:8",
        "version": {
          "withMetadata": "70af83104684b8d71775a97e4173b0af55d879eba132cbbcc9374d5b4acd7329",
          "withoutMetadata": "30a4d87e0a8e3b86993c23c7457d57e6400c8983ce87f3fe23cdb4ce1d3cabfe",
          "linkedWithoutMetadata": "30a4d87e0a8e3b86993c23c7457d57e6400c8983ce87f3fe23cdb4ce1d3cabfe"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockOracle",
            "src": "contracts/mock/MockOracle.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "rates",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:9"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:37"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:38"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockRebalancer.sol:MockRebalancer": {
        "src": "contracts/mock/MockRebalancer.sol:8",
        "version": {
          "withMetadata": "853dd2f976bc67310ff125424bc7f34a0c021fbaa33e5f42b1041e729488214b",
          "withoutMetadata": "d456e6032d25a90cff23a3f770ec655158392893763a8c5b785953edf6e28623",
          "linkedWithoutMetadata": "d456e6032d25a90cff23a3f770ec655158392893763a8c5b785953edf6e28623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "setRate(address,address,uint256)",
          "getRate(address,address,bool)",
          "getRateToEth(address,bool)",
          "rebalance(address[],uint256[],address,address,uint256)",
          "checkRebalance(address[],uint256[],uint256[])",
          "getBaluniRouter()",
          "getTreasury()",
          "setTreasury(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockRebalancer",
            "src": "contracts/mock/MockRebalancer.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "rates",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:9"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:37"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:38"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockSwapRouter.sol:MockSwapRouter": {
        "src": "contracts/mock/MockSwapRouter.sol:6",
        "version": {
          "withMetadata": "9df30811dfb3b6489278999ce756a92e47e218f078b5893656f76c4ac0cac8fe",
          "withoutMetadata": "ff713788cdc37307fe1bada55ee96e22d8d7805454117737af265d5b32d008bc",
          "linkedWithoutMetadata": "ff713788cdc37307fe1bada55ee96e22d8d7805454117737af265d5b32d008bc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((address[],address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockToken.sol:MockToken": {
        "src": "contracts/mock/MockToken.sol:6",
        "version": {
          "withMetadata": "b9213b189631b86fe3afc990938d19730562c84fb5a85a37bf4cc652b8688daf",
          "withoutMetadata": "45de519ffe48b572b2f1e5d4b66850d3c5fbf213d062174edbd89ac1926bc917",
          "linkedWithoutMetadata": "45de519ffe48b572b2f1e5d4b66850d3c5fbf213d062174edbd89ac1926bc917"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8)",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mock/MockToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mock/MockToken.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/oracles/BaluniV1Oracle.sol:BaluniV1Oracle": {
        "src": "contracts/oracles/BaluniV1Oracle.sol:51",
        "version": {
          "withMetadata": "5dd42db4536e8340d241696e48d0c5674965ce3f11f3f14a860a25da9aed014e",
          "withoutMetadata": "535b1e98a44fe46d6a6fe66db908d04bce55c69afb85e55097c3738cfa8b5111",
          "linkedWithoutMetadata": "535b1e98a44fe46d6a6fe66db908d04bce55c69afb85e55097c3738cfa8b5111"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)",
          "convertWithAgg(address,address,uint256)",
          "convertScaledWithAgg(address,address,uint256)",
          "convertWithStaticOracle(address,address,uint256)",
          "convertScaledWithStaticOracle(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Oracle",
              "src": "contracts/oracles/BaluniV1Oracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1Agent.sol:BaluniV1Agent": {
        "src": "contracts/orchestators/BaluniV1Agent.sol:51",
        "version": {
          "withMetadata": "61854307bb457a127afdb3eb7e0bfedfc7ee6549bf15e5ced4325d7419794aed",
          "withoutMetadata": "653be002c444d1ecc716f0fefd9a20bd15048a526212538f6bef19c517b4ca5e",
          "linkedWithoutMetadata": "653be002c444d1ecc716f0fefd9a20bd15048a526212538f6bef19c517b4ca5e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libs/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "(address)",
          "initialize(address)",
          "execute(struct BaluniV1Agent.Call[],address[])",
          "getRouter()",
          "getFactory()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaluniV1Agent",
            "src": "contracts/orchestators/BaluniV1Agent.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1Agent",
              "src": "contracts/orchestators/BaluniV1Agent.sol:54"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1Agent",
              "src": "contracts/orchestators/BaluniV1Agent.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1AgentFactory.sol:BaluniV1AgentFactory": {
        "src": "contracts/orchestators/BaluniV1AgentFactory.sol:48",
        "version": {
          "withMetadata": "5281c0481910761a957c7b518eea2d93b22f102645700845cf9544257c013594",
          "withoutMetadata": "e476c11aab337f1c498ad9cab23ce60bd6927b7714b61c32dfc6bdfa602b442e",
          "linkedWithoutMetadata": "e476c11aab337f1c498ad9cab23ce60bd6927b7714b61c32dfc6bdfa602b442e"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libs/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [
          "changeImplementation()",
          "initialize(address)",
          "reinitialize(address,uint64)",
          "getAgentAddress(address)",
          "getOrCreateAgent(address)",
          "changeRegistry(address)",
          "getRegistry()",
          "changeRegistryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:50"
            },
            {
              "label": "userAgents",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_contract(BaluniV1Agent)11862)",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:52"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(BaluniV1Agent)11862": {
              "label": "contract BaluniV1Agent",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(BaluniV1Agent)11862)": {
              "label": "mapping(address => contract BaluniV1Agent)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1Router.sol:BaluniV1Router": {
        "src": "contracts/orchestators/BaluniV1Router.sol:58",
        "version": {
          "withMetadata": "a81d2e3331988e9d3311aa071c9df4c96cb577765a6b8e3f70f9113fbe9cc6c5",
          "withoutMetadata": "4ea3bdc149399e7974dbce905ccc245235e8aa2af8d14c2fe54c9e6d3f55dec2",
          "linkedWithoutMetadata": "4ea3bdc149399e7974dbce905ccc245235e8aa2af8d14c2fe54c9e6d3f55dec2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libs/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "resetContract(address)",
          "unitPrice()",
          "execute(struct IBaluniV1Agent.Call[],address[])",
          "liquidate(address)",
          "liquidateAll()",
          "burnERC20(uint256)",
          "burnUSDC(uint256)",
          "getAgentAddress(address)",
          "mintWithUSDC(uint256)",
          "callRebalance(address[],uint256[],address,address,uint256,address)",
          "requiredUSDCtoMint(uint256)",
          "calculateTokenShare(uint256,uint256,uint256,uint256)",
          "tokenValuation(uint256,address)",
          "totalValuation()",
          "getUSDCShareValue(uint256)",
          "getVersion()",
          "getTokens()",
          "addToken(address)",
          "removeToken(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "tokens",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)6313_storage",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:71"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:73"
            },
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)6313_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6012_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6012_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/pools/BaluniV1Pool.sol:BaluniV1Pool": {
        "src": "contracts/pools/BaluniV1Pool.sol:54",
        "version": {
          "withMetadata": "e701614858bcefb5da09e70cb8696a66875f61f3ef313778b3c863c8eb1f52e5",
          "withoutMetadata": "ffeb19e9f6ac820c55df15d8b02482f4736f1ae09a29e485457d273401623248",
          "linkedWithoutMetadata": "ffeb19e9f6ac820c55df15d8b02482f4736f1ae09a29e485457d273401623248"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Pool.sol:IBaluniV1Pool",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address[],uint256[],address)",
          "reinitialize(string,string,address[],uint256[],address,uint64)",
          "rebalanceAndDeposit(address)",
          "swap(address,address,uint256,uint256,address,uint256)",
          "quotePotentialSwap(address,address,uint256)",
          "getSlippage(address)",
          "getTokenWeight(address)",
          "getDeviationForToken(address)",
          "getSlippageParams()",
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "calculateAssetShare(uint256)",
          "getAmountOut(address,address,uint256)",
          "rebalance()",
          "getDeviations()",
          "assetLiquidity(uint256)",
          "totalValuation()",
          "liquidity()",
          "unitPrice()",
          "getReserves()",
          "getAssetReserve(address)",
          "getAssets()",
          "getWeights()",
          "isRebalanceNeeded()",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "assetInfos",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(AssetInfo)4247_storage)dyn_storage",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:64"
            },
            {
              "label": "ONE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:67"
            },
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:70"
            },
            {
              "label": "scalingFactor",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:73"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:76"
            },
            {
              "label": "reserves",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:81"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_struct(AssetInfo)4247_storage)dyn_storage": {
              "label": "struct IBaluniV1Pool.AssetInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_struct(AssetInfo)4247_storage": {
              "label": "struct IBaluniV1Pool.AssetInfo",
              "members": [
                {
                  "label": "asset",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "reserve",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/pools/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery": {
        "src": "contracts/pools/BaluniV1PoolPeriphery.sol:56",
        "version": {
          "withMetadata": "ac7bbe0690706db2cb7c02482fa00e2f22e36a3917f6657259806fa49c178f4c",
          "withoutMetadata": "280b5d30eb786286aa47e97c11566abc27c292b6b09fe576646dec0a25c0bcba",
          "linkedWithoutMetadata": "280b5d30eb786286aa47e97c11566abc27c292b6b09fe576646dec0a25c0bcba"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1PoolPeriphery.sol:IBaluniV1PoolPeriphery",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "swapTokenForToken(address,address,uint256,uint256,address,address,uint256)",
          "swapTokensForTokens(address[],address[],uint256,uint256,address,uint256)",
          "quotePotentialSwaps(address[],address[],uint256)",
          "batchSwap(address[],address[],uint256[],address[])",
          "getAmountOut(address,address,uint256)",
          "getPoolsContainingToken(address)",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolPeriphery",
              "src": "contracts/pools/BaluniV1PoolPeriphery.sol:63"
            },
            {
              "label": "poolsReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BaluniV1PoolPeriphery",
              "src": "contracts/pools/BaluniV1PoolPeriphery.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1DCAVaultRegistry.sol:BaluniV1DCAVaultRegistry": {
        "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:46",
        "version": {
          "withMetadata": "f6df1a09f76b3251363570b0dba87655dbd70cff7543933b098b740a43383a98",
          "withoutMetadata": "6dc22d4525b5f3245d65ce869f234a644629b283d640a818864a6755a0a12391",
          "linkedWithoutMetadata": "6dc22d4525b5f3245d65ce869f234a644629b283d640a818864a6755a0a12391"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addVault(address)",
          "getAllVaults()",
          "getVaultsCount()",
          "getVaultAsset(address)",
          "getVaultType1ByAssets(address,address)",
          "getVaultsByAsset(address)",
          "vaultExist(address)",
          "removeVault(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allVaults",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:49"
            },
            {
              "label": "getVault",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1PoolRegistry.sol:BaluniV1PoolRegistry": {
        "src": "contracts/registry/BaluniV1PoolRegistry.sol:46",
        "version": {
          "withMetadata": "83d2a5208aae095dc1ee61dd89cf6ced02ee96d04b91abc45e9105c280143cdd",
          "withoutMetadata": "70c371604d5e98ef0fdfe86a89d73c2e1b1c199318f4b4fd87cc89c6f9de2e8f",
          "linkedWithoutMetadata": "70c371604d5e98ef0fdfe86a89d73c2e1b1c199318f4b4fd87cc89c6f9de2e8f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addPool(address)",
          "getAllPools()",
          "getPoolsCount()",
          "getPoolAssets(address)",
          "getPoolByAssets(address,address)",
          "getPoolsByAsset(address)",
          "poolExist(address)",
          "removePool(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allPools",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:49"
            },
            {
              "label": "getPool",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1Registry.sol:BaluniV1Registry": {
        "src": "contracts/registry/BaluniV1Registry.sol:47",
        "version": {
          "withMetadata": "8a9eac34c7c302209ff29e266ea2b50c4fe214970be23806d7c588eb3493aae9",
          "withoutMetadata": "b9b08068343ec496abd3666eac736e184cb3ba1cdbaf1f43e16a9a38875774c2",
          "linkedWithoutMetadata": "b9b08068343ec496abd3666eac736e184cb3ba1cdbaf1f43e16a9a38875774c2"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Registry.sol:IBaluniV1Registry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "setTreasury(address)",
          "setUniswapFactory(address)",
          "setUniswapRouter(address)",
          "setBaluniSwapper(address)",
          "setBaluniOracle(address)",
          "setBaluniAgentFactory(address)",
          "setBaluniPoolPeriphery(address)",
          "setBaluniPoolRegistry(address)",
          "setBaluniRebalancer(address)",
          "setBaluniYearnVaultRegistry(address)",
          "setBaluniRouter(address)",
          "setBaluniRegistry(address)",
          "setWNATIVE(address)",
          "setUSDC(address)",
          "set1inchSpotAgg(address)",
          "setStaticOracle(address)",
          "setBaluniDCAVaultRegistry(address)",
          "setBPS_FEE(uint256)",
          "setREBALANCE_THRESHOLD(uint256)",
          "getUniswapFactory()",
          "getUniswapRouter()",
          "getBaluniSwapper()",
          "getBaluniOracle()",
          "getBaluniAgentFactory()",
          "getBaluniPoolPeriphery()",
          "getBaluniPoolRegistry()",
          "getBaluniRebalancer()",
          "getBaluniRouter()",
          "getBaluniRegistry()",
          "getWNATIVE()",
          "getUSDC()",
          "get1inchSpotAgg()",
          "getBPS_FEE()",
          "getMAX_BPS_FEE()",
          "getBPS_BASE()",
          "getREBALANCE_THRESHOLD()",
          "getTreasury()",
          "getStaticOracle()",
          "getBaluniYearnVaultRegistry()",
          "getBaluniDCAVaultRegistry()",
          "setUniswapQuoter(address)",
          "getUniswapQuoter()",
          "setBaluniPoolZap(address)",
          "getBaluniPoolZap()",
          "setBaluniHyperPoolZap(address)",
          "getBaluniHyperPoolZap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uniswapFactory",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:48"
            },
            {
              "label": "uniswapRouter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:49"
            },
            {
              "label": "baluniAgentFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:50"
            },
            {
              "label": "baluniPoolPeriphery",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:51"
            },
            {
              "label": "baluniPoolRegistry",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:52"
            },
            {
              "label": "baluniRebalancer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:53"
            },
            {
              "label": "baluniRouter",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:54"
            },
            {
              "label": "baluniRegistry",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:55"
            },
            {
              "label": "baluniOracle",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:56"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:57"
            },
            {
              "label": "baluniYearnVaultRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:58"
            },
            {
              "label": "baluniDCAVaultRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:59"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:61"
            },
            {
              "label": "staticOracle",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:62"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:63"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:64"
            },
            {
              "label": "_1inchSpotAgg",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:65"
            },
            {
              "label": "_MAX_BPS_FEE",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:66"
            },
            {
              "label": "_BPS_FEE",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:67"
            },
            {
              "label": "_BPS_BASE",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:68"
            },
            {
              "label": "_REBALANCE_THRESHOLD",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:69"
            },
            {
              "label": "uniswapQuoter",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:243"
            },
            {
              "label": "baluniPoolZap",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:255"
            },
            {
              "label": "baluniHyperPoolZap",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:267"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1YearnVaultRegistry.sol:BaluniV1YearnVaultRegistry": {
        "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:46",
        "version": {
          "withMetadata": "3ac28a1f4c9be5a3d9a4c09588003b5ba52ff05333f05869a16f6fb99e306371",
          "withoutMetadata": "830653c10a583025ae5085514ca1aee0b959a2ea92a4267621b977b962dc7eba",
          "linkedWithoutMetadata": "830653c10a583025ae5085514ca1aee0b959a2ea92a4267621b977b962dc7eba"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addVault(address)",
          "getAllVaults()",
          "getVaultsCount()",
          "getVaultAsset(address)",
          "getVaultType1ByAssets(address,address)",
          "getVaultType0ByAsset(address)",
          "getVaultsByAsset(address)",
          "vaultExist(address)",
          "removeVault(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allVaults",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:49"
            },
            {
              "label": "getVaultType0",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:51"
            },
            {
              "label": "getVaultType1",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault": {
        "src": "contracts/vaults/BaluniV1DCAVault.sol:16",
        "version": {
          "withMetadata": "b173ad54a220a952c2845066f1b8d06924869ead6aeaabd66381e22fbc569d58",
          "withoutMetadata": "57d10c202624e3cbee7b6c8dca2fb2fa9ee91211e8d80634b974c77d44e48afb",
          "linkedWithoutMetadata": "57d10c202624e3cbee7b6c8dca2fb2fa9ee91211e8d80634b974c77d44e48afb"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1DCAVault.sol:IBaluniV1DCAVault",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address,address,address,uint256)",
          "reinitialize(string,string,address,address,address,uint256,uint64)",
          "changeReinvestDuration(uint256)",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "systemDeposit()",
          "getAmountToSwap()",
          "canSystemDeposit()",
          "pause()",
          "unpause()",
          "unitPrice()",
          "registry()",
          "setExecutor(address,bool)",
          "totalValuation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:25"
            },
            {
              "label": "quoteAsset",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:26"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:28"
            },
            {
              "label": "accumulatedAssetB",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:29"
            },
            {
              "label": "lastDeposit",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:31"
            },
            {
              "label": "lastInvestedBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:32"
            },
            {
              "label": "maxPerSwap",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:33"
            },
            {
              "label": "swapDuration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:34"
            },
            {
              "label": "reinvestDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:35"
            },
            {
              "label": "executors",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/vaults/BaluniV1YearnVault.sol:BaluniV1YearnVault": {
        "src": "contracts/vaults/BaluniV1YearnVault.sol:17",
        "version": {
          "withMetadata": "d1f9fd9de979d216cf756a00dd8fc34cc14f95168fb0df32b3f8a7282966dfe3",
          "withoutMetadata": "ebe9f3104cf3dc643ac3908beaf8e9f57fed126153a36a3a97dfeb7cf9402602",
          "linkedWithoutMetadata": "ebe9f3104cf3dc643ac3908beaf8e9f57fed126153a36a3a97dfeb7cf9402602"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1YearnVault.sol:IBaluniV1YearnVault",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address,address,address,address)",
          "reinitialize(string,string,address,address,address,address,uint64)",
          "deposit(uint256,address)",
          "buy()",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()",
          "registry()",
          "yearnVault()",
          "interestEarned()",
          "withdraw(uint256,address)",
          "handleWithdrawB(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:26"
            },
            {
              "label": "_yearnVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IYearnVault)5526",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:27"
            },
            {
              "label": "quoteAsset",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:28"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:29"
            },
            {
              "label": "accumulatedAssetB",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:31"
            },
            {
              "label": "lastDeposit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:32"
            },
            {
              "label": "allTimeInterest",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IYearnVault)5526": {
              "label": "contract IYearnVault",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      }
    },
    {
      "contracts/libs/IERC20.sol:IERC20": {
        "src": "contracts/libs/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libs/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/libs/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/libs/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/libs/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "e639b75d1d80f35f1dbda2502514677ab3855c3e5c74bec4365f9305c22aeded",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "953ea46d64e5f0ee1eae596c2a8de43f16525b772b23dfa5a94b68cfd31750b5",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "d9843de46531a064c8d91497c0414ab8762811a3021413140667e2994acc5791",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:IQuoter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteExactInput(bytes,uint256)",
          "quoteExactInputSingle(address,address,uint24,uint256,uint160)",
          "quoteExactOutput(bytes,uint256)",
          "quoteExactOutputSingle(address,address,uint24,uint256,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/I1inchSpotAgg.sol:I1inchSpotAgg": {
        "src": "contracts/interfaces/I1inchSpotAgg.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRate(address,address,bool)",
          "getRateToEth(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Agent.sol:IBaluniV1Agent": {
        "src": "contracts/interfaces/IBaluniV1Agent.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execute(struct IBaluniV1Agent.Call[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1AgentFactory.sol:IBaluniV1AgentFactory": {
        "src": "contracts/interfaces/IBaluniV1AgentFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAgentAddress(address)",
          "getOrCreateAgent(address)",
          "getRegistry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1DCAVault.sol:IBaluniV1DCAVault": {
        "src": "contracts/interfaces/IBaluniV1DCAVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseAsset()",
          "quoteAsset()",
          "registry()",
          "lastDeposit()",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1HyperUniProxy.sol:IBaluniV1HyperUniProxy": {
        "src": "contracts/interfaces/IBaluniV1HyperUniProxy.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256,uint256,address,address,address)",
          "getDepositAmount(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Hypervisor.sol:IBaluniV1Hypervisor": {
        "src": "contracts/interfaces/IBaluniV1Hypervisor.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256,uint256,address,address,uint256[4])",
          "withdraw(uint256,address,address,uint256[4])",
          "compound()",
          "compound(uint256[4])",
          "rebalance(int24,int24,int24,int24,address,uint256[4],uint256[4])",
          "addBaseLiquidity(uint256,uint256,uint256[2])",
          "addLimitLiquidity(uint256,uint256,uint256[2])",
          "pullLiquidity(int24,int24,uint128,uint256[2])",
          "pullLiquidity(uint256,uint256[4])",
          "addLiquidity(int24,int24,uint256,uint256,uint256[2])",
          "pool()",
          "currentTick()",
          "tickSpacing()",
          "baseLower()",
          "baseUpper()",
          "limitLower()",
          "limitUpper()",
          "token0()",
          "token1()",
          "deposit0Max()",
          "deposit1Max()",
          "balanceOf(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "getTotalAmounts()",
          "getBasePosition()",
          "totalSupply()",
          "setWhitelist(address)",
          "setFee(uint8)",
          "removeWhitelisted()",
          "transferOwnership(address)",
          "toggleDirectDeposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle": {
        "src": "contracts/interfaces/IBaluniV1Oracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Pool.sol:IBaluniV1Pool": {
        "src": "contracts/interfaces/IBaluniV1Pool.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rebalanceAndDeposit(address)",
          "swap(address,address,uint256,uint256,address,uint256)",
          "quotePotentialSwap(address,address,uint256)",
          "getSlippage(address)",
          "getTokenWeight(address)",
          "getDeviationForToken(address)",
          "getSlippageParams()",
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "getAmountOut(address,address,uint256)",
          "rebalance()",
          "getDeviations()",
          "assetLiquidity(uint256)",
          "totalValuation()",
          "liquidity()",
          "unitPrice()",
          "getReserves()",
          "getAssetReserve(address)",
          "getAssets()",
          "getWeights()",
          "isRebalanceNeeded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1PoolPeriphery.sol:IBaluniV1PoolPeriphery": {
        "src": "contracts/interfaces/IBaluniV1PoolPeriphery.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "swapTokenForToken(address,address,uint256,uint256,address,address,uint256)",
          "swapTokensForTokens(address[],address[],uint256,uint256,address,uint256)",
          "batchSwap(address[],address[],uint256[],address[])",
          "getAmountOut(address,address,uint256)",
          "getPoolsContainingToken(address)",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1PoolRegistry.sol:IBaluniV1PoolRegistry": {
        "src": "contracts/interfaces/IBaluniV1PoolRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPoolByAssets(address,address)",
          "getPoolsByAsset(address)",
          "poolExist(address)",
          "getAllPools()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Rebalancer.sol:IBaluniV1Rebalancer": {
        "src": "contracts/interfaces/IBaluniV1Rebalancer.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rebalance(uint256[],address[],uint256[],uint256,address,address,address)",
          "checkRebalance(uint256[],address[],uint256[],uint256,address,address)",
          "convert(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Registry.sol:IBaluniV1Registry": {
        "src": "contracts/interfaces/IBaluniV1Registry.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setUniswapFactory(address)",
          "setUniswapRouter(address)",
          "setUniswapQuoter(address)",
          "setBaluniAgentFactory(address)",
          "setBaluniPoolPeriphery(address)",
          "setBaluniSwapper(address)",
          "setBaluniOracle(address)",
          "setBaluniPoolRegistry(address)",
          "setBaluniDCAVaultRegistry(address)",
          "setBaluniRebalancer(address)",
          "setBaluniRouter(address)",
          "setBaluniRegistry(address)",
          "setWNATIVE(address)",
          "setUSDC(address)",
          "setREBALANCE_THRESHOLD(uint256)",
          "setTreasury(address)",
          "set1inchSpotAgg(address)",
          "setBPS_FEE(uint256)",
          "setBaluniYearnVaultRegistry(address)",
          "setBaluniPoolZap(address)",
          "setBaluniHyperPoolZap(address)",
          "getUniswapQuoter()",
          "getUniswapFactory()",
          "getUniswapRouter()",
          "getBaluniSwapper()",
          "getBaluniOracle()",
          "getBaluniAgentFactory()",
          "getBaluniPoolPeriphery()",
          "getBaluniDCAVaultRegistry()",
          "getBaluniPoolRegistry()",
          "getBaluniRebalancer()",
          "getBaluniRouter()",
          "getBaluniRegistry()",
          "getWNATIVE()",
          "getUSDC()",
          "get1inchSpotAgg()",
          "getBPS_FEE()",
          "getMAX_BPS_FEE()",
          "getBPS_BASE()",
          "getREBALANCE_THRESHOLD()",
          "getTreasury()",
          "setStaticOracle(address)",
          "getStaticOracle()",
          "getBaluniYearnVaultRegistry()",
          "getBaluniPoolZap()",
          "getBaluniHyperPoolZap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Router.sol:IBaluniV1Router": {
        "src": "contracts/interfaces/IBaluniV1Router.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "_MAX_BPS_FEE()",
          "_BPS_FEE()",
          "_BPS_BASE()",
          "getTokens()",
          "USDC()",
          "WNATIVE()",
          "oracle()",
          "uniswapRouter()",
          "uniswapFactory()",
          "baluniFactory()",
          "baluniPeriphery()",
          "agentFactory()",
          "marketOracle()",
          "rebalancer()",
          "treasury()",
          "initialize(address,address,address,address,address,address)",
          "reinitialize(address,address,address,address,address,address,uint64)",
          "initializeMarketOracle(address)",
          "changeMarketOracle(address)",
          "changeBpsFee(uint256)",
          "changeTreasury(address)",
          "changeRebalancer(address)",
          "changeAgentFactory(address)",
          "execute(struct IBaluniV1Agent.Call[],address[])",
          "liquidate(address)",
          "liquidateAll()",
          "burnERC20(uint256)",
          "burnUSDC(uint256)",
          "getAgentAddress(address)",
          "mintWithUSDC(uint256)",
          "callRebalance(address[],uint256[],address,address,uint256,address)",
          "requiredUSDCtoMint(uint256)",
          "calculateTokenShare(uint256,uint256,uint256,uint256)",
          "tokenValuation(uint256,address)",
          "totalValuation()",
          "getUSDCShareValue(uint256)",
          "fetchMarketPrices()",
          "getVersion()",
          "unitPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Swapper.sol:IBaluniV1Swapper": {
        "src": "contracts/interfaces/IBaluniV1Swapper.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "singleSwap(address,address,uint256,address)",
          "multiHopSwap(address,address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1YearnVault.sol:IBaluniV1YearnVault": {
        "src": "contracts/interfaces/IBaluniV1YearnVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseAsset()",
          "yearnVault()",
          "quoteAsset()",
          "registry()",
          "lastDeposit()",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "buy()",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()",
          "interestEarned()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IStaticOracle.sol:IStaticOracle": {
        "src": "contracts/interfaces/IStaticOracle.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "UNISWAP_V3_FACTORY()",
          "CARDINALITY_PER_MINUTE()",
          "supportedFeeTiers()",
          "isPairSupported(address,address)",
          "getAllPoolsForPair(address,address)",
          "quoteAllAvailablePoolsWithTimePeriod(uint128,address,address,uint32)",
          "quoteSpecificFeeTiersWithTimePeriod(uint128,address,address,uint24[],uint32)",
          "quoteSpecificPoolsWithTimePeriod(uint128,address,address,address[],uint32)",
          "prepareAllAvailablePoolsWithTimePeriod(address,address,uint32)",
          "prepareSpecificFeeTiersWithTimePeriod(address,address,uint24[],uint32)",
          "prepareSpecificPoolsWithTimePeriod(address[],uint32)",
          "prepareAllAvailablePoolsWithCardinality(address,address,uint16)",
          "prepareSpecificFeeTiersWithCardinality(address,address,uint24[],uint16)",
          "prepareSpecificPoolsWithCardinality(address[],uint16)",
          "addNewFeeTier(uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IYearnVault.sol:IYearnVault": {
        "src": "contracts/interfaces/IYearnVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "asset()",
          "balanceOf(address)",
          "maxDeposit(address)",
          "redeem(uint256,address,address)",
          "deposit(uint256,address)",
          "totalAssets()",
          "convertToAssets(uint256)",
          "convertToShares(uint256)",
          "previewWithdraw(uint256)",
          "maxRedeem(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "contracts/libs/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b4b4c700a76811308eee6df41d4ecf97ec01a630e62dfdb37786fb9c7cc88e8b",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/ClonesUpgradeable.sol:ClonesUpgradeable": {
        "src": "contracts/libs/ClonesUpgradeable.sol:19",
        "version": {
          "withMetadata": "3c55e223059360a3aed8ef5f796df59794958639bed8913cd6789aaaa57e4f57",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/DSMath.sol:DSMath": {
        "src": "contracts/libs/DSMath.sol:20",
        "version": {
          "withMetadata": "aa02ffcc368d0d7948dfff7010b1b9f026de79464ab0ffd5b2eef34160dc1d36",
          "withoutMetadata": "d7e66f3490ae9a84ce01632c9357a9744e908d597973b7d263015ee6521bc2ba",
          "linkedWithoutMetadata": "d7e66f3490ae9a84ce01632c9357a9744e908d597973b7d263015ee6521bc2ba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable": {
        "src": "contracts/libs/EnumerableSetUpgradeable.sol:38",
        "version": {
          "withMetadata": "a8612c197221fb014521a7a74c61e03e3023d23300b15277753acb21359b87aa",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1HyperPoolZap.sol:BaluniV1HyperPoolZap": {
        "src": "contracts/managers/BaluniV1HyperPoolZap.sol:20",
        "version": {
          "withMetadata": "51b30a062a43d5f6c8443dbfd52fa36e19805ccb0f9a7e3dcf49a71030d91cf2",
          "withoutMetadata": "e213ef064ada57c341e0aaf78c86c0f36344fc12367b398b4c97867e87195d69",
          "linkedWithoutMetadata": "e213ef064ada57c341e0aaf78c86c0f36344fc12367b398b4c97867e87195d69"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "changeUniProxy(address)",
          "changeSwapper(address)",
          "changeRegistry(address)",
          "()",
          "zapIn(address,address,uint256,uint256,address)",
          "zapOut(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:21"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Swapper)5203",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:22"
            },
            {
              "label": "baluniHyperUniProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1HyperUniProxy)3919",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:23"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1HyperUniProxy)3919": {
              "label": "contract IBaluniV1HyperUniProxy",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Swapper)5203": {
              "label": "contract IBaluniV1Swapper",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1HyperPoolZap.sol:IWETH": {
        "src": "contracts/managers/BaluniV1HyperPoolZap.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:BaluniV1PoolZap": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:25",
        "version": {
          "withMetadata": "9b07d43818d19e995a833669992fb5d07ff02194423e9a8c482036fe61bd7195",
          "withoutMetadata": "3cf75d542c08ca50717704a4a49144ec64ddd8f00fda9d7dd17fd204217d37e3",
          "linkedWithoutMetadata": "3cf75d542c08ca50717704a4a49144ec64ddd8f00fda9d7dd17fd204217d37e3"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "()",
          "zapIn(address,address,uint256,uint256,address)",
          "zapOut(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:26"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Swapper)5203",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:27"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Swapper)5203": {
              "label": "contract IBaluniV1Swapper",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:IBaluniV1Pool": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "getAssets()",
          "getReserves()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:IWETH": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1Rebalancer.sol:BaluniV1Rebalancer": {
        "src": "contracts/managers/BaluniV1Rebalancer.sol:50",
        "version": {
          "withMetadata": "ece805a9704e6b52242f7914a14f2b195e1252164a597dc1a857024749b83246",
          "withoutMetadata": "3679da33a5a00ddd4af91a07c8885e76ef1ea4024e939b632fd7b58fefd58b6b",
          "linkedWithoutMetadata": "3679da33a5a00ddd4af91a07c8885e76ef1ea4024e939b632fd7b58fefd58b6b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "rebalance(uint256[],address[],uint256[],uint256,address,address,address)",
          "checkRebalance(uint256[],address[],uint256[],uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Rebalancer",
              "src": "contracts/managers/BaluniV1Rebalancer.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1Swapper.sol:BaluniV1Swapper": {
        "src": "contracts/managers/BaluniV1Swapper.sol:54",
        "version": {
          "withMetadata": "1339da00a44e3e12179f207b4e1217a44be64f3ba20cd381a3ede3b269e68ba8",
          "withoutMetadata": "d8e53f27623ce5366d7420695d8470aeaeacf164cc1294a582c5bc1e8c6d4e39",
          "linkedWithoutMetadata": "d8e53f27623ce5366d7420695d8470aeaeacf164cc1294a582c5bc1e8c6d4e39"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "singleSwap(address,address,uint256,address)",
          "multiHopSwap(address,address,address,uint256,address)",
          "setSlippagePercentage(uint256)",
          "getSlippagePercentage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Swapper",
              "src": "contracts/managers/BaluniV1Swapper.sol:55"
            },
            {
              "label": "slippagePct",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaluniV1Swapper",
              "src": "contracts/managers/BaluniV1Swapper.sol:236"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockOracle.sol:MockOracle": {
        "src": "contracts/mock/MockOracle.sol:8",
        "version": {
          "withMetadata": "70af83104684b8d71775a97e4173b0af55d879eba132cbbcc9374d5b4acd7329",
          "withoutMetadata": "30a4d87e0a8e3b86993c23c7457d57e6400c8983ce87f3fe23cdb4ce1d3cabfe",
          "linkedWithoutMetadata": "30a4d87e0a8e3b86993c23c7457d57e6400c8983ce87f3fe23cdb4ce1d3cabfe"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockOracle",
            "src": "contracts/mock/MockOracle.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "rates",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:9"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:37"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:38"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockRebalancer.sol:MockRebalancer": {
        "src": "contracts/mock/MockRebalancer.sol:8",
        "version": {
          "withMetadata": "853dd2f976bc67310ff125424bc7f34a0c021fbaa33e5f42b1041e729488214b",
          "withoutMetadata": "d456e6032d25a90cff23a3f770ec655158392893763a8c5b785953edf6e28623",
          "linkedWithoutMetadata": "d456e6032d25a90cff23a3f770ec655158392893763a8c5b785953edf6e28623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "setRate(address,address,uint256)",
          "getRate(address,address,bool)",
          "getRateToEth(address,bool)",
          "rebalance(address[],uint256[],address,address,uint256)",
          "checkRebalance(address[],uint256[],uint256[])",
          "getBaluniRouter()",
          "getTreasury()",
          "setTreasury(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockRebalancer",
            "src": "contracts/mock/MockRebalancer.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "rates",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:9"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:37"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:38"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockSwapRouter.sol:MockSwapRouter": {
        "src": "contracts/mock/MockSwapRouter.sol:6",
        "version": {
          "withMetadata": "9df30811dfb3b6489278999ce756a92e47e218f078b5893656f76c4ac0cac8fe",
          "withoutMetadata": "ff713788cdc37307fe1bada55ee96e22d8d7805454117737af265d5b32d008bc",
          "linkedWithoutMetadata": "ff713788cdc37307fe1bada55ee96e22d8d7805454117737af265d5b32d008bc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((address[],address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockToken.sol:MockToken": {
        "src": "contracts/mock/MockToken.sol:6",
        "version": {
          "withMetadata": "b9213b189631b86fe3afc990938d19730562c84fb5a85a37bf4cc652b8688daf",
          "withoutMetadata": "45de519ffe48b572b2f1e5d4b66850d3c5fbf213d062174edbd89ac1926bc917",
          "linkedWithoutMetadata": "45de519ffe48b572b2f1e5d4b66850d3c5fbf213d062174edbd89ac1926bc917"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8)",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mock/MockToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mock/MockToken.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/oracles/BaluniV1Oracle.sol:BaluniV1Oracle": {
        "src": "contracts/oracles/BaluniV1Oracle.sol:51",
        "version": {
          "withMetadata": "5dd42db4536e8340d241696e48d0c5674965ce3f11f3f14a860a25da9aed014e",
          "withoutMetadata": "535b1e98a44fe46d6a6fe66db908d04bce55c69afb85e55097c3738cfa8b5111",
          "linkedWithoutMetadata": "535b1e98a44fe46d6a6fe66db908d04bce55c69afb85e55097c3738cfa8b5111"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)",
          "convertWithAgg(address,address,uint256)",
          "convertScaledWithAgg(address,address,uint256)",
          "convertWithStaticOracle(address,address,uint256)",
          "convertScaledWithStaticOracle(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Oracle",
              "src": "contracts/oracles/BaluniV1Oracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1Agent.sol:BaluniV1Agent": {
        "src": "contracts/orchestators/BaluniV1Agent.sol:51",
        "version": {
          "withMetadata": "61854307bb457a127afdb3eb7e0bfedfc7ee6549bf15e5ced4325d7419794aed",
          "withoutMetadata": "653be002c444d1ecc716f0fefd9a20bd15048a526212538f6bef19c517b4ca5e",
          "linkedWithoutMetadata": "653be002c444d1ecc716f0fefd9a20bd15048a526212538f6bef19c517b4ca5e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libs/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "(address)",
          "initialize(address)",
          "execute(struct BaluniV1Agent.Call[],address[])",
          "getRouter()",
          "getFactory()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaluniV1Agent",
            "src": "contracts/orchestators/BaluniV1Agent.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1Agent",
              "src": "contracts/orchestators/BaluniV1Agent.sol:54"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1Agent",
              "src": "contracts/orchestators/BaluniV1Agent.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1AgentFactory.sol:BaluniV1AgentFactory": {
        "src": "contracts/orchestators/BaluniV1AgentFactory.sol:48",
        "version": {
          "withMetadata": "5281c0481910761a957c7b518eea2d93b22f102645700845cf9544257c013594",
          "withoutMetadata": "e476c11aab337f1c498ad9cab23ce60bd6927b7714b61c32dfc6bdfa602b442e",
          "linkedWithoutMetadata": "e476c11aab337f1c498ad9cab23ce60bd6927b7714b61c32dfc6bdfa602b442e"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libs/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [
          "changeImplementation()",
          "initialize(address)",
          "reinitialize(address,uint64)",
          "getAgentAddress(address)",
          "getOrCreateAgent(address)",
          "changeRegistry(address)",
          "getRegistry()",
          "changeRegistryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:50"
            },
            {
              "label": "userAgents",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_contract(BaluniV1Agent)11862)",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:52"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(BaluniV1Agent)11862": {
              "label": "contract BaluniV1Agent",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(BaluniV1Agent)11862)": {
              "label": "mapping(address => contract BaluniV1Agent)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1Router.sol:BaluniV1Router": {
        "src": "contracts/orchestators/BaluniV1Router.sol:58",
        "version": {
          "withMetadata": "a81d2e3331988e9d3311aa071c9df4c96cb577765a6b8e3f70f9113fbe9cc6c5",
          "withoutMetadata": "4ea3bdc149399e7974dbce905ccc245235e8aa2af8d14c2fe54c9e6d3f55dec2",
          "linkedWithoutMetadata": "4ea3bdc149399e7974dbce905ccc245235e8aa2af8d14c2fe54c9e6d3f55dec2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libs/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "resetContract(address)",
          "unitPrice()",
          "execute(struct IBaluniV1Agent.Call[],address[])",
          "liquidate(address)",
          "liquidateAll()",
          "burnERC20(uint256)",
          "burnUSDC(uint256)",
          "getAgentAddress(address)",
          "mintWithUSDC(uint256)",
          "callRebalance(address[],uint256[],address,address,uint256,address)",
          "requiredUSDCtoMint(uint256)",
          "calculateTokenShare(uint256,uint256,uint256,uint256)",
          "tokenValuation(uint256,address)",
          "totalValuation()",
          "getUSDCShareValue(uint256)",
          "getVersion()",
          "getTokens()",
          "addToken(address)",
          "removeToken(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "tokens",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)6313_storage",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:71"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:73"
            },
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)6313_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6012_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6012_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/pools/BaluniV1Pool.sol:BaluniV1Pool": {
        "src": "contracts/pools/BaluniV1Pool.sol:54",
        "version": {
          "withMetadata": "e701614858bcefb5da09e70cb8696a66875f61f3ef313778b3c863c8eb1f52e5",
          "withoutMetadata": "ffeb19e9f6ac820c55df15d8b02482f4736f1ae09a29e485457d273401623248",
          "linkedWithoutMetadata": "ffeb19e9f6ac820c55df15d8b02482f4736f1ae09a29e485457d273401623248"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Pool.sol:IBaluniV1Pool",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address[],uint256[],address)",
          "reinitialize(string,string,address[],uint256[],address,uint64)",
          "rebalanceAndDeposit(address)",
          "swap(address,address,uint256,uint256,address,uint256)",
          "quotePotentialSwap(address,address,uint256)",
          "getSlippage(address)",
          "getTokenWeight(address)",
          "getDeviationForToken(address)",
          "getSlippageParams()",
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "calculateAssetShare(uint256)",
          "getAmountOut(address,address,uint256)",
          "rebalance()",
          "getDeviations()",
          "assetLiquidity(uint256)",
          "totalValuation()",
          "liquidity()",
          "unitPrice()",
          "getReserves()",
          "getAssetReserve(address)",
          "getAssets()",
          "getWeights()",
          "isRebalanceNeeded()",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "assetInfos",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(AssetInfo)4247_storage)dyn_storage",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:64"
            },
            {
              "label": "ONE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:67"
            },
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:70"
            },
            {
              "label": "scalingFactor",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:73"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:76"
            },
            {
              "label": "reserves",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:81"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_struct(AssetInfo)4247_storage)dyn_storage": {
              "label": "struct IBaluniV1Pool.AssetInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_struct(AssetInfo)4247_storage": {
              "label": "struct IBaluniV1Pool.AssetInfo",
              "members": [
                {
                  "label": "asset",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "reserve",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/pools/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery": {
        "src": "contracts/pools/BaluniV1PoolPeriphery.sol:56",
        "version": {
          "withMetadata": "ac7bbe0690706db2cb7c02482fa00e2f22e36a3917f6657259806fa49c178f4c",
          "withoutMetadata": "280b5d30eb786286aa47e97c11566abc27c292b6b09fe576646dec0a25c0bcba",
          "linkedWithoutMetadata": "280b5d30eb786286aa47e97c11566abc27c292b6b09fe576646dec0a25c0bcba"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1PoolPeriphery.sol:IBaluniV1PoolPeriphery",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "swapTokenForToken(address,address,uint256,uint256,address,address,uint256)",
          "swapTokensForTokens(address[],address[],uint256,uint256,address,uint256)",
          "quotePotentialSwaps(address[],address[],uint256)",
          "batchSwap(address[],address[],uint256[],address[])",
          "getAmountOut(address,address,uint256)",
          "getPoolsContainingToken(address)",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolPeriphery",
              "src": "contracts/pools/BaluniV1PoolPeriphery.sol:63"
            },
            {
              "label": "poolsReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BaluniV1PoolPeriphery",
              "src": "contracts/pools/BaluniV1PoolPeriphery.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1DCAVaultRegistry.sol:BaluniV1DCAVaultRegistry": {
        "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:46",
        "version": {
          "withMetadata": "f6df1a09f76b3251363570b0dba87655dbd70cff7543933b098b740a43383a98",
          "withoutMetadata": "6dc22d4525b5f3245d65ce869f234a644629b283d640a818864a6755a0a12391",
          "linkedWithoutMetadata": "6dc22d4525b5f3245d65ce869f234a644629b283d640a818864a6755a0a12391"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addVault(address)",
          "getAllVaults()",
          "getVaultsCount()",
          "getVaultAsset(address)",
          "getVaultType1ByAssets(address,address)",
          "getVaultsByAsset(address)",
          "vaultExist(address)",
          "removeVault(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allVaults",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:49"
            },
            {
              "label": "getVault",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1PoolRegistry.sol:BaluniV1PoolRegistry": {
        "src": "contracts/registry/BaluniV1PoolRegistry.sol:46",
        "version": {
          "withMetadata": "83d2a5208aae095dc1ee61dd89cf6ced02ee96d04b91abc45e9105c280143cdd",
          "withoutMetadata": "70c371604d5e98ef0fdfe86a89d73c2e1b1c199318f4b4fd87cc89c6f9de2e8f",
          "linkedWithoutMetadata": "70c371604d5e98ef0fdfe86a89d73c2e1b1c199318f4b4fd87cc89c6f9de2e8f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addPool(address)",
          "getAllPools()",
          "getPoolsCount()",
          "getPoolAssets(address)",
          "getPoolByAssets(address,address)",
          "getPoolsByAsset(address)",
          "poolExist(address)",
          "removePool(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allPools",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:49"
            },
            {
              "label": "getPool",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1Registry.sol:BaluniV1Registry": {
        "src": "contracts/registry/BaluniV1Registry.sol:47",
        "version": {
          "withMetadata": "8a9eac34c7c302209ff29e266ea2b50c4fe214970be23806d7c588eb3493aae9",
          "withoutMetadata": "b9b08068343ec496abd3666eac736e184cb3ba1cdbaf1f43e16a9a38875774c2",
          "linkedWithoutMetadata": "b9b08068343ec496abd3666eac736e184cb3ba1cdbaf1f43e16a9a38875774c2"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Registry.sol:IBaluniV1Registry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "setTreasury(address)",
          "setUniswapFactory(address)",
          "setUniswapRouter(address)",
          "setBaluniSwapper(address)",
          "setBaluniOracle(address)",
          "setBaluniAgentFactory(address)",
          "setBaluniPoolPeriphery(address)",
          "setBaluniPoolRegistry(address)",
          "setBaluniRebalancer(address)",
          "setBaluniYearnVaultRegistry(address)",
          "setBaluniRouter(address)",
          "setBaluniRegistry(address)",
          "setWNATIVE(address)",
          "setUSDC(address)",
          "set1inchSpotAgg(address)",
          "setStaticOracle(address)",
          "setBaluniDCAVaultRegistry(address)",
          "setBPS_FEE(uint256)",
          "setREBALANCE_THRESHOLD(uint256)",
          "getUniswapFactory()",
          "getUniswapRouter()",
          "getBaluniSwapper()",
          "getBaluniOracle()",
          "getBaluniAgentFactory()",
          "getBaluniPoolPeriphery()",
          "getBaluniPoolRegistry()",
          "getBaluniRebalancer()",
          "getBaluniRouter()",
          "getBaluniRegistry()",
          "getWNATIVE()",
          "getUSDC()",
          "get1inchSpotAgg()",
          "getBPS_FEE()",
          "getMAX_BPS_FEE()",
          "getBPS_BASE()",
          "getREBALANCE_THRESHOLD()",
          "getTreasury()",
          "getStaticOracle()",
          "getBaluniYearnVaultRegistry()",
          "getBaluniDCAVaultRegistry()",
          "setUniswapQuoter(address)",
          "getUniswapQuoter()",
          "setBaluniPoolZap(address)",
          "getBaluniPoolZap()",
          "setBaluniHyperPoolZap(address)",
          "getBaluniHyperPoolZap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uniswapFactory",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:48"
            },
            {
              "label": "uniswapRouter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:49"
            },
            {
              "label": "baluniAgentFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:50"
            },
            {
              "label": "baluniPoolPeriphery",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:51"
            },
            {
              "label": "baluniPoolRegistry",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:52"
            },
            {
              "label": "baluniRebalancer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:53"
            },
            {
              "label": "baluniRouter",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:54"
            },
            {
              "label": "baluniRegistry",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:55"
            },
            {
              "label": "baluniOracle",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:56"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:57"
            },
            {
              "label": "baluniYearnVaultRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:58"
            },
            {
              "label": "baluniDCAVaultRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:59"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:61"
            },
            {
              "label": "staticOracle",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:62"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:63"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:64"
            },
            {
              "label": "_1inchSpotAgg",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:65"
            },
            {
              "label": "_MAX_BPS_FEE",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:66"
            },
            {
              "label": "_BPS_FEE",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:67"
            },
            {
              "label": "_BPS_BASE",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:68"
            },
            {
              "label": "_REBALANCE_THRESHOLD",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:69"
            },
            {
              "label": "uniswapQuoter",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:243"
            },
            {
              "label": "baluniPoolZap",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:255"
            },
            {
              "label": "baluniHyperPoolZap",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:267"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1YearnVaultRegistry.sol:BaluniV1YearnVaultRegistry": {
        "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:46",
        "version": {
          "withMetadata": "3ac28a1f4c9be5a3d9a4c09588003b5ba52ff05333f05869a16f6fb99e306371",
          "withoutMetadata": "830653c10a583025ae5085514ca1aee0b959a2ea92a4267621b977b962dc7eba",
          "linkedWithoutMetadata": "830653c10a583025ae5085514ca1aee0b959a2ea92a4267621b977b962dc7eba"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addVault(address)",
          "getAllVaults()",
          "getVaultsCount()",
          "getVaultAsset(address)",
          "getVaultType1ByAssets(address,address)",
          "getVaultType0ByAsset(address)",
          "getVaultsByAsset(address)",
          "vaultExist(address)",
          "removeVault(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allVaults",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:49"
            },
            {
              "label": "getVaultType0",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:51"
            },
            {
              "label": "getVaultType1",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault": {
        "src": "contracts/vaults/BaluniV1DCAVault.sol:16",
        "version": {
          "withMetadata": "b173ad54a220a952c2845066f1b8d06924869ead6aeaabd66381e22fbc569d58",
          "withoutMetadata": "57d10c202624e3cbee7b6c8dca2fb2fa9ee91211e8d80634b974c77d44e48afb",
          "linkedWithoutMetadata": "57d10c202624e3cbee7b6c8dca2fb2fa9ee91211e8d80634b974c77d44e48afb"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1DCAVault.sol:IBaluniV1DCAVault",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address,address,address,uint256)",
          "reinitialize(string,string,address,address,address,uint256,uint64)",
          "changeReinvestDuration(uint256)",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "systemDeposit()",
          "getAmountToSwap()",
          "canSystemDeposit()",
          "pause()",
          "unpause()",
          "unitPrice()",
          "registry()",
          "setExecutor(address,bool)",
          "totalValuation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:25"
            },
            {
              "label": "quoteAsset",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:26"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:28"
            },
            {
              "label": "accumulatedAssetB",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:29"
            },
            {
              "label": "lastDeposit",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:31"
            },
            {
              "label": "lastInvestedBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:32"
            },
            {
              "label": "maxPerSwap",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:33"
            },
            {
              "label": "swapDuration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:34"
            },
            {
              "label": "reinvestDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:35"
            },
            {
              "label": "executors",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/vaults/BaluniV1YearnVault.sol:BaluniV1YearnVault": {
        "src": "contracts/vaults/BaluniV1YearnVault.sol:17",
        "version": {
          "withMetadata": "d1f9fd9de979d216cf756a00dd8fc34cc14f95168fb0df32b3f8a7282966dfe3",
          "withoutMetadata": "ebe9f3104cf3dc643ac3908beaf8e9f57fed126153a36a3a97dfeb7cf9402602",
          "linkedWithoutMetadata": "ebe9f3104cf3dc643ac3908beaf8e9f57fed126153a36a3a97dfeb7cf9402602"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1YearnVault.sol:IBaluniV1YearnVault",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address,address,address,address)",
          "reinitialize(string,string,address,address,address,address,uint64)",
          "deposit(uint256,address)",
          "buy()",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()",
          "registry()",
          "yearnVault()",
          "interestEarned()",
          "withdraw(uint256,address)",
          "handleWithdrawB(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:26"
            },
            {
              "label": "_yearnVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IYearnVault)5526",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:27"
            },
            {
              "label": "quoteAsset",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:28"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:29"
            },
            {
              "label": "accumulatedAssetB",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:31"
            },
            {
              "label": "lastDeposit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:32"
            },
            {
              "label": "allTimeInterest",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IYearnVault)5526": {
              "label": "contract IYearnVault",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      }
    },
    {
      "contracts/libs/IERC20.sol:IERC20": {
        "src": "contracts/libs/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libs/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/libs/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/libs/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/libs/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "e639b75d1d80f35f1dbda2502514677ab3855c3e5c74bec4365f9305c22aeded",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "953ea46d64e5f0ee1eae596c2a8de43f16525b772b23dfa5a94b68cfd31750b5",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "d9843de46531a064c8d91497c0414ab8762811a3021413140667e2994acc5791",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:IQuoter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteExactInput(bytes,uint256)",
          "quoteExactInputSingle(address,address,uint24,uint256,uint160)",
          "quoteExactOutput(bytes,uint256)",
          "quoteExactOutputSingle(address,address,uint24,uint256,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/I1inchSpotAgg.sol:I1inchSpotAgg": {
        "src": "contracts/interfaces/I1inchSpotAgg.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRate(address,address,bool)",
          "getRateToEth(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Agent.sol:IBaluniV1Agent": {
        "src": "contracts/interfaces/IBaluniV1Agent.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execute(struct IBaluniV1Agent.Call[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1AgentFactory.sol:IBaluniV1AgentFactory": {
        "src": "contracts/interfaces/IBaluniV1AgentFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAgentAddress(address)",
          "getOrCreateAgent(address)",
          "getRegistry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1DCAVault.sol:IBaluniV1DCAVault": {
        "src": "contracts/interfaces/IBaluniV1DCAVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseAsset()",
          "quoteAsset()",
          "registry()",
          "lastDeposit()",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1HyperUniProxy.sol:IBaluniV1HyperUniProxy": {
        "src": "contracts/interfaces/IBaluniV1HyperUniProxy.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256,uint256,address,address,address)",
          "getDepositAmount(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Hypervisor.sol:IBaluniV1Hypervisor": {
        "src": "contracts/interfaces/IBaluniV1Hypervisor.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256,uint256,address,address,uint256[4])",
          "withdraw(uint256,address,address,uint256[4])",
          "compound()",
          "compound(uint256[4])",
          "rebalance(int24,int24,int24,int24,address,uint256[4],uint256[4])",
          "addBaseLiquidity(uint256,uint256,uint256[2])",
          "addLimitLiquidity(uint256,uint256,uint256[2])",
          "pullLiquidity(int24,int24,uint128,uint256[2])",
          "pullLiquidity(uint256,uint256[4])",
          "addLiquidity(int24,int24,uint256,uint256,uint256[2])",
          "pool()",
          "currentTick()",
          "tickSpacing()",
          "baseLower()",
          "baseUpper()",
          "limitLower()",
          "limitUpper()",
          "token0()",
          "token1()",
          "deposit0Max()",
          "deposit1Max()",
          "balanceOf(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "getTotalAmounts()",
          "getBasePosition()",
          "totalSupply()",
          "setWhitelist(address)",
          "setFee(uint8)",
          "removeWhitelisted()",
          "transferOwnership(address)",
          "toggleDirectDeposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle": {
        "src": "contracts/interfaces/IBaluniV1Oracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Pool.sol:IBaluniV1Pool": {
        "src": "contracts/interfaces/IBaluniV1Pool.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rebalanceAndDeposit(address)",
          "swap(address,address,uint256,uint256,address,uint256)",
          "quotePotentialSwap(address,address,uint256)",
          "getSlippage(address)",
          "getTokenWeight(address)",
          "getDeviationForToken(address)",
          "getSlippageParams()",
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "getAmountOut(address,address,uint256)",
          "rebalance()",
          "getDeviations()",
          "assetLiquidity(uint256)",
          "totalValuation()",
          "liquidity()",
          "unitPrice()",
          "getReserves()",
          "getAssetReserve(address)",
          "getAssets()",
          "getWeights()",
          "isRebalanceNeeded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1PoolPeriphery.sol:IBaluniV1PoolPeriphery": {
        "src": "contracts/interfaces/IBaluniV1PoolPeriphery.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "swapTokenForToken(address,address,uint256,uint256,address,address,uint256)",
          "swapTokensForTokens(address[],address[],uint256,uint256,address,uint256)",
          "batchSwap(address[],address[],uint256[],address[])",
          "getAmountOut(address,address,uint256)",
          "getPoolsContainingToken(address)",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1PoolRegistry.sol:IBaluniV1PoolRegistry": {
        "src": "contracts/interfaces/IBaluniV1PoolRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPoolByAssets(address,address)",
          "getPoolsByAsset(address)",
          "poolExist(address)",
          "getAllPools()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Rebalancer.sol:IBaluniV1Rebalancer": {
        "src": "contracts/interfaces/IBaluniV1Rebalancer.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rebalance(uint256[],address[],uint256[],uint256,address,address,address)",
          "checkRebalance(uint256[],address[],uint256[],uint256,address,address)",
          "convert(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Registry.sol:IBaluniV1Registry": {
        "src": "contracts/interfaces/IBaluniV1Registry.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setUniswapFactory(address)",
          "setUniswapRouter(address)",
          "setUniswapQuoter(address)",
          "setBaluniAgentFactory(address)",
          "setBaluniPoolPeriphery(address)",
          "setBaluniSwapper(address)",
          "setBaluniOracle(address)",
          "setBaluniPoolRegistry(address)",
          "setBaluniDCAVaultRegistry(address)",
          "setBaluniRebalancer(address)",
          "setBaluniRouter(address)",
          "setBaluniRegistry(address)",
          "setWNATIVE(address)",
          "setUSDC(address)",
          "setREBALANCE_THRESHOLD(uint256)",
          "setTreasury(address)",
          "set1inchSpotAgg(address)",
          "setBPS_FEE(uint256)",
          "setBaluniYearnVaultRegistry(address)",
          "setBaluniPoolZap(address)",
          "setBaluniHyperPoolZap(address)",
          "getUniswapQuoter()",
          "getUniswapFactory()",
          "getUniswapRouter()",
          "getBaluniSwapper()",
          "getBaluniOracle()",
          "getBaluniAgentFactory()",
          "getBaluniPoolPeriphery()",
          "getBaluniDCAVaultRegistry()",
          "getBaluniPoolRegistry()",
          "getBaluniRebalancer()",
          "getBaluniRouter()",
          "getBaluniRegistry()",
          "getWNATIVE()",
          "getUSDC()",
          "get1inchSpotAgg()",
          "getBPS_FEE()",
          "getMAX_BPS_FEE()",
          "getBPS_BASE()",
          "getREBALANCE_THRESHOLD()",
          "getTreasury()",
          "setStaticOracle(address)",
          "getStaticOracle()",
          "getBaluniYearnVaultRegistry()",
          "getBaluniPoolZap()",
          "getBaluniHyperPoolZap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Router.sol:IBaluniV1Router": {
        "src": "contracts/interfaces/IBaluniV1Router.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "_MAX_BPS_FEE()",
          "_BPS_FEE()",
          "_BPS_BASE()",
          "getTokens()",
          "USDC()",
          "WNATIVE()",
          "oracle()",
          "uniswapRouter()",
          "uniswapFactory()",
          "baluniFactory()",
          "baluniPeriphery()",
          "agentFactory()",
          "marketOracle()",
          "rebalancer()",
          "treasury()",
          "initialize(address,address,address,address,address,address)",
          "reinitialize(address,address,address,address,address,address,uint64)",
          "initializeMarketOracle(address)",
          "changeMarketOracle(address)",
          "changeBpsFee(uint256)",
          "changeTreasury(address)",
          "changeRebalancer(address)",
          "changeAgentFactory(address)",
          "execute(struct IBaluniV1Agent.Call[],address[])",
          "liquidate(address)",
          "liquidateAll()",
          "burnERC20(uint256)",
          "burnUSDC(uint256)",
          "getAgentAddress(address)",
          "mintWithUSDC(uint256)",
          "callRebalance(address[],uint256[],address,address,uint256,address)",
          "requiredUSDCtoMint(uint256)",
          "calculateTokenShare(uint256,uint256,uint256,uint256)",
          "tokenValuation(uint256,address)",
          "totalValuation()",
          "getUSDCShareValue(uint256)",
          "fetchMarketPrices()",
          "getVersion()",
          "unitPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Swapper.sol:IBaluniV1Swapper": {
        "src": "contracts/interfaces/IBaluniV1Swapper.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "singleSwap(address,address,uint256,address)",
          "multiHopSwap(address,address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1YearnVault.sol:IBaluniV1YearnVault": {
        "src": "contracts/interfaces/IBaluniV1YearnVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseAsset()",
          "yearnVault()",
          "quoteAsset()",
          "registry()",
          "lastDeposit()",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "buy()",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()",
          "interestEarned()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IStaticOracle.sol:IStaticOracle": {
        "src": "contracts/interfaces/IStaticOracle.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "UNISWAP_V3_FACTORY()",
          "CARDINALITY_PER_MINUTE()",
          "supportedFeeTiers()",
          "isPairSupported(address,address)",
          "getAllPoolsForPair(address,address)",
          "quoteAllAvailablePoolsWithTimePeriod(uint128,address,address,uint32)",
          "quoteSpecificFeeTiersWithTimePeriod(uint128,address,address,uint24[],uint32)",
          "quoteSpecificPoolsWithTimePeriod(uint128,address,address,address[],uint32)",
          "prepareAllAvailablePoolsWithTimePeriod(address,address,uint32)",
          "prepareSpecificFeeTiersWithTimePeriod(address,address,uint24[],uint32)",
          "prepareSpecificPoolsWithTimePeriod(address[],uint32)",
          "prepareAllAvailablePoolsWithCardinality(address,address,uint16)",
          "prepareSpecificFeeTiersWithCardinality(address,address,uint24[],uint16)",
          "prepareSpecificPoolsWithCardinality(address[],uint16)",
          "addNewFeeTier(uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IYearnVault.sol:IYearnVault": {
        "src": "contracts/interfaces/IYearnVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "asset()",
          "balanceOf(address)",
          "maxDeposit(address)",
          "redeem(uint256,address,address)",
          "deposit(uint256,address)",
          "totalAssets()",
          "convertToAssets(uint256)",
          "convertToShares(uint256)",
          "previewWithdraw(uint256)",
          "maxRedeem(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "contracts/libs/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b4b4c700a76811308eee6df41d4ecf97ec01a630e62dfdb37786fb9c7cc88e8b",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/ClonesUpgradeable.sol:ClonesUpgradeable": {
        "src": "contracts/libs/ClonesUpgradeable.sol:19",
        "version": {
          "withMetadata": "3c55e223059360a3aed8ef5f796df59794958639bed8913cd6789aaaa57e4f57",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/DSMath.sol:DSMath": {
        "src": "contracts/libs/DSMath.sol:20",
        "version": {
          "withMetadata": "aa02ffcc368d0d7948dfff7010b1b9f026de79464ab0ffd5b2eef34160dc1d36",
          "withoutMetadata": "d7e66f3490ae9a84ce01632c9357a9744e908d597973b7d263015ee6521bc2ba",
          "linkedWithoutMetadata": "d7e66f3490ae9a84ce01632c9357a9744e908d597973b7d263015ee6521bc2ba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable": {
        "src": "contracts/libs/EnumerableSetUpgradeable.sol:38",
        "version": {
          "withMetadata": "a8612c197221fb014521a7a74c61e03e3023d23300b15277753acb21359b87aa",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1HyperPoolZap.sol:BaluniV1HyperPoolZap": {
        "src": "contracts/managers/BaluniV1HyperPoolZap.sol:20",
        "version": {
          "withMetadata": "51b30a062a43d5f6c8443dbfd52fa36e19805ccb0f9a7e3dcf49a71030d91cf2",
          "withoutMetadata": "e213ef064ada57c341e0aaf78c86c0f36344fc12367b398b4c97867e87195d69",
          "linkedWithoutMetadata": "e213ef064ada57c341e0aaf78c86c0f36344fc12367b398b4c97867e87195d69"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "changeUniProxy(address)",
          "changeSwapper(address)",
          "changeRegistry(address)",
          "()",
          "zapIn(address,address,uint256,uint256,address)",
          "zapOut(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:21"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Swapper)5203",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:22"
            },
            {
              "label": "baluniHyperUniProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1HyperUniProxy)3919",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:23"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1HyperUniProxy)3919": {
              "label": "contract IBaluniV1HyperUniProxy",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Swapper)5203": {
              "label": "contract IBaluniV1Swapper",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1HyperPoolZap.sol:IWETH": {
        "src": "contracts/managers/BaluniV1HyperPoolZap.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:BaluniV1PoolZap": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:25",
        "version": {
          "withMetadata": "9b07d43818d19e995a833669992fb5d07ff02194423e9a8c482036fe61bd7195",
          "withoutMetadata": "3cf75d542c08ca50717704a4a49144ec64ddd8f00fda9d7dd17fd204217d37e3",
          "linkedWithoutMetadata": "3cf75d542c08ca50717704a4a49144ec64ddd8f00fda9d7dd17fd204217d37e3"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "()",
          "zapIn(address,address,uint256,uint256,address)",
          "zapOut(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:26"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Swapper)5203",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:27"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Swapper)5203": {
              "label": "contract IBaluniV1Swapper",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:IBaluniV1Pool": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "getAssets()",
          "getReserves()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:IWETH": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1Rebalancer.sol:BaluniV1Rebalancer": {
        "src": "contracts/managers/BaluniV1Rebalancer.sol:50",
        "version": {
          "withMetadata": "ece805a9704e6b52242f7914a14f2b195e1252164a597dc1a857024749b83246",
          "withoutMetadata": "3679da33a5a00ddd4af91a07c8885e76ef1ea4024e939b632fd7b58fefd58b6b",
          "linkedWithoutMetadata": "3679da33a5a00ddd4af91a07c8885e76ef1ea4024e939b632fd7b58fefd58b6b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "rebalance(uint256[],address[],uint256[],uint256,address,address,address)",
          "checkRebalance(uint256[],address[],uint256[],uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Rebalancer",
              "src": "contracts/managers/BaluniV1Rebalancer.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1Swapper.sol:BaluniV1Swapper": {
        "src": "contracts/managers/BaluniV1Swapper.sol:54",
        "version": {
          "withMetadata": "1339da00a44e3e12179f207b4e1217a44be64f3ba20cd381a3ede3b269e68ba8",
          "withoutMetadata": "d8e53f27623ce5366d7420695d8470aeaeacf164cc1294a582c5bc1e8c6d4e39",
          "linkedWithoutMetadata": "d8e53f27623ce5366d7420695d8470aeaeacf164cc1294a582c5bc1e8c6d4e39"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "singleSwap(address,address,uint256,address)",
          "multiHopSwap(address,address,address,uint256,address)",
          "setSlippagePercentage(uint256)",
          "getSlippagePercentage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Swapper",
              "src": "contracts/managers/BaluniV1Swapper.sol:55"
            },
            {
              "label": "slippagePct",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaluniV1Swapper",
              "src": "contracts/managers/BaluniV1Swapper.sol:236"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockOracle.sol:MockOracle": {
        "src": "contracts/mock/MockOracle.sol:8",
        "version": {
          "withMetadata": "70af83104684b8d71775a97e4173b0af55d879eba132cbbcc9374d5b4acd7329",
          "withoutMetadata": "30a4d87e0a8e3b86993c23c7457d57e6400c8983ce87f3fe23cdb4ce1d3cabfe",
          "linkedWithoutMetadata": "30a4d87e0a8e3b86993c23c7457d57e6400c8983ce87f3fe23cdb4ce1d3cabfe"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockOracle",
            "src": "contracts/mock/MockOracle.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "rates",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:9"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:37"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:38"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockRebalancer.sol:MockRebalancer": {
        "src": "contracts/mock/MockRebalancer.sol:8",
        "version": {
          "withMetadata": "853dd2f976bc67310ff125424bc7f34a0c021fbaa33e5f42b1041e729488214b",
          "withoutMetadata": "d456e6032d25a90cff23a3f770ec655158392893763a8c5b785953edf6e28623",
          "linkedWithoutMetadata": "d456e6032d25a90cff23a3f770ec655158392893763a8c5b785953edf6e28623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "setRate(address,address,uint256)",
          "getRate(address,address,bool)",
          "getRateToEth(address,bool)",
          "rebalance(address[],uint256[],address,address,uint256)",
          "checkRebalance(address[],uint256[],uint256[])",
          "getBaluniRouter()",
          "getTreasury()",
          "setTreasury(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockRebalancer",
            "src": "contracts/mock/MockRebalancer.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "rates",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:9"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:37"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:38"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockSwapRouter.sol:MockSwapRouter": {
        "src": "contracts/mock/MockSwapRouter.sol:6",
        "version": {
          "withMetadata": "9df30811dfb3b6489278999ce756a92e47e218f078b5893656f76c4ac0cac8fe",
          "withoutMetadata": "ff713788cdc37307fe1bada55ee96e22d8d7805454117737af265d5b32d008bc",
          "linkedWithoutMetadata": "ff713788cdc37307fe1bada55ee96e22d8d7805454117737af265d5b32d008bc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((address[],address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockToken.sol:MockToken": {
        "src": "contracts/mock/MockToken.sol:6",
        "version": {
          "withMetadata": "b9213b189631b86fe3afc990938d19730562c84fb5a85a37bf4cc652b8688daf",
          "withoutMetadata": "45de519ffe48b572b2f1e5d4b66850d3c5fbf213d062174edbd89ac1926bc917",
          "linkedWithoutMetadata": "45de519ffe48b572b2f1e5d4b66850d3c5fbf213d062174edbd89ac1926bc917"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8)",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mock/MockToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mock/MockToken.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/oracles/BaluniV1Oracle.sol:BaluniV1Oracle": {
        "src": "contracts/oracles/BaluniV1Oracle.sol:51",
        "version": {
          "withMetadata": "5dd42db4536e8340d241696e48d0c5674965ce3f11f3f14a860a25da9aed014e",
          "withoutMetadata": "535b1e98a44fe46d6a6fe66db908d04bce55c69afb85e55097c3738cfa8b5111",
          "linkedWithoutMetadata": "535b1e98a44fe46d6a6fe66db908d04bce55c69afb85e55097c3738cfa8b5111"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)",
          "convertWithAgg(address,address,uint256)",
          "convertScaledWithAgg(address,address,uint256)",
          "convertWithStaticOracle(address,address,uint256)",
          "convertScaledWithStaticOracle(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Oracle",
              "src": "contracts/oracles/BaluniV1Oracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1Agent.sol:BaluniV1Agent": {
        "src": "contracts/orchestators/BaluniV1Agent.sol:51",
        "version": {
          "withMetadata": "61854307bb457a127afdb3eb7e0bfedfc7ee6549bf15e5ced4325d7419794aed",
          "withoutMetadata": "653be002c444d1ecc716f0fefd9a20bd15048a526212538f6bef19c517b4ca5e",
          "linkedWithoutMetadata": "653be002c444d1ecc716f0fefd9a20bd15048a526212538f6bef19c517b4ca5e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libs/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "(address)",
          "initialize(address)",
          "execute(struct BaluniV1Agent.Call[],address[])",
          "getRouter()",
          "getFactory()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaluniV1Agent",
            "src": "contracts/orchestators/BaluniV1Agent.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1Agent",
              "src": "contracts/orchestators/BaluniV1Agent.sol:54"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1Agent",
              "src": "contracts/orchestators/BaluniV1Agent.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1AgentFactory.sol:BaluniV1AgentFactory": {
        "src": "contracts/orchestators/BaluniV1AgentFactory.sol:48",
        "version": {
          "withMetadata": "5281c0481910761a957c7b518eea2d93b22f102645700845cf9544257c013594",
          "withoutMetadata": "e476c11aab337f1c498ad9cab23ce60bd6927b7714b61c32dfc6bdfa602b442e",
          "linkedWithoutMetadata": "e476c11aab337f1c498ad9cab23ce60bd6927b7714b61c32dfc6bdfa602b442e"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libs/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [
          "changeImplementation()",
          "initialize(address)",
          "reinitialize(address,uint64)",
          "getAgentAddress(address)",
          "getOrCreateAgent(address)",
          "changeRegistry(address)",
          "getRegistry()",
          "changeRegistryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:50"
            },
            {
              "label": "userAgents",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_contract(BaluniV1Agent)11862)",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:52"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(BaluniV1Agent)11862": {
              "label": "contract BaluniV1Agent",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(BaluniV1Agent)11862)": {
              "label": "mapping(address => contract BaluniV1Agent)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1Router.sol:BaluniV1Router": {
        "src": "contracts/orchestators/BaluniV1Router.sol:58",
        "version": {
          "withMetadata": "a81d2e3331988e9d3311aa071c9df4c96cb577765a6b8e3f70f9113fbe9cc6c5",
          "withoutMetadata": "4ea3bdc149399e7974dbce905ccc245235e8aa2af8d14c2fe54c9e6d3f55dec2",
          "linkedWithoutMetadata": "4ea3bdc149399e7974dbce905ccc245235e8aa2af8d14c2fe54c9e6d3f55dec2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libs/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "resetContract(address)",
          "unitPrice()",
          "execute(struct IBaluniV1Agent.Call[],address[])",
          "liquidate(address)",
          "liquidateAll()",
          "burnERC20(uint256)",
          "burnUSDC(uint256)",
          "getAgentAddress(address)",
          "mintWithUSDC(uint256)",
          "callRebalance(address[],uint256[],address,address,uint256,address)",
          "requiredUSDCtoMint(uint256)",
          "calculateTokenShare(uint256,uint256,uint256,uint256)",
          "tokenValuation(uint256,address)",
          "totalValuation()",
          "getUSDCShareValue(uint256)",
          "getVersion()",
          "getTokens()",
          "addToken(address)",
          "removeToken(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "tokens",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)6313_storage",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:71"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:73"
            },
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)6313_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6012_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6012_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/pools/BaluniV1Pool.sol:BaluniV1Pool": {
        "src": "contracts/pools/BaluniV1Pool.sol:54",
        "version": {
          "withMetadata": "e701614858bcefb5da09e70cb8696a66875f61f3ef313778b3c863c8eb1f52e5",
          "withoutMetadata": "ffeb19e9f6ac820c55df15d8b02482f4736f1ae09a29e485457d273401623248",
          "linkedWithoutMetadata": "ffeb19e9f6ac820c55df15d8b02482f4736f1ae09a29e485457d273401623248"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Pool.sol:IBaluniV1Pool",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address[],uint256[],address)",
          "reinitialize(string,string,address[],uint256[],address,uint64)",
          "rebalanceAndDeposit(address)",
          "swap(address,address,uint256,uint256,address,uint256)",
          "quotePotentialSwap(address,address,uint256)",
          "getSlippage(address)",
          "getTokenWeight(address)",
          "getDeviationForToken(address)",
          "getSlippageParams()",
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "calculateAssetShare(uint256)",
          "getAmountOut(address,address,uint256)",
          "rebalance()",
          "getDeviations()",
          "assetLiquidity(uint256)",
          "totalValuation()",
          "liquidity()",
          "unitPrice()",
          "getReserves()",
          "getAssetReserve(address)",
          "getAssets()",
          "getWeights()",
          "isRebalanceNeeded()",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "assetInfos",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(AssetInfo)4247_storage)dyn_storage",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:64"
            },
            {
              "label": "ONE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:67"
            },
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:70"
            },
            {
              "label": "scalingFactor",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:73"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:76"
            },
            {
              "label": "reserves",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:81"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_struct(AssetInfo)4247_storage)dyn_storage": {
              "label": "struct IBaluniV1Pool.AssetInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_struct(AssetInfo)4247_storage": {
              "label": "struct IBaluniV1Pool.AssetInfo",
              "members": [
                {
                  "label": "asset",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "reserve",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/pools/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery": {
        "src": "contracts/pools/BaluniV1PoolPeriphery.sol:56",
        "version": {
          "withMetadata": "ac7bbe0690706db2cb7c02482fa00e2f22e36a3917f6657259806fa49c178f4c",
          "withoutMetadata": "280b5d30eb786286aa47e97c11566abc27c292b6b09fe576646dec0a25c0bcba",
          "linkedWithoutMetadata": "280b5d30eb786286aa47e97c11566abc27c292b6b09fe576646dec0a25c0bcba"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1PoolPeriphery.sol:IBaluniV1PoolPeriphery",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "swapTokenForToken(address,address,uint256,uint256,address,address,uint256)",
          "swapTokensForTokens(address[],address[],uint256,uint256,address,uint256)",
          "quotePotentialSwaps(address[],address[],uint256)",
          "batchSwap(address[],address[],uint256[],address[])",
          "getAmountOut(address,address,uint256)",
          "getPoolsContainingToken(address)",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolPeriphery",
              "src": "contracts/pools/BaluniV1PoolPeriphery.sol:63"
            },
            {
              "label": "poolsReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BaluniV1PoolPeriphery",
              "src": "contracts/pools/BaluniV1PoolPeriphery.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1DCAVaultRegistry.sol:BaluniV1DCAVaultRegistry": {
        "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:46",
        "version": {
          "withMetadata": "f6df1a09f76b3251363570b0dba87655dbd70cff7543933b098b740a43383a98",
          "withoutMetadata": "6dc22d4525b5f3245d65ce869f234a644629b283d640a818864a6755a0a12391",
          "linkedWithoutMetadata": "6dc22d4525b5f3245d65ce869f234a644629b283d640a818864a6755a0a12391"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addVault(address)",
          "getAllVaults()",
          "getVaultsCount()",
          "getVaultAsset(address)",
          "getVaultType1ByAssets(address,address)",
          "getVaultsByAsset(address)",
          "vaultExist(address)",
          "removeVault(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allVaults",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:49"
            },
            {
              "label": "getVault",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1PoolRegistry.sol:BaluniV1PoolRegistry": {
        "src": "contracts/registry/BaluniV1PoolRegistry.sol:46",
        "version": {
          "withMetadata": "83d2a5208aae095dc1ee61dd89cf6ced02ee96d04b91abc45e9105c280143cdd",
          "withoutMetadata": "70c371604d5e98ef0fdfe86a89d73c2e1b1c199318f4b4fd87cc89c6f9de2e8f",
          "linkedWithoutMetadata": "70c371604d5e98ef0fdfe86a89d73c2e1b1c199318f4b4fd87cc89c6f9de2e8f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addPool(address)",
          "getAllPools()",
          "getPoolsCount()",
          "getPoolAssets(address)",
          "getPoolByAssets(address,address)",
          "getPoolsByAsset(address)",
          "poolExist(address)",
          "removePool(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allPools",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:49"
            },
            {
              "label": "getPool",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1Registry.sol:BaluniV1Registry": {
        "src": "contracts/registry/BaluniV1Registry.sol:47",
        "version": {
          "withMetadata": "8a9eac34c7c302209ff29e266ea2b50c4fe214970be23806d7c588eb3493aae9",
          "withoutMetadata": "b9b08068343ec496abd3666eac736e184cb3ba1cdbaf1f43e16a9a38875774c2",
          "linkedWithoutMetadata": "b9b08068343ec496abd3666eac736e184cb3ba1cdbaf1f43e16a9a38875774c2"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Registry.sol:IBaluniV1Registry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "setTreasury(address)",
          "setUniswapFactory(address)",
          "setUniswapRouter(address)",
          "setBaluniSwapper(address)",
          "setBaluniOracle(address)",
          "setBaluniAgentFactory(address)",
          "setBaluniPoolPeriphery(address)",
          "setBaluniPoolRegistry(address)",
          "setBaluniRebalancer(address)",
          "setBaluniYearnVaultRegistry(address)",
          "setBaluniRouter(address)",
          "setBaluniRegistry(address)",
          "setWNATIVE(address)",
          "setUSDC(address)",
          "set1inchSpotAgg(address)",
          "setStaticOracle(address)",
          "setBaluniDCAVaultRegistry(address)",
          "setBPS_FEE(uint256)",
          "setREBALANCE_THRESHOLD(uint256)",
          "getUniswapFactory()",
          "getUniswapRouter()",
          "getBaluniSwapper()",
          "getBaluniOracle()",
          "getBaluniAgentFactory()",
          "getBaluniPoolPeriphery()",
          "getBaluniPoolRegistry()",
          "getBaluniRebalancer()",
          "getBaluniRouter()",
          "getBaluniRegistry()",
          "getWNATIVE()",
          "getUSDC()",
          "get1inchSpotAgg()",
          "getBPS_FEE()",
          "getMAX_BPS_FEE()",
          "getBPS_BASE()",
          "getREBALANCE_THRESHOLD()",
          "getTreasury()",
          "getStaticOracle()",
          "getBaluniYearnVaultRegistry()",
          "getBaluniDCAVaultRegistry()",
          "setUniswapQuoter(address)",
          "getUniswapQuoter()",
          "setBaluniPoolZap(address)",
          "getBaluniPoolZap()",
          "setBaluniHyperPoolZap(address)",
          "getBaluniHyperPoolZap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uniswapFactory",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:48"
            },
            {
              "label": "uniswapRouter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:49"
            },
            {
              "label": "baluniAgentFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:50"
            },
            {
              "label": "baluniPoolPeriphery",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:51"
            },
            {
              "label": "baluniPoolRegistry",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:52"
            },
            {
              "label": "baluniRebalancer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:53"
            },
            {
              "label": "baluniRouter",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:54"
            },
            {
              "label": "baluniRegistry",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:55"
            },
            {
              "label": "baluniOracle",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:56"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:57"
            },
            {
              "label": "baluniYearnVaultRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:58"
            },
            {
              "label": "baluniDCAVaultRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:59"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:61"
            },
            {
              "label": "staticOracle",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:62"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:63"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:64"
            },
            {
              "label": "_1inchSpotAgg",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:65"
            },
            {
              "label": "_MAX_BPS_FEE",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:66"
            },
            {
              "label": "_BPS_FEE",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:67"
            },
            {
              "label": "_BPS_BASE",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:68"
            },
            {
              "label": "_REBALANCE_THRESHOLD",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:69"
            },
            {
              "label": "uniswapQuoter",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:243"
            },
            {
              "label": "baluniPoolZap",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:255"
            },
            {
              "label": "baluniHyperPoolZap",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:267"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1YearnVaultRegistry.sol:BaluniV1YearnVaultRegistry": {
        "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:46",
        "version": {
          "withMetadata": "3ac28a1f4c9be5a3d9a4c09588003b5ba52ff05333f05869a16f6fb99e306371",
          "withoutMetadata": "830653c10a583025ae5085514ca1aee0b959a2ea92a4267621b977b962dc7eba",
          "linkedWithoutMetadata": "830653c10a583025ae5085514ca1aee0b959a2ea92a4267621b977b962dc7eba"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addVault(address)",
          "getAllVaults()",
          "getVaultsCount()",
          "getVaultAsset(address)",
          "getVaultType1ByAssets(address,address)",
          "getVaultType0ByAsset(address)",
          "getVaultsByAsset(address)",
          "vaultExist(address)",
          "removeVault(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allVaults",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:49"
            },
            {
              "label": "getVaultType0",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:51"
            },
            {
              "label": "getVaultType1",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault": {
        "src": "contracts/vaults/BaluniV1DCAVault.sol:16",
        "version": {
          "withMetadata": "b173ad54a220a952c2845066f1b8d06924869ead6aeaabd66381e22fbc569d58",
          "withoutMetadata": "57d10c202624e3cbee7b6c8dca2fb2fa9ee91211e8d80634b974c77d44e48afb",
          "linkedWithoutMetadata": "57d10c202624e3cbee7b6c8dca2fb2fa9ee91211e8d80634b974c77d44e48afb"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1DCAVault.sol:IBaluniV1DCAVault",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address,address,address,uint256)",
          "reinitialize(string,string,address,address,address,uint256,uint64)",
          "changeReinvestDuration(uint256)",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "systemDeposit()",
          "getAmountToSwap()",
          "canSystemDeposit()",
          "pause()",
          "unpause()",
          "unitPrice()",
          "registry()",
          "setExecutor(address,bool)",
          "totalValuation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:25"
            },
            {
              "label": "quoteAsset",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:26"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:28"
            },
            {
              "label": "accumulatedAssetB",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:29"
            },
            {
              "label": "lastDeposit",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:31"
            },
            {
              "label": "lastInvestedBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:32"
            },
            {
              "label": "maxPerSwap",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:33"
            },
            {
              "label": "swapDuration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:34"
            },
            {
              "label": "reinvestDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:35"
            },
            {
              "label": "executors",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/vaults/BaluniV1YearnVault.sol:BaluniV1YearnVault": {
        "src": "contracts/vaults/BaluniV1YearnVault.sol:17",
        "version": {
          "withMetadata": "d1f9fd9de979d216cf756a00dd8fc34cc14f95168fb0df32b3f8a7282966dfe3",
          "withoutMetadata": "ebe9f3104cf3dc643ac3908beaf8e9f57fed126153a36a3a97dfeb7cf9402602",
          "linkedWithoutMetadata": "ebe9f3104cf3dc643ac3908beaf8e9f57fed126153a36a3a97dfeb7cf9402602"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1YearnVault.sol:IBaluniV1YearnVault",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address,address,address,address)",
          "reinitialize(string,string,address,address,address,address,uint64)",
          "deposit(uint256,address)",
          "buy()",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()",
          "registry()",
          "yearnVault()",
          "interestEarned()",
          "withdraw(uint256,address)",
          "handleWithdrawB(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:26"
            },
            {
              "label": "_yearnVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IYearnVault)5526",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:27"
            },
            {
              "label": "quoteAsset",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:28"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:29"
            },
            {
              "label": "accumulatedAssetB",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:31"
            },
            {
              "label": "lastDeposit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:32"
            },
            {
              "label": "allTimeInterest",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IYearnVault)5526": {
              "label": "contract IYearnVault",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      }
    },
    {
      "contracts/libs/IERC20.sol:IERC20": {
        "src": "contracts/libs/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libs/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/libs/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/libs/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/libs/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "e639b75d1d80f35f1dbda2502514677ab3855c3e5c74bec4365f9305c22aeded",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "953ea46d64e5f0ee1eae596c2a8de43f16525b772b23dfa5a94b68cfd31750b5",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "d9843de46531a064c8d91497c0414ab8762811a3021413140667e2994acc5791",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:IQuoter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteExactInput(bytes,uint256)",
          "quoteExactInputSingle(address,address,uint24,uint256,uint160)",
          "quoteExactOutput(bytes,uint256)",
          "quoteExactOutputSingle(address,address,uint24,uint256,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/I1inchSpotAgg.sol:I1inchSpotAgg": {
        "src": "contracts/interfaces/I1inchSpotAgg.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRate(address,address,bool)",
          "getRateToEth(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Agent.sol:IBaluniV1Agent": {
        "src": "contracts/interfaces/IBaluniV1Agent.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execute(struct IBaluniV1Agent.Call[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1AgentFactory.sol:IBaluniV1AgentFactory": {
        "src": "contracts/interfaces/IBaluniV1AgentFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAgentAddress(address)",
          "getOrCreateAgent(address)",
          "getRegistry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1DCAVault.sol:IBaluniV1DCAVault": {
        "src": "contracts/interfaces/IBaluniV1DCAVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseAsset()",
          "quoteAsset()",
          "registry()",
          "lastDeposit()",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1HyperUniProxy.sol:IBaluniV1HyperUniProxy": {
        "src": "contracts/interfaces/IBaluniV1HyperUniProxy.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256,uint256,address,address,address)",
          "getDepositAmount(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Hypervisor.sol:IBaluniV1Hypervisor": {
        "src": "contracts/interfaces/IBaluniV1Hypervisor.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256,uint256,address,address,uint256[4])",
          "withdraw(uint256,address,address,uint256[4])",
          "compound()",
          "compound(uint256[4])",
          "rebalance(int24,int24,int24,int24,address,uint256[4],uint256[4])",
          "addBaseLiquidity(uint256,uint256,uint256[2])",
          "addLimitLiquidity(uint256,uint256,uint256[2])",
          "pullLiquidity(int24,int24,uint128,uint256[2])",
          "pullLiquidity(uint256,uint256[4])",
          "addLiquidity(int24,int24,uint256,uint256,uint256[2])",
          "pool()",
          "currentTick()",
          "tickSpacing()",
          "baseLower()",
          "baseUpper()",
          "limitLower()",
          "limitUpper()",
          "token0()",
          "token1()",
          "deposit0Max()",
          "deposit1Max()",
          "balanceOf(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "getTotalAmounts()",
          "getBasePosition()",
          "totalSupply()",
          "setWhitelist(address)",
          "setFee(uint8)",
          "removeWhitelisted()",
          "transferOwnership(address)",
          "toggleDirectDeposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle": {
        "src": "contracts/interfaces/IBaluniV1Oracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Pool.sol:IBaluniV1Pool": {
        "src": "contracts/interfaces/IBaluniV1Pool.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rebalanceAndDeposit(address)",
          "swap(address,address,uint256,uint256,address,uint256)",
          "quotePotentialSwap(address,address,uint256)",
          "getSlippage(address)",
          "getTokenWeight(address)",
          "getDeviationForToken(address)",
          "getSlippageParams()",
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "getAmountOut(address,address,uint256)",
          "rebalance()",
          "getDeviations()",
          "assetLiquidity(uint256)",
          "totalValuation()",
          "liquidity()",
          "unitPrice()",
          "getReserves()",
          "getAssetReserve(address)",
          "getAssets()",
          "getWeights()",
          "isRebalanceNeeded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1PoolPeriphery.sol:IBaluniV1PoolPeriphery": {
        "src": "contracts/interfaces/IBaluniV1PoolPeriphery.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "swapTokenForToken(address,address,uint256,uint256,address,address,uint256)",
          "swapTokensForTokens(address[],address[],uint256,uint256,address,uint256)",
          "batchSwap(address[],address[],uint256[],address[])",
          "getAmountOut(address,address,uint256)",
          "getPoolsContainingToken(address)",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1PoolRegistry.sol:IBaluniV1PoolRegistry": {
        "src": "contracts/interfaces/IBaluniV1PoolRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPoolByAssets(address,address)",
          "getPoolsByAsset(address)",
          "poolExist(address)",
          "getAllPools()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Rebalancer.sol:IBaluniV1Rebalancer": {
        "src": "contracts/interfaces/IBaluniV1Rebalancer.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rebalance(uint256[],address[],uint256[],uint256,address,address,address)",
          "checkRebalance(uint256[],address[],uint256[],uint256,address,address)",
          "convert(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Registry.sol:IBaluniV1Registry": {
        "src": "contracts/interfaces/IBaluniV1Registry.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setUniswapFactory(address)",
          "setUniswapRouter(address)",
          "setUniswapQuoter(address)",
          "setBaluniAgentFactory(address)",
          "setBaluniPoolPeriphery(address)",
          "setBaluniSwapper(address)",
          "setBaluniOracle(address)",
          "setBaluniPoolRegistry(address)",
          "setBaluniDCAVaultRegistry(address)",
          "setBaluniRebalancer(address)",
          "setBaluniRouter(address)",
          "setBaluniRegistry(address)",
          "setWNATIVE(address)",
          "setUSDC(address)",
          "setREBALANCE_THRESHOLD(uint256)",
          "setTreasury(address)",
          "set1inchSpotAgg(address)",
          "setBPS_FEE(uint256)",
          "setBaluniYearnVaultRegistry(address)",
          "setBaluniPoolZap(address)",
          "setBaluniHyperPoolZap(address)",
          "getUniswapQuoter()",
          "getUniswapFactory()",
          "getUniswapRouter()",
          "getBaluniSwapper()",
          "getBaluniOracle()",
          "getBaluniAgentFactory()",
          "getBaluniPoolPeriphery()",
          "getBaluniDCAVaultRegistry()",
          "getBaluniPoolRegistry()",
          "getBaluniRebalancer()",
          "getBaluniRouter()",
          "getBaluniRegistry()",
          "getWNATIVE()",
          "getUSDC()",
          "get1inchSpotAgg()",
          "getBPS_FEE()",
          "getMAX_BPS_FEE()",
          "getBPS_BASE()",
          "getREBALANCE_THRESHOLD()",
          "getTreasury()",
          "setStaticOracle(address)",
          "getStaticOracle()",
          "getBaluniYearnVaultRegistry()",
          "getBaluniPoolZap()",
          "getBaluniHyperPoolZap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Router.sol:IBaluniV1Router": {
        "src": "contracts/interfaces/IBaluniV1Router.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "_MAX_BPS_FEE()",
          "_BPS_FEE()",
          "_BPS_BASE()",
          "getTokens()",
          "USDC()",
          "WNATIVE()",
          "oracle()",
          "uniswapRouter()",
          "uniswapFactory()",
          "baluniFactory()",
          "baluniPeriphery()",
          "agentFactory()",
          "marketOracle()",
          "rebalancer()",
          "treasury()",
          "initialize(address,address,address,address,address,address)",
          "reinitialize(address,address,address,address,address,address,uint64)",
          "initializeMarketOracle(address)",
          "changeMarketOracle(address)",
          "changeBpsFee(uint256)",
          "changeTreasury(address)",
          "changeRebalancer(address)",
          "changeAgentFactory(address)",
          "execute(struct IBaluniV1Agent.Call[],address[])",
          "liquidate(address)",
          "liquidateAll()",
          "burnERC20(uint256)",
          "burnUSDC(uint256)",
          "getAgentAddress(address)",
          "mintWithUSDC(uint256)",
          "callRebalance(address[],uint256[],address,address,uint256,address)",
          "requiredUSDCtoMint(uint256)",
          "calculateTokenShare(uint256,uint256,uint256,uint256)",
          "tokenValuation(uint256,address)",
          "totalValuation()",
          "getUSDCShareValue(uint256)",
          "fetchMarketPrices()",
          "getVersion()",
          "unitPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Swapper.sol:IBaluniV1Swapper": {
        "src": "contracts/interfaces/IBaluniV1Swapper.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "singleSwap(address,address,uint256,address)",
          "multiHopSwap(address,address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1YearnVault.sol:IBaluniV1YearnVault": {
        "src": "contracts/interfaces/IBaluniV1YearnVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseAsset()",
          "yearnVault()",
          "quoteAsset()",
          "registry()",
          "lastDeposit()",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "buy()",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()",
          "interestEarned()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IStaticOracle.sol:IStaticOracle": {
        "src": "contracts/interfaces/IStaticOracle.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "UNISWAP_V3_FACTORY()",
          "CARDINALITY_PER_MINUTE()",
          "supportedFeeTiers()",
          "isPairSupported(address,address)",
          "getAllPoolsForPair(address,address)",
          "quoteAllAvailablePoolsWithTimePeriod(uint128,address,address,uint32)",
          "quoteSpecificFeeTiersWithTimePeriod(uint128,address,address,uint24[],uint32)",
          "quoteSpecificPoolsWithTimePeriod(uint128,address,address,address[],uint32)",
          "prepareAllAvailablePoolsWithTimePeriod(address,address,uint32)",
          "prepareSpecificFeeTiersWithTimePeriod(address,address,uint24[],uint32)",
          "prepareSpecificPoolsWithTimePeriod(address[],uint32)",
          "prepareAllAvailablePoolsWithCardinality(address,address,uint16)",
          "prepareSpecificFeeTiersWithCardinality(address,address,uint24[],uint16)",
          "prepareSpecificPoolsWithCardinality(address[],uint16)",
          "addNewFeeTier(uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IYearnVault.sol:IYearnVault": {
        "src": "contracts/interfaces/IYearnVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "asset()",
          "balanceOf(address)",
          "maxDeposit(address)",
          "redeem(uint256,address,address)",
          "deposit(uint256,address)",
          "totalAssets()",
          "convertToAssets(uint256)",
          "convertToShares(uint256)",
          "previewWithdraw(uint256)",
          "maxRedeem(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "contracts/libs/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b4b4c700a76811308eee6df41d4ecf97ec01a630e62dfdb37786fb9c7cc88e8b",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/ClonesUpgradeable.sol:ClonesUpgradeable": {
        "src": "contracts/libs/ClonesUpgradeable.sol:19",
        "version": {
          "withMetadata": "3c55e223059360a3aed8ef5f796df59794958639bed8913cd6789aaaa57e4f57",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/DSMath.sol:DSMath": {
        "src": "contracts/libs/DSMath.sol:20",
        "version": {
          "withMetadata": "aa02ffcc368d0d7948dfff7010b1b9f026de79464ab0ffd5b2eef34160dc1d36",
          "withoutMetadata": "d7e66f3490ae9a84ce01632c9357a9744e908d597973b7d263015ee6521bc2ba",
          "linkedWithoutMetadata": "d7e66f3490ae9a84ce01632c9357a9744e908d597973b7d263015ee6521bc2ba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable": {
        "src": "contracts/libs/EnumerableSetUpgradeable.sol:38",
        "version": {
          "withMetadata": "a8612c197221fb014521a7a74c61e03e3023d23300b15277753acb21359b87aa",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1HyperPoolZap.sol:BaluniV1HyperPoolZap": {
        "src": "contracts/managers/BaluniV1HyperPoolZap.sol:20",
        "version": {
          "withMetadata": "51b30a062a43d5f6c8443dbfd52fa36e19805ccb0f9a7e3dcf49a71030d91cf2",
          "withoutMetadata": "e213ef064ada57c341e0aaf78c86c0f36344fc12367b398b4c97867e87195d69",
          "linkedWithoutMetadata": "e213ef064ada57c341e0aaf78c86c0f36344fc12367b398b4c97867e87195d69"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "changeUniProxy(address)",
          "changeSwapper(address)",
          "changeRegistry(address)",
          "()",
          "zapIn(address,address,uint256,uint256,address)",
          "zapOut(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:21"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Swapper)5203",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:22"
            },
            {
              "label": "baluniHyperUniProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1HyperUniProxy)3919",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:23"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1HyperUniProxy)3919": {
              "label": "contract IBaluniV1HyperUniProxy",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Swapper)5203": {
              "label": "contract IBaluniV1Swapper",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1HyperPoolZap.sol:IWETH": {
        "src": "contracts/managers/BaluniV1HyperPoolZap.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:BaluniV1PoolZap": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:25",
        "version": {
          "withMetadata": "9b07d43818d19e995a833669992fb5d07ff02194423e9a8c482036fe61bd7195",
          "withoutMetadata": "3cf75d542c08ca50717704a4a49144ec64ddd8f00fda9d7dd17fd204217d37e3",
          "linkedWithoutMetadata": "3cf75d542c08ca50717704a4a49144ec64ddd8f00fda9d7dd17fd204217d37e3"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "()",
          "zapIn(address,address,uint256,uint256,address)",
          "zapOut(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:26"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Swapper)5203",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:27"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Swapper)5203": {
              "label": "contract IBaluniV1Swapper",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:IBaluniV1Pool": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "getAssets()",
          "getReserves()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:IWETH": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1Rebalancer.sol:BaluniV1Rebalancer": {
        "src": "contracts/managers/BaluniV1Rebalancer.sol:50",
        "version": {
          "withMetadata": "ece805a9704e6b52242f7914a14f2b195e1252164a597dc1a857024749b83246",
          "withoutMetadata": "3679da33a5a00ddd4af91a07c8885e76ef1ea4024e939b632fd7b58fefd58b6b",
          "linkedWithoutMetadata": "3679da33a5a00ddd4af91a07c8885e76ef1ea4024e939b632fd7b58fefd58b6b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "rebalance(uint256[],address[],uint256[],uint256,address,address,address)",
          "checkRebalance(uint256[],address[],uint256[],uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Rebalancer",
              "src": "contracts/managers/BaluniV1Rebalancer.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1Swapper.sol:BaluniV1Swapper": {
        "src": "contracts/managers/BaluniV1Swapper.sol:54",
        "version": {
          "withMetadata": "1339da00a44e3e12179f207b4e1217a44be64f3ba20cd381a3ede3b269e68ba8",
          "withoutMetadata": "d8e53f27623ce5366d7420695d8470aeaeacf164cc1294a582c5bc1e8c6d4e39",
          "linkedWithoutMetadata": "d8e53f27623ce5366d7420695d8470aeaeacf164cc1294a582c5bc1e8c6d4e39"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "singleSwap(address,address,uint256,address)",
          "multiHopSwap(address,address,address,uint256,address)",
          "setSlippagePercentage(uint256)",
          "getSlippagePercentage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Swapper",
              "src": "contracts/managers/BaluniV1Swapper.sol:55"
            },
            {
              "label": "slippagePct",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaluniV1Swapper",
              "src": "contracts/managers/BaluniV1Swapper.sol:236"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockOracle.sol:MockOracle": {
        "src": "contracts/mock/MockOracle.sol:8",
        "version": {
          "withMetadata": "70af83104684b8d71775a97e4173b0af55d879eba132cbbcc9374d5b4acd7329",
          "withoutMetadata": "30a4d87e0a8e3b86993c23c7457d57e6400c8983ce87f3fe23cdb4ce1d3cabfe",
          "linkedWithoutMetadata": "30a4d87e0a8e3b86993c23c7457d57e6400c8983ce87f3fe23cdb4ce1d3cabfe"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockOracle",
            "src": "contracts/mock/MockOracle.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "rates",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:9"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:37"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:38"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockRebalancer.sol:MockRebalancer": {
        "src": "contracts/mock/MockRebalancer.sol:8",
        "version": {
          "withMetadata": "853dd2f976bc67310ff125424bc7f34a0c021fbaa33e5f42b1041e729488214b",
          "withoutMetadata": "d456e6032d25a90cff23a3f770ec655158392893763a8c5b785953edf6e28623",
          "linkedWithoutMetadata": "d456e6032d25a90cff23a3f770ec655158392893763a8c5b785953edf6e28623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "setRate(address,address,uint256)",
          "getRate(address,address,bool)",
          "getRateToEth(address,bool)",
          "rebalance(address[],uint256[],address,address,uint256)",
          "checkRebalance(address[],uint256[],uint256[])",
          "getBaluniRouter()",
          "getTreasury()",
          "setTreasury(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockRebalancer",
            "src": "contracts/mock/MockRebalancer.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "rates",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:9"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:37"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:38"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockSwapRouter.sol:MockSwapRouter": {
        "src": "contracts/mock/MockSwapRouter.sol:6",
        "version": {
          "withMetadata": "9df30811dfb3b6489278999ce756a92e47e218f078b5893656f76c4ac0cac8fe",
          "withoutMetadata": "ff713788cdc37307fe1bada55ee96e22d8d7805454117737af265d5b32d008bc",
          "linkedWithoutMetadata": "ff713788cdc37307fe1bada55ee96e22d8d7805454117737af265d5b32d008bc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((address[],address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockToken.sol:MockToken": {
        "src": "contracts/mock/MockToken.sol:6",
        "version": {
          "withMetadata": "b9213b189631b86fe3afc990938d19730562c84fb5a85a37bf4cc652b8688daf",
          "withoutMetadata": "45de519ffe48b572b2f1e5d4b66850d3c5fbf213d062174edbd89ac1926bc917",
          "linkedWithoutMetadata": "45de519ffe48b572b2f1e5d4b66850d3c5fbf213d062174edbd89ac1926bc917"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8)",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mock/MockToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mock/MockToken.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/oracles/BaluniV1Oracle.sol:BaluniV1Oracle": {
        "src": "contracts/oracles/BaluniV1Oracle.sol:51",
        "version": {
          "withMetadata": "5dd42db4536e8340d241696e48d0c5674965ce3f11f3f14a860a25da9aed014e",
          "withoutMetadata": "535b1e98a44fe46d6a6fe66db908d04bce55c69afb85e55097c3738cfa8b5111",
          "linkedWithoutMetadata": "535b1e98a44fe46d6a6fe66db908d04bce55c69afb85e55097c3738cfa8b5111"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)",
          "convertWithAgg(address,address,uint256)",
          "convertScaledWithAgg(address,address,uint256)",
          "convertWithStaticOracle(address,address,uint256)",
          "convertScaledWithStaticOracle(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Oracle",
              "src": "contracts/oracles/BaluniV1Oracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1Agent.sol:BaluniV1Agent": {
        "src": "contracts/orchestators/BaluniV1Agent.sol:51",
        "version": {
          "withMetadata": "61854307bb457a127afdb3eb7e0bfedfc7ee6549bf15e5ced4325d7419794aed",
          "withoutMetadata": "653be002c444d1ecc716f0fefd9a20bd15048a526212538f6bef19c517b4ca5e",
          "linkedWithoutMetadata": "653be002c444d1ecc716f0fefd9a20bd15048a526212538f6bef19c517b4ca5e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libs/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "(address)",
          "initialize(address)",
          "execute(struct BaluniV1Agent.Call[],address[])",
          "getRouter()",
          "getFactory()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaluniV1Agent",
            "src": "contracts/orchestators/BaluniV1Agent.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1Agent",
              "src": "contracts/orchestators/BaluniV1Agent.sol:54"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1Agent",
              "src": "contracts/orchestators/BaluniV1Agent.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1AgentFactory.sol:BaluniV1AgentFactory": {
        "src": "contracts/orchestators/BaluniV1AgentFactory.sol:48",
        "version": {
          "withMetadata": "5281c0481910761a957c7b518eea2d93b22f102645700845cf9544257c013594",
          "withoutMetadata": "e476c11aab337f1c498ad9cab23ce60bd6927b7714b61c32dfc6bdfa602b442e",
          "linkedWithoutMetadata": "e476c11aab337f1c498ad9cab23ce60bd6927b7714b61c32dfc6bdfa602b442e"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libs/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [
          "changeImplementation()",
          "initialize(address)",
          "reinitialize(address,uint64)",
          "getAgentAddress(address)",
          "getOrCreateAgent(address)",
          "changeRegistry(address)",
          "getRegistry()",
          "changeRegistryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:50"
            },
            {
              "label": "userAgents",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_contract(BaluniV1Agent)11862)",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:52"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(BaluniV1Agent)11862": {
              "label": "contract BaluniV1Agent",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(BaluniV1Agent)11862)": {
              "label": "mapping(address => contract BaluniV1Agent)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1Router.sol:BaluniV1Router": {
        "src": "contracts/orchestators/BaluniV1Router.sol:58",
        "version": {
          "withMetadata": "a81d2e3331988e9d3311aa071c9df4c96cb577765a6b8e3f70f9113fbe9cc6c5",
          "withoutMetadata": "4ea3bdc149399e7974dbce905ccc245235e8aa2af8d14c2fe54c9e6d3f55dec2",
          "linkedWithoutMetadata": "4ea3bdc149399e7974dbce905ccc245235e8aa2af8d14c2fe54c9e6d3f55dec2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libs/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "resetContract(address)",
          "unitPrice()",
          "execute(struct IBaluniV1Agent.Call[],address[])",
          "liquidate(address)",
          "liquidateAll()",
          "burnERC20(uint256)",
          "burnUSDC(uint256)",
          "getAgentAddress(address)",
          "mintWithUSDC(uint256)",
          "callRebalance(address[],uint256[],address,address,uint256,address)",
          "requiredUSDCtoMint(uint256)",
          "calculateTokenShare(uint256,uint256,uint256,uint256)",
          "tokenValuation(uint256,address)",
          "totalValuation()",
          "getUSDCShareValue(uint256)",
          "getVersion()",
          "getTokens()",
          "addToken(address)",
          "removeToken(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "tokens",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)6313_storage",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:71"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:73"
            },
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)6313_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6012_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6012_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/pools/BaluniV1Pool.sol:BaluniV1Pool": {
        "src": "contracts/pools/BaluniV1Pool.sol:54",
        "version": {
          "withMetadata": "e701614858bcefb5da09e70cb8696a66875f61f3ef313778b3c863c8eb1f52e5",
          "withoutMetadata": "ffeb19e9f6ac820c55df15d8b02482f4736f1ae09a29e485457d273401623248",
          "linkedWithoutMetadata": "ffeb19e9f6ac820c55df15d8b02482f4736f1ae09a29e485457d273401623248"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Pool.sol:IBaluniV1Pool",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address[],uint256[],address)",
          "reinitialize(string,string,address[],uint256[],address,uint64)",
          "rebalanceAndDeposit(address)",
          "swap(address,address,uint256,uint256,address,uint256)",
          "quotePotentialSwap(address,address,uint256)",
          "getSlippage(address)",
          "getTokenWeight(address)",
          "getDeviationForToken(address)",
          "getSlippageParams()",
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "calculateAssetShare(uint256)",
          "getAmountOut(address,address,uint256)",
          "rebalance()",
          "getDeviations()",
          "assetLiquidity(uint256)",
          "totalValuation()",
          "liquidity()",
          "unitPrice()",
          "getReserves()",
          "getAssetReserve(address)",
          "getAssets()",
          "getWeights()",
          "isRebalanceNeeded()",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "assetInfos",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(AssetInfo)4247_storage)dyn_storage",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:64"
            },
            {
              "label": "ONE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:67"
            },
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:70"
            },
            {
              "label": "scalingFactor",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:73"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:76"
            },
            {
              "label": "reserves",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:81"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_struct(AssetInfo)4247_storage)dyn_storage": {
              "label": "struct IBaluniV1Pool.AssetInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_struct(AssetInfo)4247_storage": {
              "label": "struct IBaluniV1Pool.AssetInfo",
              "members": [
                {
                  "label": "asset",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "reserve",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/pools/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery": {
        "src": "contracts/pools/BaluniV1PoolPeriphery.sol:56",
        "version": {
          "withMetadata": "ac7bbe0690706db2cb7c02482fa00e2f22e36a3917f6657259806fa49c178f4c",
          "withoutMetadata": "280b5d30eb786286aa47e97c11566abc27c292b6b09fe576646dec0a25c0bcba",
          "linkedWithoutMetadata": "280b5d30eb786286aa47e97c11566abc27c292b6b09fe576646dec0a25c0bcba"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1PoolPeriphery.sol:IBaluniV1PoolPeriphery",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "swapTokenForToken(address,address,uint256,uint256,address,address,uint256)",
          "swapTokensForTokens(address[],address[],uint256,uint256,address,uint256)",
          "quotePotentialSwaps(address[],address[],uint256)",
          "batchSwap(address[],address[],uint256[],address[])",
          "getAmountOut(address,address,uint256)",
          "getPoolsContainingToken(address)",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolPeriphery",
              "src": "contracts/pools/BaluniV1PoolPeriphery.sol:63"
            },
            {
              "label": "poolsReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BaluniV1PoolPeriphery",
              "src": "contracts/pools/BaluniV1PoolPeriphery.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1DCAVaultRegistry.sol:BaluniV1DCAVaultRegistry": {
        "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:46",
        "version": {
          "withMetadata": "f6df1a09f76b3251363570b0dba87655dbd70cff7543933b098b740a43383a98",
          "withoutMetadata": "6dc22d4525b5f3245d65ce869f234a644629b283d640a818864a6755a0a12391",
          "linkedWithoutMetadata": "6dc22d4525b5f3245d65ce869f234a644629b283d640a818864a6755a0a12391"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addVault(address)",
          "getAllVaults()",
          "getVaultsCount()",
          "getVaultAsset(address)",
          "getVaultType1ByAssets(address,address)",
          "getVaultsByAsset(address)",
          "vaultExist(address)",
          "removeVault(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allVaults",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:49"
            },
            {
              "label": "getVault",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1PoolRegistry.sol:BaluniV1PoolRegistry": {
        "src": "contracts/registry/BaluniV1PoolRegistry.sol:46",
        "version": {
          "withMetadata": "83d2a5208aae095dc1ee61dd89cf6ced02ee96d04b91abc45e9105c280143cdd",
          "withoutMetadata": "70c371604d5e98ef0fdfe86a89d73c2e1b1c199318f4b4fd87cc89c6f9de2e8f",
          "linkedWithoutMetadata": "70c371604d5e98ef0fdfe86a89d73c2e1b1c199318f4b4fd87cc89c6f9de2e8f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addPool(address)",
          "getAllPools()",
          "getPoolsCount()",
          "getPoolAssets(address)",
          "getPoolByAssets(address,address)",
          "getPoolsByAsset(address)",
          "poolExist(address)",
          "removePool(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allPools",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:49"
            },
            {
              "label": "getPool",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1Registry.sol:BaluniV1Registry": {
        "src": "contracts/registry/BaluniV1Registry.sol:47",
        "version": {
          "withMetadata": "8a9eac34c7c302209ff29e266ea2b50c4fe214970be23806d7c588eb3493aae9",
          "withoutMetadata": "b9b08068343ec496abd3666eac736e184cb3ba1cdbaf1f43e16a9a38875774c2",
          "linkedWithoutMetadata": "b9b08068343ec496abd3666eac736e184cb3ba1cdbaf1f43e16a9a38875774c2"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Registry.sol:IBaluniV1Registry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "setTreasury(address)",
          "setUniswapFactory(address)",
          "setUniswapRouter(address)",
          "setBaluniSwapper(address)",
          "setBaluniOracle(address)",
          "setBaluniAgentFactory(address)",
          "setBaluniPoolPeriphery(address)",
          "setBaluniPoolRegistry(address)",
          "setBaluniRebalancer(address)",
          "setBaluniYearnVaultRegistry(address)",
          "setBaluniRouter(address)",
          "setBaluniRegistry(address)",
          "setWNATIVE(address)",
          "setUSDC(address)",
          "set1inchSpotAgg(address)",
          "setStaticOracle(address)",
          "setBaluniDCAVaultRegistry(address)",
          "setBPS_FEE(uint256)",
          "setREBALANCE_THRESHOLD(uint256)",
          "getUniswapFactory()",
          "getUniswapRouter()",
          "getBaluniSwapper()",
          "getBaluniOracle()",
          "getBaluniAgentFactory()",
          "getBaluniPoolPeriphery()",
          "getBaluniPoolRegistry()",
          "getBaluniRebalancer()",
          "getBaluniRouter()",
          "getBaluniRegistry()",
          "getWNATIVE()",
          "getUSDC()",
          "get1inchSpotAgg()",
          "getBPS_FEE()",
          "getMAX_BPS_FEE()",
          "getBPS_BASE()",
          "getREBALANCE_THRESHOLD()",
          "getTreasury()",
          "getStaticOracle()",
          "getBaluniYearnVaultRegistry()",
          "getBaluniDCAVaultRegistry()",
          "setUniswapQuoter(address)",
          "getUniswapQuoter()",
          "setBaluniPoolZap(address)",
          "getBaluniPoolZap()",
          "setBaluniHyperPoolZap(address)",
          "getBaluniHyperPoolZap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uniswapFactory",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:48"
            },
            {
              "label": "uniswapRouter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:49"
            },
            {
              "label": "baluniAgentFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:50"
            },
            {
              "label": "baluniPoolPeriphery",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:51"
            },
            {
              "label": "baluniPoolRegistry",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:52"
            },
            {
              "label": "baluniRebalancer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:53"
            },
            {
              "label": "baluniRouter",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:54"
            },
            {
              "label": "baluniRegistry",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:55"
            },
            {
              "label": "baluniOracle",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:56"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:57"
            },
            {
              "label": "baluniYearnVaultRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:58"
            },
            {
              "label": "baluniDCAVaultRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:59"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:61"
            },
            {
              "label": "staticOracle",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:62"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:63"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:64"
            },
            {
              "label": "_1inchSpotAgg",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:65"
            },
            {
              "label": "_MAX_BPS_FEE",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:66"
            },
            {
              "label": "_BPS_FEE",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:67"
            },
            {
              "label": "_BPS_BASE",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:68"
            },
            {
              "label": "_REBALANCE_THRESHOLD",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:69"
            },
            {
              "label": "uniswapQuoter",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:243"
            },
            {
              "label": "baluniPoolZap",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:255"
            },
            {
              "label": "baluniHyperPoolZap",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:267"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1YearnVaultRegistry.sol:BaluniV1YearnVaultRegistry": {
        "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:46",
        "version": {
          "withMetadata": "3ac28a1f4c9be5a3d9a4c09588003b5ba52ff05333f05869a16f6fb99e306371",
          "withoutMetadata": "830653c10a583025ae5085514ca1aee0b959a2ea92a4267621b977b962dc7eba",
          "linkedWithoutMetadata": "830653c10a583025ae5085514ca1aee0b959a2ea92a4267621b977b962dc7eba"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addVault(address)",
          "getAllVaults()",
          "getVaultsCount()",
          "getVaultAsset(address)",
          "getVaultType1ByAssets(address,address)",
          "getVaultType0ByAsset(address)",
          "getVaultsByAsset(address)",
          "vaultExist(address)",
          "removeVault(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allVaults",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:49"
            },
            {
              "label": "getVaultType0",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:51"
            },
            {
              "label": "getVaultType1",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault": {
        "src": "contracts/vaults/BaluniV1DCAVault.sol:16",
        "version": {
          "withMetadata": "b173ad54a220a952c2845066f1b8d06924869ead6aeaabd66381e22fbc569d58",
          "withoutMetadata": "57d10c202624e3cbee7b6c8dca2fb2fa9ee91211e8d80634b974c77d44e48afb",
          "linkedWithoutMetadata": "57d10c202624e3cbee7b6c8dca2fb2fa9ee91211e8d80634b974c77d44e48afb"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1DCAVault.sol:IBaluniV1DCAVault",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address,address,address,uint256)",
          "reinitialize(string,string,address,address,address,uint256,uint64)",
          "changeReinvestDuration(uint256)",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "systemDeposit()",
          "getAmountToSwap()",
          "canSystemDeposit()",
          "pause()",
          "unpause()",
          "unitPrice()",
          "registry()",
          "setExecutor(address,bool)",
          "totalValuation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:25"
            },
            {
              "label": "quoteAsset",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:26"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:28"
            },
            {
              "label": "accumulatedAssetB",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:29"
            },
            {
              "label": "lastDeposit",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:31"
            },
            {
              "label": "lastInvestedBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:32"
            },
            {
              "label": "maxPerSwap",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:33"
            },
            {
              "label": "swapDuration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:34"
            },
            {
              "label": "reinvestDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:35"
            },
            {
              "label": "executors",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/vaults/BaluniV1YearnVault.sol:BaluniV1YearnVault": {
        "src": "contracts/vaults/BaluniV1YearnVault.sol:17",
        "version": {
          "withMetadata": "d1f9fd9de979d216cf756a00dd8fc34cc14f95168fb0df32b3f8a7282966dfe3",
          "withoutMetadata": "ebe9f3104cf3dc643ac3908beaf8e9f57fed126153a36a3a97dfeb7cf9402602",
          "linkedWithoutMetadata": "ebe9f3104cf3dc643ac3908beaf8e9f57fed126153a36a3a97dfeb7cf9402602"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1YearnVault.sol:IBaluniV1YearnVault",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address,address,address,address)",
          "reinitialize(string,string,address,address,address,address,uint64)",
          "deposit(uint256,address)",
          "buy()",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()",
          "registry()",
          "yearnVault()",
          "interestEarned()",
          "withdraw(uint256,address)",
          "handleWithdrawB(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:26"
            },
            {
              "label": "_yearnVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IYearnVault)5526",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:27"
            },
            {
              "label": "quoteAsset",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:28"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:29"
            },
            {
              "label": "accumulatedAssetB",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:31"
            },
            {
              "label": "lastDeposit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:32"
            },
            {
              "label": "allTimeInterest",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IYearnVault)5526": {
              "label": "contract IYearnVault",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      }
    },
    {
      "contracts/libs/IERC20.sol:IERC20": {
        "src": "contracts/libs/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libs/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/libs/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/libs/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/libs/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "e639b75d1d80f35f1dbda2502514677ab3855c3e5c74bec4365f9305c22aeded",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "953ea46d64e5f0ee1eae596c2a8de43f16525b772b23dfa5a94b68cfd31750b5",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "d9843de46531a064c8d91497c0414ab8762811a3021413140667e2994acc5791",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:IQuoter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/IQuoter.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quoteExactInput(bytes,uint256)",
          "quoteExactInputSingle(address,address,uint24,uint256,uint160)",
          "quoteExactOutput(bytes,uint256)",
          "quoteExactOutputSingle(address,address,uint24,uint256,uint160)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/I1inchSpotAgg.sol:I1inchSpotAgg": {
        "src": "contracts/interfaces/I1inchSpotAgg.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRate(address,address,bool)",
          "getRateToEth(address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Agent.sol:IBaluniV1Agent": {
        "src": "contracts/interfaces/IBaluniV1Agent.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execute(struct IBaluniV1Agent.Call[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1AgentFactory.sol:IBaluniV1AgentFactory": {
        "src": "contracts/interfaces/IBaluniV1AgentFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAgentAddress(address)",
          "getOrCreateAgent(address)",
          "getRegistry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1DCAVault.sol:IBaluniV1DCAVault": {
        "src": "contracts/interfaces/IBaluniV1DCAVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseAsset()",
          "quoteAsset()",
          "registry()",
          "lastDeposit()",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1HyperUniProxy.sol:IBaluniV1HyperUniProxy": {
        "src": "contracts/interfaces/IBaluniV1HyperUniProxy.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256,uint256,address,address,address)",
          "getDepositAmount(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Hypervisor.sol:IBaluniV1Hypervisor": {
        "src": "contracts/interfaces/IBaluniV1Hypervisor.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256,uint256,address,address,uint256[4])",
          "withdraw(uint256,address,address,uint256[4])",
          "compound()",
          "compound(uint256[4])",
          "rebalance(int24,int24,int24,int24,address,uint256[4],uint256[4])",
          "addBaseLiquidity(uint256,uint256,uint256[2])",
          "addLimitLiquidity(uint256,uint256,uint256[2])",
          "pullLiquidity(int24,int24,uint128,uint256[2])",
          "pullLiquidity(uint256,uint256[4])",
          "addLiquidity(int24,int24,uint256,uint256,uint256[2])",
          "pool()",
          "currentTick()",
          "tickSpacing()",
          "baseLower()",
          "baseUpper()",
          "limitLower()",
          "limitUpper()",
          "token0()",
          "token1()",
          "deposit0Max()",
          "deposit1Max()",
          "balanceOf(address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "getTotalAmounts()",
          "getBasePosition()",
          "totalSupply()",
          "setWhitelist(address)",
          "setFee(uint8)",
          "removeWhitelisted()",
          "transferOwnership(address)",
          "toggleDirectDeposit()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle": {
        "src": "contracts/interfaces/IBaluniV1Oracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Pool.sol:IBaluniV1Pool": {
        "src": "contracts/interfaces/IBaluniV1Pool.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rebalanceAndDeposit(address)",
          "swap(address,address,uint256,uint256,address,uint256)",
          "quotePotentialSwap(address,address,uint256)",
          "getSlippage(address)",
          "getTokenWeight(address)",
          "getDeviationForToken(address)",
          "getSlippageParams()",
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "getAmountOut(address,address,uint256)",
          "rebalance()",
          "getDeviations()",
          "assetLiquidity(uint256)",
          "totalValuation()",
          "liquidity()",
          "unitPrice()",
          "getReserves()",
          "getAssetReserve(address)",
          "getAssets()",
          "getWeights()",
          "isRebalanceNeeded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1PoolPeriphery.sol:IBaluniV1PoolPeriphery": {
        "src": "contracts/interfaces/IBaluniV1PoolPeriphery.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "swapTokenForToken(address,address,uint256,uint256,address,address,uint256)",
          "swapTokensForTokens(address[],address[],uint256,uint256,address,uint256)",
          "batchSwap(address[],address[],uint256[],address[])",
          "getAmountOut(address,address,uint256)",
          "getPoolsContainingToken(address)",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1PoolRegistry.sol:IBaluniV1PoolRegistry": {
        "src": "contracts/interfaces/IBaluniV1PoolRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPoolByAssets(address,address)",
          "getPoolsByAsset(address)",
          "poolExist(address)",
          "getAllPools()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Rebalancer.sol:IBaluniV1Rebalancer": {
        "src": "contracts/interfaces/IBaluniV1Rebalancer.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rebalance(uint256[],address[],uint256[],uint256,address,address,address)",
          "checkRebalance(uint256[],address[],uint256[],uint256,address,address)",
          "convert(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Registry.sol:IBaluniV1Registry": {
        "src": "contracts/interfaces/IBaluniV1Registry.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setUniswapFactory(address)",
          "setUniswapRouter(address)",
          "setUniswapQuoter(address)",
          "setBaluniAgentFactory(address)",
          "setBaluniPoolPeriphery(address)",
          "setBaluniSwapper(address)",
          "setBaluniOracle(address)",
          "setBaluniPoolRegistry(address)",
          "setBaluniDCAVaultRegistry(address)",
          "setBaluniRebalancer(address)",
          "setBaluniRouter(address)",
          "setBaluniRegistry(address)",
          "setWNATIVE(address)",
          "setUSDC(address)",
          "setREBALANCE_THRESHOLD(uint256)",
          "setTreasury(address)",
          "set1inchSpotAgg(address)",
          "setBPS_FEE(uint256)",
          "setBaluniYearnVaultRegistry(address)",
          "setBaluniPoolZap(address)",
          "setBaluniHyperPoolZap(address)",
          "getUniswapQuoter()",
          "getUniswapFactory()",
          "getUniswapRouter()",
          "getBaluniSwapper()",
          "getBaluniOracle()",
          "getBaluniAgentFactory()",
          "getBaluniPoolPeriphery()",
          "getBaluniDCAVaultRegistry()",
          "getBaluniPoolRegistry()",
          "getBaluniRebalancer()",
          "getBaluniRouter()",
          "getBaluniRegistry()",
          "getWNATIVE()",
          "getUSDC()",
          "get1inchSpotAgg()",
          "getBPS_FEE()",
          "getMAX_BPS_FEE()",
          "getBPS_BASE()",
          "getREBALANCE_THRESHOLD()",
          "getTreasury()",
          "setStaticOracle(address)",
          "getStaticOracle()",
          "getBaluniYearnVaultRegistry()",
          "getBaluniPoolZap()",
          "getBaluniHyperPoolZap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Router.sol:IBaluniV1Router": {
        "src": "contracts/interfaces/IBaluniV1Router.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "_MAX_BPS_FEE()",
          "_BPS_FEE()",
          "_BPS_BASE()",
          "getTokens()",
          "USDC()",
          "WNATIVE()",
          "oracle()",
          "uniswapRouter()",
          "uniswapFactory()",
          "baluniFactory()",
          "baluniPeriphery()",
          "agentFactory()",
          "marketOracle()",
          "rebalancer()",
          "treasury()",
          "initialize(address,address,address,address,address,address)",
          "reinitialize(address,address,address,address,address,address,uint64)",
          "initializeMarketOracle(address)",
          "changeMarketOracle(address)",
          "changeBpsFee(uint256)",
          "changeTreasury(address)",
          "changeRebalancer(address)",
          "changeAgentFactory(address)",
          "execute(struct IBaluniV1Agent.Call[],address[])",
          "liquidate(address)",
          "liquidateAll()",
          "burnERC20(uint256)",
          "burnUSDC(uint256)",
          "getAgentAddress(address)",
          "mintWithUSDC(uint256)",
          "callRebalance(address[],uint256[],address,address,uint256,address)",
          "requiredUSDCtoMint(uint256)",
          "calculateTokenShare(uint256,uint256,uint256,uint256)",
          "tokenValuation(uint256,address)",
          "totalValuation()",
          "getUSDCShareValue(uint256)",
          "fetchMarketPrices()",
          "getVersion()",
          "unitPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1Swapper.sol:IBaluniV1Swapper": {
        "src": "contracts/interfaces/IBaluniV1Swapper.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "singleSwap(address,address,uint256,address)",
          "multiHopSwap(address,address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IBaluniV1YearnVault.sol:IBaluniV1YearnVault": {
        "src": "contracts/interfaces/IBaluniV1YearnVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "baseAsset()",
          "yearnVault()",
          "quoteAsset()",
          "registry()",
          "lastDeposit()",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "buy()",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()",
          "interestEarned()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IStaticOracle.sol:IStaticOracle": {
        "src": "contracts/interfaces/IStaticOracle.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "UNISWAP_V3_FACTORY()",
          "CARDINALITY_PER_MINUTE()",
          "supportedFeeTiers()",
          "isPairSupported(address,address)",
          "getAllPoolsForPair(address,address)",
          "quoteAllAvailablePoolsWithTimePeriod(uint128,address,address,uint32)",
          "quoteSpecificFeeTiersWithTimePeriod(uint128,address,address,uint24[],uint32)",
          "quoteSpecificPoolsWithTimePeriod(uint128,address,address,address[],uint32)",
          "prepareAllAvailablePoolsWithTimePeriod(address,address,uint32)",
          "prepareSpecificFeeTiersWithTimePeriod(address,address,uint24[],uint32)",
          "prepareSpecificPoolsWithTimePeriod(address[],uint32)",
          "prepareAllAvailablePoolsWithCardinality(address,address,uint16)",
          "prepareSpecificFeeTiersWithCardinality(address,address,uint24[],uint16)",
          "prepareSpecificPoolsWithCardinality(address[],uint16)",
          "addNewFeeTier(uint24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/interfaces/IYearnVault.sol:IYearnVault": {
        "src": "contracts/interfaces/IYearnVault.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "asset()",
          "balanceOf(address)",
          "maxDeposit(address)",
          "redeem(uint256,address,address)",
          "deposit(uint256,address)",
          "totalAssets()",
          "convertToAssets(uint256)",
          "convertToShares(uint256)",
          "previewWithdraw(uint256)",
          "maxRedeem(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "contracts/libs/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b4b4c700a76811308eee6df41d4ecf97ec01a630e62dfdb37786fb9c7cc88e8b",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/ClonesUpgradeable.sol:ClonesUpgradeable": {
        "src": "contracts/libs/ClonesUpgradeable.sol:19",
        "version": {
          "withMetadata": "3c55e223059360a3aed8ef5f796df59794958639bed8913cd6789aaaa57e4f57",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/DSMath.sol:DSMath": {
        "src": "contracts/libs/DSMath.sol:20",
        "version": {
          "withMetadata": "aa02ffcc368d0d7948dfff7010b1b9f026de79464ab0ffd5b2eef34160dc1d36",
          "withoutMetadata": "d7e66f3490ae9a84ce01632c9357a9744e908d597973b7d263015ee6521bc2ba",
          "linkedWithoutMetadata": "d7e66f3490ae9a84ce01632c9357a9744e908d597973b7d263015ee6521bc2ba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/libs/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable": {
        "src": "contracts/libs/EnumerableSetUpgradeable.sol:38",
        "version": {
          "withMetadata": "a8612c197221fb014521a7a74c61e03e3023d23300b15277753acb21359b87aa",
          "withoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3",
          "linkedWithoutMetadata": "4655207c44536a0922631e841d148fb8b3121a6aaf1c4458968c0608e84838f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1HyperPoolZap.sol:BaluniV1HyperPoolZap": {
        "src": "contracts/managers/BaluniV1HyperPoolZap.sol:20",
        "version": {
          "withMetadata": "51b30a062a43d5f6c8443dbfd52fa36e19805ccb0f9a7e3dcf49a71030d91cf2",
          "withoutMetadata": "e213ef064ada57c341e0aaf78c86c0f36344fc12367b398b4c97867e87195d69",
          "linkedWithoutMetadata": "e213ef064ada57c341e0aaf78c86c0f36344fc12367b398b4c97867e87195d69"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "changeUniProxy(address)",
          "changeSwapper(address)",
          "changeRegistry(address)",
          "()",
          "zapIn(address,address,uint256,uint256,address)",
          "zapOut(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:21"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Swapper)5203",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:22"
            },
            {
              "label": "baluniHyperUniProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1HyperUniProxy)3919",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:23"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1HyperPoolZap",
              "src": "contracts/managers/BaluniV1HyperPoolZap.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1HyperUniProxy)3919": {
              "label": "contract IBaluniV1HyperUniProxy",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Swapper)5203": {
              "label": "contract IBaluniV1Swapper",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1HyperPoolZap.sol:IWETH": {
        "src": "contracts/managers/BaluniV1HyperPoolZap.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:BaluniV1PoolZap": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:25",
        "version": {
          "withMetadata": "9b07d43818d19e995a833669992fb5d07ff02194423e9a8c482036fe61bd7195",
          "withoutMetadata": "3cf75d542c08ca50717704a4a49144ec64ddd8f00fda9d7dd17fd204217d37e3",
          "linkedWithoutMetadata": "3cf75d542c08ca50717704a4a49144ec64ddd8f00fda9d7dd17fd204217d37e3"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "()",
          "zapIn(address,address,uint256,uint256,address)",
          "zapOut(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:26"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Swapper)5203",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:27"
            },
            {
              "label": "WETH9",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1PoolZap",
              "src": "contracts/managers/BaluniV1PoolZap.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Swapper)5203": {
              "label": "contract IBaluniV1Swapper",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:IBaluniV1Pool": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "getAssets()",
          "getReserves()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1PoolZap.sol:IWETH": {
        "src": "contracts/managers/BaluniV1PoolZap.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1Rebalancer.sol:BaluniV1Rebalancer": {
        "src": "contracts/managers/BaluniV1Rebalancer.sol:50",
        "version": {
          "withMetadata": "ece805a9704e6b52242f7914a14f2b195e1252164a597dc1a857024749b83246",
          "withoutMetadata": "3679da33a5a00ddd4af91a07c8885e76ef1ea4024e939b632fd7b58fefd58b6b",
          "linkedWithoutMetadata": "3679da33a5a00ddd4af91a07c8885e76ef1ea4024e939b632fd7b58fefd58b6b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "rebalance(uint256[],address[],uint256[],uint256,address,address,address)",
          "checkRebalance(uint256[],address[],uint256[],uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Rebalancer",
              "src": "contracts/managers/BaluniV1Rebalancer.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/managers/BaluniV1Swapper.sol:BaluniV1Swapper": {
        "src": "contracts/managers/BaluniV1Swapper.sol:54",
        "version": {
          "withMetadata": "1339da00a44e3e12179f207b4e1217a44be64f3ba20cd381a3ede3b269e68ba8",
          "withoutMetadata": "d8e53f27623ce5366d7420695d8470aeaeacf164cc1294a582c5bc1e8c6d4e39",
          "linkedWithoutMetadata": "d8e53f27623ce5366d7420695d8470aeaeacf164cc1294a582c5bc1e8c6d4e39"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "singleSwap(address,address,uint256,address)",
          "multiHopSwap(address,address,address,uint256,address)",
          "setSlippagePercentage(uint256)",
          "getSlippagePercentage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Swapper",
              "src": "contracts/managers/BaluniV1Swapper.sol:55"
            },
            {
              "label": "slippagePct",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaluniV1Swapper",
              "src": "contracts/managers/BaluniV1Swapper.sol:236"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockOracle.sol:MockOracle": {
        "src": "contracts/mock/MockOracle.sol:8",
        "version": {
          "withMetadata": "70af83104684b8d71775a97e4173b0af55d879eba132cbbcc9374d5b4acd7329",
          "withoutMetadata": "30a4d87e0a8e3b86993c23c7457d57e6400c8983ce87f3fe23cdb4ce1d3cabfe",
          "linkedWithoutMetadata": "30a4d87e0a8e3b86993c23c7457d57e6400c8983ce87f3fe23cdb4ce1d3cabfe"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockOracle",
            "src": "contracts/mock/MockOracle.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "rates",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:9"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:37"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:38"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MockOracle",
              "src": "contracts/mock/MockOracle.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockRebalancer.sol:MockRebalancer": {
        "src": "contracts/mock/MockRebalancer.sol:8",
        "version": {
          "withMetadata": "853dd2f976bc67310ff125424bc7f34a0c021fbaa33e5f42b1041e729488214b",
          "withoutMetadata": "d456e6032d25a90cff23a3f770ec655158392893763a8c5b785953edf6e28623",
          "linkedWithoutMetadata": "d456e6032d25a90cff23a3f770ec655158392893763a8c5b785953edf6e28623"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "setRate(address,address,uint256)",
          "getRate(address,address,bool)",
          "getRateToEth(address,bool)",
          "rebalance(address[],uint256[],address,address,uint256)",
          "checkRebalance(address[],uint256[],uint256[])",
          "getBaluniRouter()",
          "getTreasury()",
          "setTreasury(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockRebalancer",
            "src": "contracts/mock/MockRebalancer.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "rates",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:9"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:37"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:38"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MockRebalancer",
              "src": "contracts/mock/MockRebalancer.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockSwapRouter.sol:MockSwapRouter": {
        "src": "contracts/mock/MockSwapRouter.sol:6",
        "version": {
          "withMetadata": "9df30811dfb3b6489278999ce756a92e47e218f078b5893656f76c4ac0cac8fe",
          "withoutMetadata": "ff713788cdc37307fe1bada55ee96e22d8d7805454117737af265d5b32d008bc",
          "linkedWithoutMetadata": "ff713788cdc37307fe1bada55ee96e22d8d7805454117737af265d5b32d008bc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((address[],address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/mock/MockToken.sol:MockToken": {
        "src": "contracts/mock/MockToken.sol:6",
        "version": {
          "withMetadata": "b9213b189631b86fe3afc990938d19730562c84fb5a85a37bf4cc652b8688daf",
          "withoutMetadata": "45de519ffe48b572b2f1e5d4b66850d3c5fbf213d062174edbd89ac1926bc917",
          "linkedWithoutMetadata": "45de519ffe48b572b2f1e5d4b66850d3c5fbf213d062174edbd89ac1926bc917"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8)",
          "decimals()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mock/MockToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mock/MockToken.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/oracles/BaluniV1Oracle.sol:BaluniV1Oracle": {
        "src": "contracts/oracles/BaluniV1Oracle.sol:51",
        "version": {
          "withMetadata": "5dd42db4536e8340d241696e48d0c5674965ce3f11f3f14a860a25da9aed014e",
          "withoutMetadata": "535b1e98a44fe46d6a6fe66db908d04bce55c69afb85e55097c3738cfa8b5111",
          "linkedWithoutMetadata": "535b1e98a44fe46d6a6fe66db908d04bce55c69afb85e55097c3738cfa8b5111"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Oracle.sol:IBaluniV1Oracle",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "convert(address,address,uint256)",
          "convertScaled(address,address,uint256)",
          "convertWithAgg(address,address,uint256)",
          "convertScaledWithAgg(address,address,uint256)",
          "convertWithStaticOracle(address,address,uint256)",
          "convertScaledWithStaticOracle(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Oracle",
              "src": "contracts/oracles/BaluniV1Oracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1Agent.sol:BaluniV1Agent": {
        "src": "contracts/orchestators/BaluniV1Agent.sol:51",
        "version": {
          "withMetadata": "61854307bb457a127afdb3eb7e0bfedfc7ee6549bf15e5ced4325d7419794aed",
          "withoutMetadata": "653be002c444d1ecc716f0fefd9a20bd15048a526212538f6bef19c517b4ca5e",
          "linkedWithoutMetadata": "653be002c444d1ecc716f0fefd9a20bd15048a526212538f6bef19c517b4ca5e"
        },
        "inherit": [],
        "libraries": [
          "contracts/libs/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "(address)",
          "initialize(address)",
          "execute(struct BaluniV1Agent.Call[],address[])",
          "getRouter()",
          "getFactory()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaluniV1Agent",
            "src": "contracts/orchestators/BaluniV1Agent.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1Agent",
              "src": "contracts/orchestators/BaluniV1Agent.sol:54"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1Agent",
              "src": "contracts/orchestators/BaluniV1Agent.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1AgentFactory.sol:BaluniV1AgentFactory": {
        "src": "contracts/orchestators/BaluniV1AgentFactory.sol:48",
        "version": {
          "withMetadata": "5281c0481910761a957c7b518eea2d93b22f102645700845cf9544257c013594",
          "withoutMetadata": "e476c11aab337f1c498ad9cab23ce60bd6927b7714b61c32dfc6bdfa602b442e",
          "linkedWithoutMetadata": "e476c11aab337f1c498ad9cab23ce60bd6927b7714b61c32dfc6bdfa602b442e"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libs/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [
          "changeImplementation()",
          "initialize(address)",
          "reinitialize(address,uint64)",
          "getAgentAddress(address)",
          "getOrCreateAgent(address)",
          "changeRegistry(address)",
          "getRegistry()",
          "changeRegistryAddress(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "implementation",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:50"
            },
            {
              "label": "userAgents",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_contract(BaluniV1Agent)11862)",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:52"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1AgentFactory",
              "src": "contracts/orchestators/BaluniV1AgentFactory.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(BaluniV1Agent)11862": {
              "label": "contract BaluniV1Agent",
              "numberOfBytes": "20"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(BaluniV1Agent)11862)": {
              "label": "mapping(address => contract BaluniV1Agent)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/orchestators/BaluniV1Router.sol:BaluniV1Router": {
        "src": "contracts/orchestators/BaluniV1Router.sol:58",
        "version": {
          "withMetadata": "a81d2e3331988e9d3311aa071c9df4c96cb577765a6b8e3f70f9113fbe9cc6c5",
          "withoutMetadata": "4ea3bdc149399e7974dbce905ccc245235e8aa2af8d14c2fe54c9e6d3f55dec2",
          "linkedWithoutMetadata": "4ea3bdc149399e7974dbce905ccc245235e8aa2af8d14c2fe54c9e6d3f55dec2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "contracts/libs/EnumerableSetUpgradeable.sol:EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "resetContract(address)",
          "unitPrice()",
          "execute(struct IBaluniV1Agent.Call[],address[])",
          "liquidate(address)",
          "liquidateAll()",
          "burnERC20(uint256)",
          "burnUSDC(uint256)",
          "getAgentAddress(address)",
          "mintWithUSDC(uint256)",
          "callRebalance(address[],uint256[],address,address,uint256,address)",
          "requiredUSDCtoMint(uint256)",
          "calculateTokenShare(uint256,uint256,uint256,uint256)",
          "tokenValuation(uint256,address)",
          "totalValuation()",
          "getUSDCShareValue(uint256)",
          "getVersion()",
          "getTokens()",
          "addToken(address)",
          "removeToken(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "tokens",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)6313_storage",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:71"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:73"
            },
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1Router",
              "src": "contracts/orchestators/BaluniV1Router.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)6313_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6012_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6012_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/pools/BaluniV1Pool.sol:BaluniV1Pool": {
        "src": "contracts/pools/BaluniV1Pool.sol:54",
        "version": {
          "withMetadata": "e701614858bcefb5da09e70cb8696a66875f61f3ef313778b3c863c8eb1f52e5",
          "withoutMetadata": "ffeb19e9f6ac820c55df15d8b02482f4736f1ae09a29e485457d273401623248",
          "linkedWithoutMetadata": "ffeb19e9f6ac820c55df15d8b02482f4736f1ae09a29e485457d273401623248"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Pool.sol:IBaluniV1Pool",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address[],uint256[],address)",
          "reinitialize(string,string,address[],uint256[],address,uint64)",
          "rebalanceAndDeposit(address)",
          "swap(address,address,uint256,uint256,address,uint256)",
          "quotePotentialSwap(address,address,uint256)",
          "getSlippage(address)",
          "getTokenWeight(address)",
          "getDeviationForToken(address)",
          "getSlippageParams()",
          "deposit(address,uint256[],uint256)",
          "withdraw(uint256,address,uint256)",
          "calculateAssetShare(uint256)",
          "getAmountOut(address,address,uint256)",
          "rebalance()",
          "getDeviations()",
          "assetLiquidity(uint256)",
          "totalValuation()",
          "liquidity()",
          "unitPrice()",
          "getReserves()",
          "getAssetReserve(address)",
          "getAssets()",
          "getWeights()",
          "isRebalanceNeeded()",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "assetInfos",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(AssetInfo)4247_storage)dyn_storage",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:64"
            },
            {
              "label": "ONE",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:67"
            },
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:70"
            },
            {
              "label": "scalingFactor",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:73"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:76"
            },
            {
              "label": "reserves",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BaluniV1Pool",
              "src": "contracts/pools/BaluniV1Pool.sol:81"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_struct(AssetInfo)4247_storage)dyn_storage": {
              "label": "struct IBaluniV1Pool.AssetInfo[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_struct(AssetInfo)4247_storage": {
              "label": "struct IBaluniV1Pool.AssetInfo",
              "members": [
                {
                  "label": "asset",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "slippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "reserve",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/pools/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery": {
        "src": "contracts/pools/BaluniV1PoolPeriphery.sol:56",
        "version": {
          "withMetadata": "ac7bbe0690706db2cb7c02482fa00e2f22e36a3917f6657259806fa49c178f4c",
          "withoutMetadata": "280b5d30eb786286aa47e97c11566abc27c292b6b09fe576646dec0a25c0bcba",
          "linkedWithoutMetadata": "280b5d30eb786286aa47e97c11566abc27c292b6b09fe576646dec0a25c0bcba"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1PoolPeriphery.sol:IBaluniV1PoolPeriphery",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "swapTokenForToken(address,address,uint256,uint256,address,address,uint256)",
          "swapTokensForTokens(address[],address[],uint256,uint256,address,uint256)",
          "quotePotentialSwaps(address[],address[],uint256)",
          "batchSwap(address[],address[],uint256[],address[])",
          "getAmountOut(address,address,uint256)",
          "getPoolsContainingToken(address)",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "registry",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolPeriphery",
              "src": "contracts/pools/BaluniV1PoolPeriphery.sol:63"
            },
            {
              "label": "poolsReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BaluniV1PoolPeriphery",
              "src": "contracts/pools/BaluniV1PoolPeriphery.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1DCAVaultRegistry.sol:BaluniV1DCAVaultRegistry": {
        "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:46",
        "version": {
          "withMetadata": "f6df1a09f76b3251363570b0dba87655dbd70cff7543933b098b740a43383a98",
          "withoutMetadata": "6dc22d4525b5f3245d65ce869f234a644629b283d640a818864a6755a0a12391",
          "linkedWithoutMetadata": "6dc22d4525b5f3245d65ce869f234a644629b283d640a818864a6755a0a12391"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addVault(address)",
          "getAllVaults()",
          "getVaultsCount()",
          "getVaultAsset(address)",
          "getVaultType1ByAssets(address,address)",
          "getVaultsByAsset(address)",
          "vaultExist(address)",
          "removeVault(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allVaults",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:49"
            },
            {
              "label": "getVault",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1DCAVaultRegistry",
              "src": "contracts/registry/BaluniV1DCAVaultRegistry.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1PoolRegistry.sol:BaluniV1PoolRegistry": {
        "src": "contracts/registry/BaluniV1PoolRegistry.sol:46",
        "version": {
          "withMetadata": "83d2a5208aae095dc1ee61dd89cf6ced02ee96d04b91abc45e9105c280143cdd",
          "withoutMetadata": "70c371604d5e98ef0fdfe86a89d73c2e1b1c199318f4b4fd87cc89c6f9de2e8f",
          "linkedWithoutMetadata": "70c371604d5e98ef0fdfe86a89d73c2e1b1c199318f4b4fd87cc89c6f9de2e8f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addPool(address)",
          "getAllPools()",
          "getPoolsCount()",
          "getPoolAssets(address)",
          "getPoolByAssets(address,address)",
          "getPoolsByAsset(address)",
          "poolExist(address)",
          "removePool(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allPools",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:49"
            },
            {
              "label": "getPool",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1PoolRegistry",
              "src": "contracts/registry/BaluniV1PoolRegistry.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1Registry.sol:BaluniV1Registry": {
        "src": "contracts/registry/BaluniV1Registry.sol:47",
        "version": {
          "withMetadata": "8a9eac34c7c302209ff29e266ea2b50c4fe214970be23806d7c588eb3493aae9",
          "withoutMetadata": "b9b08068343ec496abd3666eac736e184cb3ba1cdbaf1f43e16a9a38875774c2",
          "linkedWithoutMetadata": "b9b08068343ec496abd3666eac736e184cb3ba1cdbaf1f43e16a9a38875774c2"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1Registry.sol:IBaluniV1Registry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "setTreasury(address)",
          "setUniswapFactory(address)",
          "setUniswapRouter(address)",
          "setBaluniSwapper(address)",
          "setBaluniOracle(address)",
          "setBaluniAgentFactory(address)",
          "setBaluniPoolPeriphery(address)",
          "setBaluniPoolRegistry(address)",
          "setBaluniRebalancer(address)",
          "setBaluniYearnVaultRegistry(address)",
          "setBaluniRouter(address)",
          "setBaluniRegistry(address)",
          "setWNATIVE(address)",
          "setUSDC(address)",
          "set1inchSpotAgg(address)",
          "setStaticOracle(address)",
          "setBaluniDCAVaultRegistry(address)",
          "setBPS_FEE(uint256)",
          "setREBALANCE_THRESHOLD(uint256)",
          "getUniswapFactory()",
          "getUniswapRouter()",
          "getBaluniSwapper()",
          "getBaluniOracle()",
          "getBaluniAgentFactory()",
          "getBaluniPoolPeriphery()",
          "getBaluniPoolRegistry()",
          "getBaluniRebalancer()",
          "getBaluniRouter()",
          "getBaluniRegistry()",
          "getWNATIVE()",
          "getUSDC()",
          "get1inchSpotAgg()",
          "getBPS_FEE()",
          "getMAX_BPS_FEE()",
          "getBPS_BASE()",
          "getREBALANCE_THRESHOLD()",
          "getTreasury()",
          "getStaticOracle()",
          "getBaluniYearnVaultRegistry()",
          "getBaluniDCAVaultRegistry()",
          "setUniswapQuoter(address)",
          "getUniswapQuoter()",
          "setBaluniPoolZap(address)",
          "getBaluniPoolZap()",
          "setBaluniHyperPoolZap(address)",
          "getBaluniHyperPoolZap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uniswapFactory",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:48"
            },
            {
              "label": "uniswapRouter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:49"
            },
            {
              "label": "baluniAgentFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:50"
            },
            {
              "label": "baluniPoolPeriphery",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:51"
            },
            {
              "label": "baluniPoolRegistry",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:52"
            },
            {
              "label": "baluniRebalancer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:53"
            },
            {
              "label": "baluniRouter",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:54"
            },
            {
              "label": "baluniRegistry",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:55"
            },
            {
              "label": "baluniOracle",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:56"
            },
            {
              "label": "baluniSwapper",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:57"
            },
            {
              "label": "baluniYearnVaultRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:58"
            },
            {
              "label": "baluniDCAVaultRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:59"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:61"
            },
            {
              "label": "staticOracle",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:62"
            },
            {
              "label": "WNATIVE",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:63"
            },
            {
              "label": "USDC",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:64"
            },
            {
              "label": "_1inchSpotAgg",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:65"
            },
            {
              "label": "_MAX_BPS_FEE",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:66"
            },
            {
              "label": "_BPS_FEE",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:67"
            },
            {
              "label": "_BPS_BASE",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:68"
            },
            {
              "label": "_REBALANCE_THRESHOLD",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:69"
            },
            {
              "label": "uniswapQuoter",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:243"
            },
            {
              "label": "baluniPoolZap",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:255"
            },
            {
              "label": "baluniHyperPoolZap",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "BaluniV1Registry",
              "src": "contracts/registry/BaluniV1Registry.sol:267"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/registry/BaluniV1YearnVaultRegistry.sol:BaluniV1YearnVaultRegistry": {
        "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:46",
        "version": {
          "withMetadata": "3ac28a1f4c9be5a3d9a4c09588003b5ba52ff05333f05869a16f6fb99e306371",
          "withoutMetadata": "830653c10a583025ae5085514ca1aee0b959a2ea92a4267621b977b962dc7eba",
          "linkedWithoutMetadata": "830653c10a583025ae5085514ca1aee0b959a2ea92a4267621b977b962dc7eba"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "reinitialize(address,uint64)",
          "addVault(address)",
          "getAllVaults()",
          "getVaultsCount()",
          "getVaultAsset(address)",
          "getVaultType1ByAssets(address,address)",
          "getVaultType0ByAsset(address)",
          "getVaultsByAsset(address)",
          "vaultExist(address)",
          "removeVault(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "allVaults",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:47"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:49"
            },
            {
              "label": "getVaultType0",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:51"
            },
            {
              "label": "getVaultType1",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "BaluniV1YearnVaultRegistry",
              "src": "contracts/registry/BaluniV1YearnVaultRegistry.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/vaults/BaluniV1DCAVault.sol:BaluniV1DCAVault": {
        "src": "contracts/vaults/BaluniV1DCAVault.sol:16",
        "version": {
          "withMetadata": "b173ad54a220a952c2845066f1b8d06924869ead6aeaabd66381e22fbc569d58",
          "withoutMetadata": "57d10c202624e3cbee7b6c8dca2fb2fa9ee91211e8d80634b974c77d44e48afb",
          "linkedWithoutMetadata": "57d10c202624e3cbee7b6c8dca2fb2fa9ee91211e8d80634b974c77d44e48afb"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1DCAVault.sol:IBaluniV1DCAVault",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address,address,address,uint256)",
          "reinitialize(string,string,address,address,address,uint256,uint64)",
          "changeReinvestDuration(uint256)",
          "deposit(uint256,address)",
          "withdraw(uint256,address)",
          "systemDeposit()",
          "getAmountToSwap()",
          "canSystemDeposit()",
          "pause()",
          "unpause()",
          "unitPrice()",
          "registry()",
          "setExecutor(address,bool)",
          "totalValuation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:25"
            },
            {
              "label": "quoteAsset",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:26"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:28"
            },
            {
              "label": "accumulatedAssetB",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:29"
            },
            {
              "label": "lastDeposit",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:31"
            },
            {
              "label": "lastInvestedBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:32"
            },
            {
              "label": "maxPerSwap",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:33"
            },
            {
              "label": "swapDuration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:34"
            },
            {
              "label": "reinvestDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:35"
            },
            {
              "label": "executors",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaluniV1DCAVault",
              "src": "contracts/vaults/BaluniV1DCAVault.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      },
      "contracts/vaults/BaluniV1YearnVault.sol:BaluniV1YearnVault": {
        "src": "contracts/vaults/BaluniV1YearnVault.sol:17",
        "version": {
          "withMetadata": "d1f9fd9de979d216cf756a00dd8fc34cc14f95168fb0df32b3f8a7282966dfe3",
          "withoutMetadata": "ebe9f3104cf3dc643ac3908beaf8e9f57fed126153a36a3a97dfeb7cf9402602",
          "linkedWithoutMetadata": "ebe9f3104cf3dc643ac3908beaf8e9f57fed126153a36a3a97dfeb7cf9402602"
        },
        "inherit": [
          "contracts/interfaces/IBaluniV1YearnVault.sol:IBaluniV1YearnVault",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,address,address,address,address)",
          "reinitialize(string,string,address,address,address,address,uint64)",
          "deposit(uint256,address)",
          "buy()",
          "pause()",
          "unpause()",
          "totalValuation()",
          "unitPrice()",
          "registry()",
          "yearnVault()",
          "interestEarned()",
          "withdraw(uint256,address)",
          "handleWithdrawB(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "baseAsset",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:26"
            },
            {
              "label": "_yearnVault",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IYearnVault)5526",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:27"
            },
            {
              "label": "quoteAsset",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:28"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaluniV1Registry)4904",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:29"
            },
            {
              "label": "accumulatedAssetB",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:31"
            },
            {
              "label": "lastDeposit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:32"
            },
            {
              "label": "allTimeInterest",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "BaluniV1YearnVault",
              "src": "contracts/vaults/BaluniV1YearnVault.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)201_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)65_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)296_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)360_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_contract(IBaluniV1Registry)4904": {
              "label": "contract IBaluniV1Registry",
              "numberOfBytes": "20"
            },
            "t_contract(IYearnVault)5526": {
              "label": "contract IYearnVault",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.25"
      }
    },
    {
      "contracts/libs/IERC20.sol:IERC20": {
        "src": "contracts/libs/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      },
      "contracts/libs/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/libs/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/libs/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/libs/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.7.6"
      }
    }
  ]
}