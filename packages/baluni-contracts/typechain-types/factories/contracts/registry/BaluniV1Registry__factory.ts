/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BaluniV1Registry,
  BaluniV1RegistryInterface,
} from "../../../contracts/registry/BaluniV1Registry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WNATIVE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_1inchSpotAgg",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_BPS_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_BPS_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_MAX_BPS_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_REBALANCE_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniAgentFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniDCAVaultRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniHyperPoolZap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniPoolPeriphery",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniPoolRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniPoolZap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniRebalancer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniSwapper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniYearnVaultRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get1inchSpotAgg",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBPS_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBPS_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniAgentFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniDCAVaultRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniHyperPoolZap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniPoolPeriphery",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniPoolRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniPoolZap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniRebalancer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniSwapper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaluniYearnVaultRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMAX_BPS_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getREBALANCE_THRESHOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStaticOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUSDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUniswapFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUniswapQuoter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUniswapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWNATIVE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "__1inchSpotAgg",
        type: "address",
      },
    ],
    name: "set1inchSpotAgg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "__BPS_FEE",
        type: "uint256",
      },
    ],
    name: "setBPS_FEE",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniAgentFactory",
        type: "address",
      },
    ],
    name: "setBaluniAgentFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniDCAVaultRegistry",
        type: "address",
      },
    ],
    name: "setBaluniDCAVaultRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniHyperPoolZap",
        type: "address",
      },
    ],
    name: "setBaluniHyperPoolZap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniOracle",
        type: "address",
      },
    ],
    name: "setBaluniOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniPoolPeriphery",
        type: "address",
      },
    ],
    name: "setBaluniPoolPeriphery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniPoolRegistry",
        type: "address",
      },
    ],
    name: "setBaluniPoolRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniPoolZap",
        type: "address",
      },
    ],
    name: "setBaluniPoolZap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniRebalancer",
        type: "address",
      },
    ],
    name: "setBaluniRebalancer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniRegistry",
        type: "address",
      },
    ],
    name: "setBaluniRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniRouter",
        type: "address",
      },
    ],
    name: "setBaluniRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniSwapper",
        type: "address",
      },
    ],
    name: "setBaluniSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baluniYearnVaultRegistry",
        type: "address",
      },
    ],
    name: "setBaluniYearnVaultRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "__REBALANCE_THRESHOLD",
        type: "uint256",
      },
    ],
    name: "setREBALANCE_THRESHOLD",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staticOracle",
        type: "address",
      },
    ],
    name: "setStaticOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_USDC",
        type: "address",
      },
    ],
    name: "setUSDC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniswapFactory",
        type: "address",
      },
    ],
    name: "setUniswapFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniswapQuoter",
        type: "address",
      },
    ],
    name: "setUniswapQuoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniswapRouter",
        type: "address",
      },
    ],
    name: "setUniswapRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_WNATIVE",
        type: "address",
      },
    ],
    name: "setWNATIVE",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "staticOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapQuoter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234603957600e6047565b6014603d565b612da661009c8239608051818181612675015281816126e101526128b00152612da690f35b6043565b60405190565b5f80fd5b604d604f565b565b6055608f565b565b60018060a01b031690565b90565b607460706078926057565b6062565b6057565b90565b6082906065565b90565b608c90607b565b90565b6096306085565b60805256fe60806040526004361015610013575b6119b9565b61001d5f356104ec565b80630218ecd6146104e75780630241bffa146104e2578063040f767e146104dd57806304cc7325146104d85780630f21717d146104d35780631292f02e146104ce5780631acb6141146104c95780631bf01e9b146104c457806326158136146104bf5780632da52442146104ba57806332327d1f146104b557806332569e02146104b057806334decfc9146104ab57806339b65140146104a65780633b19e84a146104a15780633e6dfa361461049c578063400fb66814610497578063468a7071146104925780634b66a1351461048d5780634db4a352146104885780634f1ef286146104835780634f4608a21461047e578063524900b51461047957806352d1902d146104745780635333c1181461046f578063588c5b701461046a57806358a672331461046557806361d027b3146104605780636c43274c1461045b5780636c9c007814610456578063715018a614610451578063735de9f71461044c578063782dd902146104475780637dfb7ea1146104425780638129fc1c1461043d57806382755ebb14610438578063853771881461043357806385462d6f1461042e57806389a30271146104295780638bdb2afa146104245780638da5cb5b1461041f5780638e1c3a8a1461041a5780638ffc0673146104155780639380fb6f146104105780639454705f1461040b57806399c22ca6146104065780639d9a9d47146104015780639e6453f8146103fc578063a23dccee146103f7578063a5d2236f146103f2578063ad3cb1cc146103ed578063b0a70975146103e8578063b381cf40146103e3578063b3e089a2146103de578063b691a419146103d9578063b6fe9cc7146103d4578063b9f5e617146103cf578063ba535c54146103ca578063bb3ba04c146103c5578063bea9849e146103c0578063c08f786b146103bb578063c3f5df5c146103b6578063c9aba8ae146103b1578063cc01e9a6146103ac578063cff49d68146103a7578063d7e53673146103a2578063e04b677f1461039d578063e23d837b14610398578063e528ca1214610393578063ea233c051461038e578063f0f4426014610389578063f1dccde714610384578063f2fde38b1461037f578063f5b84f641461037a578063f5d2d99814610375578063f98977a9146103705763ffa08e950361000e57611984565b611951565b61191c565b6118e9565b6118b6565b611883565b611850565b61181b565b6117e6565b6117a2565b611760565b61172d565b6116f8565b6116c5565b611690565b61165d565b61162a565b6115f7565b6115c2565b61158f565b61155a565b611518565b6114e3565b6114a1565b61146c565b611428565b6113f3565b6112c4565b611291565b61125e565b611229565b6111e5565b6111a1565b61115d565b61112a565b6110f5565b6110c0565b61108b565b611049565b611005565b610fd0565b610f8c565b610f59565b610f24565b610ee0565b610e9c565b610e5a565b610e25565b610df2565b610dbd565b610d79565b610d37565b610d02565b610cbe565b610c64565b610c2f565b610c05565b610aa6565b610a62565b610a1e565b6109dc565b6109a7565b610972565b61093d565b6108f9565b61086a565b610835565b610802565b61078b565b610756565b610721565b6106ec565b6106a8565b610673565b61063e565b61060b565b61058c565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f91031261050a57565b6104fc565b1c90565b60018060a01b031690565b61052e906008610533930261050f565b610513565b90565b90610541915461051e565b90565b610550600a5f90610536565b90565b60018060a01b031690565b61056790610553565b90565b6105739061055e565b9052565b919061058a905f6020850194019061056a565b565b346105bc5761059c366004610500565b6105b86105a7610544565b6105af6104f2565b91829182610577565b0390f35b6104f8565b5f80fd5b6105ce8161055e565b036105d557565b5f80fd5b905035906105e6826105c5565b565b90602082820312610601576105fe915f016105d9565b90565b6104fc565b5f0190565b346106395761062361061e3660046105e8565b611a57565b61062b6104f2565b8061063581610606565b0390f35b6104f8565b3461066e5761064e366004610500565b61066a610659611a8c565b6106616104f2565b91829182610577565b0390f35b6104f8565b346106a357610683366004610500565b61069f61068e611aa2565b6106966104f2565b91829182610577565b0390f35b6104f8565b346106d8576106b8366004610500565b6106d46106c3611ab8565b6106cb6104f2565b91829182610577565b0390f35b6104f8565b6106e960025f90610536565b90565b3461071c576106fc366004610500565b6107186107076106dd565b61070f6104f2565b91829182610577565b0390f35b6104f8565b3461075157610731366004610500565b61074d61073c611ace565b6107446104f2565b91829182610577565b0390f35b6104f8565b3461078657610766366004610500565b610782610771611ae4565b6107796104f2565b91829182610577565b0390f35b6104f8565b346107b9576107a361079e3660046105e8565b611b1a565b6107ab6104f2565b806107b581610606565b0390f35b6104f8565b90565b6107ca816107be565b036107d157565b5f80fd5b905035906107e2826107c1565b565b906020828203126107fd576107fa915f016107d5565b90565b6104fc565b346108305761081a6108153660046107e4565b611b9a565b6108226104f2565b8061082c81610606565b0390f35b6104f8565b3461086557610845366004610500565b610861610850611ba5565b6108586104f2565b91829182610577565b0390f35b6104f8565b3461089a5761087a366004610500565b610896610885611bbb565b61088d6104f2565b91829182610577565b0390f35b6104f8565b90565b6108b29060086108b7930261050f565b61089f565b90565b906108c591546108a2565b90565b6108d460115f906108ba565b90565b6108e0906107be565b9052565b91906108f7905f602085019401906108d7565b565b3461092957610909366004610500565b6109256109146108c8565b61091c6104f2565b918291826108e4565b0390f35b6104f8565b61093a60065f90610536565b90565b3461096d5761094d366004610500565b61096961095861092e565b6109606104f2565b91829182610577565b0390f35b6104f8565b346109a257610982366004610500565b61099e61098d611bd1565b6109956104f2565b91829182610577565b0390f35b6104f8565b346109d7576109b7366004610500565b6109d36109c2611be7565b6109ca6104f2565b91829182610577565b0390f35b6104f8565b34610a0a576109f46109ef3660046105e8565b611c1c565b6109fc6104f2565b80610a0681610606565b0390f35b6104f8565b610a1b60085f90610536565b90565b34610a4e57610a2e366004610500565b610a4a610a39610a0f565b610a416104f2565b91829182610577565b0390f35b6104f8565b610a5f60045f90610536565b90565b34610a9257610a72366004610500565b610a8e610a7d610a53565b610a856104f2565b91829182610577565b0390f35b6104f8565b610aa360155f90610536565b90565b34610ad657610ab6366004610500565b610ad2610ac1610a97565b610ac96104f2565b91829182610577565b0390f35b6104f8565b5f80fd5b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b90610b0b90610ae3565b810190811060018060401b03821117610b2357604052565b610aed565b90610b3b610b346104f2565b9283610b01565b565b60018060401b038111610b5957610b55602091610ae3565b0190565b610aed565b90825f939282370152565b90929192610b7e610b7982610b3d565b610b28565b93818552602085019082840111610b9a57610b9892610b5e565b565b610adf565b9080601f83011215610bbd57816020610bba93359101610b69565b90565b610adb565b919091604081840312610c0057610bdb835f83016105d9565b92602082013560018060401b038111610bfb57610bf89201610b9f565b90565b6105c1565b6104fc565b610c19610c13366004610bc2565b90611c50565b610c216104f2565b80610c2b81610606565b0390f35b34610c5f57610c3f366004610500565b610c5b610c4a611c81565b610c526104f2565b918291826108e4565b0390f35b6104f8565b34610c9457610c74366004610500565b610c90610c7f611c97565b610c876104f2565b91829182610577565b0390f35b6104f8565b90565b610ca590610c99565b9052565b9190610cbc905f60208501940190610c9c565b565b34610cee57610cce366004610500565b610cea610cd9611d1c565b610ce16104f2565b91829182610ca9565b0390f35b6104f8565b610cff60165f90610536565b90565b34610d3257610d12366004610500565b610d2e610d1d610cf3565b610d256104f2565b91829182610577565b0390f35b6104f8565b34610d6557610d4f610d4a3660046105e8565b611d4f565b610d576104f2565b80610d6181610606565b0390f35b6104f8565b610d7660035f90610536565b90565b34610da957610d89366004610500565b610da5610d94610d6a565b610d9c6104f2565b91829182610577565b0390f35b6104f8565b610dba600c5f90610536565b90565b34610ded57610dcd366004610500565b610de9610dd8610dae565b610de06104f2565b91829182610577565b0390f35b6104f8565b34610e2057610e0a610e053660046105e8565b611d7a565b610e126104f2565b80610e1c81610606565b0390f35b6104f8565b34610e5557610e35366004610500565b610e51610e40611d85565b610e486104f2565b91829182610577565b0390f35b6104f8565b34610e8857610e6a366004610500565b610e72611deb565b610e7a6104f2565b80610e8481610606565b0390f35b6104f8565b610e9960015f90610536565b90565b34610ecc57610eac366004610500565b610ec8610eb7610e8d565b610ebf6104f2565b91829182610577565b0390f35b6104f8565b610edd60105f90610536565b90565b34610f1057610ef0366004610500565b610f0c610efb610ed1565b610f036104f2565b91829182610577565b0390f35b6104f8565b610f2160095f90610536565b90565b34610f5457610f34366004610500565b610f50610f3f610f15565b610f476104f2565b91829182610577565b0390f35b6104f8565b34610f8757610f69366004610500565b610f716121ad565b610f796104f2565b80610f8381610606565b0390f35b6104f8565b34610fbc57610f9c366004610500565b610fb8610fa76121b7565b610faf6104f2565b91829182610577565b0390f35b6104f8565b610fcd60135f906108ba565b90565b3461100057610fe0366004610500565b610ffc610feb610fc1565b610ff36104f2565b918291826108e4565b0390f35b6104f8565b3461103557611015366004610500565b6110316110206121cd565b6110286104f2565b918291826108e4565b0390f35b6104f8565b611046600f5f90610536565b90565b3461107957611059366004610500565b61107561106461103a565b61106c6104f2565b91829182610577565b0390f35b6104f8565b6110885f80610536565b90565b346110bb5761109b366004610500565b6110b76110a661107e565b6110ae6104f2565b91829182610577565b0390f35b6104f8565b346110f0576110d0366004610500565b6110ec6110db6121e3565b6110e36104f2565b91829182610577565b0390f35b6104f8565b3461112557611105366004610500565b611121611110612201565b6111186104f2565b91829182610577565b0390f35b6104f8565b346111585761114261113d3660046105e8565b612237565b61114a6104f2565b8061115481610606565b0390f35b6104f8565b3461118d5761116d366004610500565b611189611178612242565b6111806104f2565b918291826108e4565b0390f35b6104f8565b61119e600d5f90610536565b90565b346111d1576111b1366004610500565b6111cd6111bc611192565b6111c46104f2565b91829182610577565b0390f35b6104f8565b6111e260145f906108ba565b90565b34611215576111f5366004610500565b6112116112006111d6565b6112086104f2565b918291826108e4565b0390f35b6104f8565b61122660175f90610536565b90565b3461125957611239366004610500565b61125561124461121a565b61124c6104f2565b91829182610577565b0390f35b6104f8565b3461128c576112766112713660046107e4565b612278565b61127e6104f2565b8061128881610606565b0390f35b6104f8565b346112bf576112a96112a43660046105e8565b6122a3565b6112b16104f2565b806112bb81610606565b0390f35b6104f8565b346112f4576112d4366004610500565b6112f06112df6122ae565b6112e76104f2565b91829182610577565b0390f35b6104f8565b60018060401b03811161131557611311602091610ae3565b0190565b610aed565b9061132c611327836112f9565b610b28565b918252565b5f7f352e302e30000000000000000000000000000000000000000000000000000000910152565b611362600561131a565b9061136f60208301611331565b565b611379611358565b90565b611384611371565b90565b61138f61137c565b90565b5190565b60209181520190565b90825f9392825e0152565b6113c96113d26020936113d7936113c081611392565b93848093611396565b9586910161139f565b610ae3565b0190565b6113f09160208201915f8184039101526113aa565b90565b3461142357611403366004610500565b61141f61140e611387565b6114166104f2565b918291826113db565b0390f35b6104f8565b3461145857611438366004610500565b6114546114436122c4565b61144b6104f2565b91829182610577565b0390f35b6104f8565b611469600e5f90610536565b90565b3461149c5761147c366004610500565b61149861148761145d565b61148f6104f2565b91829182610577565b0390f35b6104f8565b346114cf576114b96114b43660046105e8565b6122fa565b6114c16104f2565b806114cb81610606565b0390f35b6104f8565b6114e060055f90610536565b90565b34611513576114f3366004610500565b61150f6114fe6114d4565b6115066104f2565b91829182610577565b0390f35b6104f8565b346115465761153061152b3660046105e8565b612325565b6115386104f2565b8061154281610606565b0390f35b6104f8565b61155760125f906108ba565b90565b3461158a5761156a366004610500565b61158661157561154b565b61157d6104f2565b918291826108e4565b0390f35b6104f8565b346115bd576115a76115a23660046105e8565b612350565b6115af6104f2565b806115b981610606565b0390f35b6104f8565b346115f2576115d2366004610500565b6115ee6115dd61235b565b6115e56104f2565b91829182610577565b0390f35b6104f8565b346116255761160f61160a3660046105e8565b612391565b6116176104f2565b8061162181610606565b0390f35b6104f8565b346116585761164261163d3660046105e8565b6123bc565b61164a6104f2565b8061165481610606565b0390f35b6104f8565b3461168b576116756116703660046105e8565b6123e7565b61167d6104f2565b8061168781610606565b0390f35b6104f8565b346116c0576116a0366004610500565b6116bc6116ab6123f2565b6116b36104f2565b91829182610577565b0390f35b6104f8565b346116f3576116dd6116d83660046105e8565b612428565b6116e56104f2565b806116ef81610606565b0390f35b6104f8565b3461172857611708366004610500565b611724611713612433565b61171b6104f2565b91829182610577565b0390f35b6104f8565b3461175b576117456117403660046105e8565b612469565b61174d6104f2565b8061175781610606565b0390f35b6104f8565b3461178e576117786117733660046105e8565b612493565b6117806104f2565b8061178a81610606565b0390f35b6104f8565b61179f600b5f90610536565b90565b346117d2576117b2366004610500565b6117ce6117bd611793565b6117c56104f2565b91829182610577565b0390f35b6104f8565b6117e360075f90610536565b90565b34611816576117f6366004610500565b6118126118016117d7565b6118096104f2565b91829182610577565b0390f35b6104f8565b3461184b5761182b366004610500565b61184761183661249e565b61183e6104f2565b918291826108e4565b0390f35b6104f8565b3461187e576118686118633660046105e8565b6124d4565b6118706104f2565b8061187a81610606565b0390f35b6104f8565b346118b15761189b6118963660046105e8565b6124ff565b6118a36104f2565b806118ad81610606565b0390f35b6104f8565b346118e4576118ce6118c93660046105e8565b612576565b6118d66104f2565b806118e081610606565b0390f35b6104f8565b34611917576119016118fc3660046105e8565b6125a1565b6119096104f2565b8061191381610606565b0390f35b6104f8565b3461194c5761192c366004610500565b6119486119376125ac565b61193f6104f2565b91829182610577565b0390f35b6104f8565b3461197f576119696119643660046105e8565b6125e2565b6119716104f2565b8061197b81610606565b0390f35b6104f8565b346119b457611994366004610500565b6119b061199f6125ed565b6119a76104f2565b91829182610577565b0390f35b6104f8565b5f80fd5b6119ce906119c9612603565b611a4a565b565b5f1b90565b906119e660018060a01b03916119d0565b9181191691161790565b90565b611a07611a02611a0c92610553565b6119f0565b610553565b90565b611a18906119f3565b90565b611a2490611a0f565b90565b90565b90611a3f611a3a611a4692611a1b565b611a27565b82546119d5565b9055565b611a55906005611a2a565b565b611a60906119bd565b565b5f90565b5f1c90565b611a77611a7c91611a66565b610513565b90565b611a899054611a6b565b90565b611a94611a62565b50611a9f6016611a7f565b90565b611aaa611a62565b50611ab56006611a7f565b90565b611ac0611a62565b50611acb6017611a7f565b90565b611ad6611a62565b50611ae16003611a7f565b90565b611aec611a62565b50611af7600f611a7f565b90565b611b0b90611b06612603565b611b0d565b565b611b18906015611a2a565b565b611b2390611afa565b565b611b3690611b31612603565b611b8d565b565b90611b445f19916119d0565b9181191691161790565b611b62611b5d611b67926107be565b6119f0565b6107be565b90565b90565b90611b82611b7d611b8992611b4e565b611b6a565b8254611b38565b9055565b611b98906014611b6d565b565b611ba390611b25565b565b611bad611a62565b50611bb8600a611a7f565b90565b611bc3611a62565b50611bce6004611a7f565b90565b611bd9611a62565b50611be4600c611a7f565b90565b611bef611a62565b50611bf95f611a7f565b90565b611c0d90611c08612603565b611c0f565b565b611c1a906006611a2a565b565b611c2590611bfc565b565b90611c3991611c34612664565b611c3b565b565b90611c4e91611c498161271d565b612793565b565b90611c5a91611c27565b565b5f90565b611c6c611c7191611a66565b61089f565b90565b611c7e9054611c60565b90565b611c89611c5c565b50611c946013611c74565b90565b611c9f611a62565b50611caa6001611a7f565b90565b5f90565b611cc290611cbd61289f565b611d10565b90565b90565b611cdc611cd7611ce192611cc5565b6119d0565b610c99565b90565b611d0d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc611cc8565b90565b50611d19611ce4565b90565b611d2c611d27611cad565b611cb1565b90565b611d4090611d3b612603565b611d42565b565b611d4d906003611a2a565b565b611d5890611d2f565b565b611d6b90611d66612603565b611d6d565b565b611d78906007611a2a565b565b611d8390611d5a565b565b611d8d611a62565b50611d98600e611a7f565b90565b611da3612603565b611dab611dd8565b565b90565b611dc4611dbf611dc992611dad565b6119f0565b610553565b90565b611dd590611db0565b90565b611de9611de45f611dcc565b612904565b565b611df3611d9b565b565b60401c90565b60ff1690565b611e0d611e1291611df5565b611dfb565b90565b611e1f9054611e01565b90565b151590565b60018060401b031690565b611e3e611e4391611a66565b611e27565b90565b611e509054611e32565b90565b60018060401b031690565b611e72611e6d611e7792611dad565b6119f0565b611e53565b90565b90565b611e91611e8c611e9692611e7a565b6119f0565b611e53565b90565b611ea290611a0f565b90565b611eb9611eb4611ebe92611dad565b6119f0565b6107be565b90565b90611ed260018060401b03916119d0565b9181191691161790565b611ef0611eeb611ef592611e53565b6119f0565b611e53565b90565b90565b90611f10611f0b611f1792611edc565b611ef8565b8254611ec1565b9055565b60401b90565b90611f3060ff60401b91611f1b565b9181191691161790565b611f4390611e22565b90565b90565b90611f5e611f59611f6592611f3a565b611f46565b8254611f21565b9055565b611f7290611e7d565b9052565b9190611f89905f60208501940190611f69565b565b611f93612970565b611fa7611fa15f8301611e15565b15611e22565b611fb25f8301611e46565b80611fc5611fbf5f611e5e565b91611e53565b14806120e5575b90611fe0611fda6001611e7d565b91611e53565b14806120bd575b611ff2909115611e22565b90816120ac575b506120895761201361200b6001611e7d565b5f8401611efb565b80612077575b612021612149565b612029575b50565b612036905f809101611f49565b600161206e7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2916120656104f2565b91829182611f76565b0390a15f612026565b61208460015f8401611f49565b612019565b6120916104f2565b63f92ee8a960e01b8152806120a860048201610606565b0390fd5b6120b7915015611e22565b5f611ff9565b50611ff26120ca30611e99565b3b6120dd6120d75f611ea5565b916107be565b149050611fe7565b5081611fcc565b90565b6121036120fe612108926120ec565b6119f0565b6107be565b90565b90565b61212261211d6121279261210b565b6119f0565b6107be565b90565b90565b61214161213c6121469261212a565b6119f0565b6107be565b90565b612152336129b2565b61215a6129c7565b61216e61216760646120ef565b6011611b6d565b61218261217b601e61210e565b6012611b6d565b61219761219061271061212d565b6013611b6d565b6121ab6121a460646120ef565b6014611b6d565b565b6121b5611f8b565b565b6121bf611a62565b506121ca6009611a7f565b90565b6121d5611c5c565b506121e06012611c74565b90565b6121eb611a62565b506121fe5f6121f86129d1565b01611a7f565b90565b612209611a62565b506122146010611a7f565b90565b61222890612223612603565b61222a565b565b612235906016611a2a565b565b61224090612217565b565b61224a611c5c565b506122556011611c74565b90565b61226990612264612603565b61226b565b565b612276906012611b6d565b565b61228190612258565b565b6122949061228f612603565b612296565b565b6122a1906017611a2a565b565b6122ac90612283565b565b6122b6611a62565b506122c1600d611a7f565b90565b6122cc611a62565b506122d76015611a7f565b90565b6122eb906122e6612603565b6122ed565b565b6122f890600f611a2a565b565b612303906122da565b565b61231690612311612603565b612318565b565b61232390600e611a2a565b565b61232e90612305565b565b6123419061233c612603565b612343565b565b61234e90600a611a2a565b565b61235990612330565b565b612363611a62565b5061236e6008611a7f565b90565b6123829061237d612603565b612384565b565b61238f906001611a2a565b565b61239a90612371565b565b6123ad906123a8612603565b6123af565b565b6123ba906010611a2a565b565b6123c59061239c565b565b6123d8906123d3612603565b6123da565b565b6123e5906009611a2a565b565b6123f0906123c7565b565b6123fa611a62565b506124056007611a7f565b90565b61241990612414612603565b61241b565b565b61242690600d611a2a565b565b61243190612408565b565b61243b611a62565b506124466005611a7f565b90565b61245a90612455612603565b61245c565b565b61246790600b611a2a565b565b61247290612449565b565b61248590612480612603565b612487565b565b612491905f611a2a565b565b61249c90612474565b565b6124a6611c5c565b506124b16014611c74565b90565b6124c5906124c0612603565b6124c7565b565b6124d290600c611a2a565b565b6124dd906124b4565b565b6124f0906124eb612603565b6124f2565b565b6124fd906002611a2a565b565b612508906124df565b565b61251b90612516612603565b61251d565b565b8061253861253261252d5f611dcc565b61055e565b9161055e565b146125485761254690612904565b565b6125726125545f611dcc565b61255c6104f2565b918291631e4fbdf760e01b835260048301610577565b0390fd5b61257f9061250a565b565b6125929061258d612603565b612594565b565b61259f906008611a2a565b565b6125aa90612581565b565b6125b4611a62565b506125bf6002611a7f565b90565b6125d3906125ce612603565b6125d5565b565b6125e0906004611a2a565b565b6125eb906125c2565b565b6125f5611a62565b50612600600b611a7f565b90565b61260b6121e3565b61262461261e6126196129f5565b61055e565b9161055e565b0361262b57565b6126546126366129f5565b61263e6104f2565b91829163118cdaa760e01b835260048301610577565b0390fd5b61266190611a0f565b90565b61266d30612658565b61269f6126997f000000000000000000000000000000000000000000000000000000000000000061055e565b9161055e565b1480156126d0575b6126ad57565b6126b56104f2565b63703e46dd60e11b8152806126cc60048201610606565b0390fd5b506126d9612a02565b61270b6127057f000000000000000000000000000000000000000000000000000000000000000061055e565b9161055e565b14156126a7565b5061271b612603565b565b61272690612712565b565b612731906119f3565b90565b61273d90612728565b90565b61274990611a0f565b90565b60e01b90565b61275b81610c99565b0361276257565b5f80fd5b9050519061277382612752565b565b9060208282031261278e5761278b915f01612766565b90565b6104fc565b91906127c160206127ab6127a686612734565b612740565b6352d1902d906127b96104f2565b93849261274c565b825281806127d160048201610606565b03915afa80915f9261286f575b50155f146128195750509060016127f357505b565b612815906127ff6104f2565b918291634c9c8ce360e01b835260048301610577565b0390fd5b928361283461282e612829611ce4565b610c99565b91610c99565b0361284957612844929350612a2c565b6127f1565b61286b846128556104f2565b918291632a87526960e21b835260048301610ca9565b0390fd5b61289191925060203d8111612898575b6128898183610b01565b810190612775565b905f6127de565b503d61287f565b6128a830612658565b6128da6128d47f000000000000000000000000000000000000000000000000000000000000000061055e565b9161055e565b036128e157565b6128e96104f2565b63703e46dd60e11b81528061290060048201610606565b0390fd5b61290c6129d1565b61292461291a5f8301611a7f565b915f849101611a2a565b906129586129527f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093611a1b565b91611a1b565b916129616104f2565b8061296b81610606565b0390a3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090565b6129a5906129a0612ab5565b6129a7565b565b6129b090612b5b565b565b6129bb90612994565b565b6129c5612ab5565b565b6129cf6129bd565b565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930090565b6129fd611a62565b503390565b612a0a611a62565b50612a255f612a1f612a1a611ce4565b612b66565b01611a7f565b90565b5190565b90612a3682612b69565b81612a617fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91611a1b565b90612a6a6104f2565b80612a7481610606565b0390a2612a8081612a28565b612a92612a8c5f611ea5565b916107be565b115f14612aa657612aa291612c47565b505b565b5050612ab0612bc5565b612aa4565b612ac6612ac0612c7a565b15611e22565b612acc57565b612ad46104f2565b631afcd79f60e31b815280612aeb60048201610606565b0390fd5b612b0090612afb612ab5565b612b02565b565b80612b1d612b17612b125f611dcc565b61055e565b9161055e565b14612b2d57612b2b90612904565b565b612b57612b395f611dcc565b612b416104f2565b918291631e4fbdf760e01b835260048301610577565b0390fd5b612b6490612aef565b565b90565b803b612b7d612b775f611ea5565b916107be565b14612b9f57612b9d905f612b97612b92611ce4565b612b66565b01611a2a565b565b612bc190612bab6104f2565b918291634c9c8ce360e01b835260048301610577565b0390fd5b34612bd8612bd25f611ea5565b916107be565b11612bdf57565b612be76104f2565b63b398979f60e01b815280612bfe60048201610606565b0390fd5b606090565b90612c19612c1483610b3d565b610b28565b918252565b3d5f14612c3957612c2e3d612c07565b903d5f602084013e5b565b612c41612c02565b90612c37565b5f80612c7393612c55612c02565b508390602081019051915af490612c6a612c1e565b90919091612c98565b90565b5f90565b612c82612c76565b50612c955f612c8f612970565b01611e15565b90565b90612cac90612ca5612c02565b5015611e22565b5f14612cb85750612d23565b612cc182612a28565b612cd3612ccd5f611ea5565b916107be565b1480612d08575b612ce2575090565b612d0490612cee6104f2565b918291639996b31560e01b835260048301610577565b0390fd5b50803b612d1d612d175f611ea5565b916107be565b14612cda565b612d2c81612a28565b612d3e612d385f611ea5565b916107be565b115f14612d4d57805190602001fd5b612d556104f2565b630a12f52160e11b815280612d6c60048201610606565b0390fdfea26469706673582212208116f2c62862877397c02b847c9172cb467862ddb506506c0be5e641bce0dca864736f6c63430008190033";

type BaluniV1RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaluniV1RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaluniV1Registry__factory extends ContractFactory {
  constructor(...args: BaluniV1RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BaluniV1Registry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BaluniV1Registry__factory {
    return super.connect(runner) as BaluniV1Registry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaluniV1RegistryInterface {
    return new Interface(_abi) as BaluniV1RegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaluniV1Registry {
    return new Contract(address, _abi, runner) as unknown as BaluniV1Registry;
  }
}
