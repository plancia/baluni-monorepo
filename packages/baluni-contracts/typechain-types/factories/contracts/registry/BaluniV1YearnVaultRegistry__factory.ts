/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BaluniV1YearnVaultRegistry,
  BaluniV1YearnVaultRegistryInterface,
} from "../../../contracts/registry/BaluniV1YearnVaultRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "vaultCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "addVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allVaults",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVaults",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "getVaultAsset",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getVaultType0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getVaultType0ByAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getVaultType1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset1",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset2",
        type: "address",
      },
    ],
    name: "getVaultType1ByAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getVaultsByAsset",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_register",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IBaluniV1Registry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_register",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_version",
        type: "uint64",
      },
    ],
    name: "reinitialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "removeVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "vaultExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0806040523460295730608052611a37908161002e8239608051818181610d520152610e4f0152f35b5f80fdfe604060808152600480361015610013575f80fd5b5f3560e01c90816302b3537d14611510578163108940521461136e5781631f844a4c1461133b578163256b5a02146110d65781634f1ef28614610dc757816352d1902d14610d2a578163592717af14610969578163715018a614610c8c5781637b10399914610c585781638da5cb5b14610c055781638f2248bc14610aa45781639094a91e14610a5757816397331bf9146109c1578163a14eb08514610969578163ad3cb1cc1461089a578163b9b658db1461087d578163c4d66de8146106a8578163ca9d67c8146104e6578163ceb68c231461017857508063f2fde38b1461014d5763f769322714610104575f80fd5b346101495760206003193601126101495760209073ffffffffffffffffffffffffffffffffffffffff8061013661153e565b165f5260028352815f2054169051908152f35b5f80fd5b346101495760206003193601126101495761017661016961153e565b610171611898565b6117d7565b005b905034610149576020806003193601126101495761019461153e565b9261019d611898565b73ffffffffffffffffffffffffffffffffffffffff938416925f5b5f5480821015610176578690866101ce8461167d565b939054600394851b1c16146101e75750506001016101b8565b949096959293917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff958681019081116104ba57906102388861022b6102649461167d565b9054908c1b1c169161167d565b90919073ffffffffffffffffffffffffffffffffffffffff8084549260031b9316831b921b1916179055565b8151907fcdf456e1000000000000000000000000000000000000000000000000000000009182815281818781885afa90811561041e579088915f9161049d575b50165f5260028152825f20937fffffffffffffffffffffffff0000000000000000000000000000000000000000948581541690558351927ffdf262b7000000000000000000000000000000000000000000000000000000009384815283818981865afa90811561049357908a915f91610476575b50165f52898352845f20855182815284818a81875afa90811561046c57908b915f9161044f575b50165f528352845f20868154169055845190815282818881855afa908115610445579089915f91610428575b50165f5288825281845f20938786518094819382525afa90811561041e579088915f916103f1575b50165f52525f209081541690555f549081156103c5575001916103b58361167d565b8154921b9290921b191690555f55005b6031907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b6104119150833d8511610417575b61040981836115d5565b810190611797565b5f610393565b503d6103ff565b84513d5f823e3d90fd5b61043f9150843d86116104175761040981836115d5565b5f61036b565b85513d5f823e3d90fd5b6104669150863d88116104175761040981836115d5565b5f61033f565b87513d5f823e3d90fd5b61048d9150853d87116104175761040981836115d5565b5f610318565b86513d5f823e3d90fd5b6104b49150833d85116104175761040981836115d5565b5f6102a4565b6011867f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b823461014957602090816003193601126101495761050261153e565b8151926060840184811067ffffffffffffffff82111761067c578352600284528084018336823773ffffffffffffffffffffffffffffffffffffffff8093169084517fcdf456e100000000000000000000000000000000000000000000000000000000815283818981865afa908115610493575f9161065f575b50865115610633579183918589941690528551928380927ffdf262b70000000000000000000000000000000000000000000000000000000082525afa91821561041e575f92610616575b50508351600110156105ea576105e6945016818301525191829182611584565b0390f35b6032857f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b61062c9250803d106104175761040981836115d5565b85806105c6565b6032887f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b6106769150843d86116104175761040981836115d5565b8861057c565b6041867f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b905034610149576020600319360112610149576106c361153e565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff821680159081610875575b600114908161086b575b159081610862575b5061083b575090818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516178655610806575b5061076a611908565b610772611908565b61077a611908565b610783336117d7565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001556107b357005b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291817fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff602093541690555160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011784555f610761565b85517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b9050155f610716565b303b15915061070e565b859150610704565b8234610149575f600319360112610149576020905f549051908152f35b8234610149575f600319360112610149578051918183019083821067ffffffffffffffff83111761093d575081526005825260208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b823461014957806003193601126101495760209061098561153e565b61098d611561565b73ffffffffffffffffffffffffffffffffffffffff8092165f526003845281835f2091165f528352815f2054169051908152f35b8234610149575f6003193601126101495780515f8054808352818052602080840194927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392915b828210610a2a576105e68686610a20828b03836115d5565b5191829182611584565b835473ffffffffffffffffffffffffffffffffffffffff1687529586019560019384019390910190610a08565b9050346101495760206003193601126101495735905f548210156101495773ffffffffffffffffffffffffffffffffffffffff610a9560209361167d565b92905490519260031b1c168152f35b8234610149578060031936011261014957610abd61153e565b916024359267ffffffffffffffff90818516809503610149577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215610bf8575b5050610bd1577fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260208787877fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000847fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000008b73ffffffffffffffffffffffffffffffffffffffff8c167fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015516171716905551908152a1005b84517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8516101590508688610b0a565b8234610149575f6003193601126101495760209073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054169051908152f35b8234610149575f6003193601126101495760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b34610149575f60031936011261014957610ca4611898565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b8234610149575f6003193601126101495773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610da157602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b90508160031936011261014957610ddc61153e565b602492833567ffffffffffffffff811161014957366023820112156101495780840135610e0881611643565b93610e15845195866115d5565b818552602091828601933689838301011161014957815f928a86930187378701015273ffffffffffffffffffffffffffffffffffffffff807f0000000000000000000000000000000000000000000000000000000000000000168030149081156110a8575b5061108057610e87611898565b81169484517f52d1902d000000000000000000000000000000000000000000000000000000008152838189818a5afa5f9181611051575b50610ef257505050505051917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036110245750853b15610ff75750817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610fc45750505f6101769581925190845af4913d15610fba573d610fac610fa382611643565b925192836115d5565b81525f81943d92013e611961565b5060609250611961565b9450945050505034610fd257005b7fb398979f000000000000000000000000000000000000000000000000000000008152fd5b83838851917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b84908851917faa1d49a4000000000000000000000000000000000000000000000000000000008352820152fd5b9091508481813d8311611079575b61106981836115d5565b810103126101495751905f610ebe565b503d61105f565b8685517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614155f610e7a565b82346101495760209081600319360112610149576110f261153e565b916110fb611898565b73ffffffffffffffffffffffffffffffffffffffff8084169384156112b9575f546801000000000000000081101561128d579061023882600161114094015f5561167d565b8251947fcdf456e100000000000000000000000000000000000000000000000000000000865282868281885afa95861561041e575f9661126e575b5082845180927ffdf262b700000000000000000000000000000000000000000000000000000000825281885afa90811561041e579082915f91611251575b5016806111f857506002929394165f52525f20907fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790555f80f35b91941690815f5260038552825f20905f528452815f20937fffffffffffffffffffffffff000000000000000000000000000000000000000094848682541617905560038152825f20915f52525f20918254161790555f80f35b6112689150843d86116104175761040981836115d5565b876111b9565b611286919650833d85116104175761040981836115d5565b948661117b565b6041877f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b608486848651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602b60248201527f42616c756e6956315661756c74466163746f72793a20494e56414c49445f766160448201527f756c745f414444524553530000000000000000000000000000000000000000006064820152fd5b82346101495760206003193601126101495760209073ffffffffffffffffffffffffffffffffffffffff8061013661153e565b9050346101495760209060206003193601126101495761138c61153e565b915f549261139984611748565b925f9273ffffffffffffffffffffffffffffffffffffffff928316845b878110611407575b50505050909192506113cf82611748565b925f5b8381106113e6578551806105e68782611584565b80836113f4600193856117c3565b511661140082886117c3565b52016113d2565b846114118261167d565b90549060031b1c1689517fcdf456e100000000000000000000000000000000000000000000000000000000815284818781855afa90811561150657849188915f916114e9575b50161461147457508651861461146f576001016113b6565b6113be565b939496975050505061148683866117c3565b527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82146114bd575060010182915f8080806113be565b6011907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b6115009150873d89116104175761040981836115d5565b5f611457565b8b513d5f823e3d90fd5b82346101495760206003193601126101495760209061153561153061153e565b6116dd565b90519015158152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361014957565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361014957565b60209060206040818301928281528551809452019301915f5b8281106115ab575050505090565b835173ffffffffffffffffffffffffffffffffffffffff168552938101939281019260010161159d565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761161657604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161161657601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b5f548110156116b0575f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f905f54915b8281106116f1575050505f90565b6116fa8161167d565b9073ffffffffffffffffffffffffffffffffffffffff90548185169260031b1c1614611728576001016116e3565b505050600190565b67ffffffffffffffff81116116165760051b60200190565b9061175282611730565b61175f60405191826115d5565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061178d8294611730565b0190602036910137565b90816020910312610149575173ffffffffffffffffffffffffffffffffffffffff811681036101495790565b80518210156116b05760209160051b010190565b73ffffffffffffffffffffffffffffffffffffffff809116908115611868577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300541633036118d857565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561193757565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b906119a0575080511561197657805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b815115806119f8575b6119b1575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b156119a956fea2646970667358221220f0e6b0f3471ed603c3b4b2a6e84af6cde102a25928aabf0423be28372761631064736f6c63430008190033";

type BaluniV1YearnVaultRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaluniV1YearnVaultRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaluniV1YearnVaultRegistry__factory extends ContractFactory {
  constructor(...args: BaluniV1YearnVaultRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BaluniV1YearnVaultRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BaluniV1YearnVaultRegistry__factory {
    return super.connect(runner) as BaluniV1YearnVaultRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaluniV1YearnVaultRegistryInterface {
    return new Interface(_abi) as BaluniV1YearnVaultRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaluniV1YearnVaultRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BaluniV1YearnVaultRegistry;
  }
}
