/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BaluniV1DCAVaultRegistry,
  BaluniV1DCAVaultRegistryInterface,
} from "../../../contracts/registry/BaluniV1DCAVaultRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "vaultCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "addVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allVaults",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVaults",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "getVaultAsset",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset1",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset2",
        type: "address",
      },
    ],
    name: "getVaultType1ByAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getVaultsByAsset",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_register",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IBaluniV1Registry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_register",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_version",
        type: "uint64",
      },
    ],
    name: "reinitialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "removeVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "vaultExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a080604052346029573060805261190f908161002e8239608051818181610ca10152610d9c0152f35b5f80fdfe60406080815260049081361015610014575f80fd5b5f3560e01c91826302b3537d146113e85782631089405214611248578263256b5a02146110235782634f1ef28614610d1657826352d1902d14610c79578263592717af146107ce578263715018a614610bdb5782637b10399914610ba75782638da5cb5b14610b545782638f2248bc146109f35782639094a91e146109a857826397331bf914610912578263ad3cb1cc14610843578263b9b658db14610826578263bbd7edc5146107ce578263c4d66de8146105fb578263ca9d67c814610439578263ceb68c231461011f57505063f2fde38b146100f0575f80fd5b3461011b57602060031936011261011b5761011961010c611416565b610114611770565b6116af565b005b5f80fd5b3461011b5760208060031936011261011b57610139611416565b92610142611770565b73ffffffffffffffffffffffffffffffffffffffff938416925f5b5f54808210156101195786908661017384611555565b939054600394851b1c161461018c57505060010161015d565b949096959293917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9586810190811161040d57906101dd886101d061020994611555565b9054908c1b1c1691611555565b90919073ffffffffffffffffffffffffffffffffffffffff8084549260031b9316831b921b1916179055565b8151907ffdf262b7000000000000000000000000000000000000000000000000000000009182815281818781885afa908115610398579088915f916103f0575b50165f52600293848252835f20948451957fcdf456e1000000000000000000000000000000000000000000000000000000009687815284818a81875afa9081156103e657908b915f916103c9575b50165f528352845f20957fffffffffffffffffffffffff000000000000000000000000000000000000000096878154169055855190815283818981865afa9081156103bf57908a915f916103a2575b50165f52825281845f20938786518094819382525afa908115610398579088915f9161036b575b50165f52525f209081541690555f5490811561033f5750019161032f83611555565b8154921b9290921b191690555f55005b6031907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b61038b9150833d8511610391575b61038381836114ad565b81019061166f565b8a61030d565b503d610379565b84513d5f823e3d90fd5b6103b99150853d87116103915761038381836114ad565b8c6102e6565b86513d5f823e3d90fd5b6103e09150863d88116103915761038381836114ad565b8d610297565b87513d5f823e3d90fd5b6104079150833d85116103915761038381836114ad565b8a610249565b6011867f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b903461011b576020908160031936011261011b57610455611416565b8151926060840184811067ffffffffffffffff8211176105cf578352600284528084018336823773ffffffffffffffffffffffffffffffffffffffff8093169084517fcdf456e100000000000000000000000000000000000000000000000000000000815283818981865afa9081156103bf575f916105b2575b50865115610586579183918589941690528551928380927ffdf262b70000000000000000000000000000000000000000000000000000000082525afa918215610398575f92610569575b505083516001101561053d5761053994501681830152519182918261145c565b0390f35b6032857f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b61057f9250803d106103915761038381836114ad565b8580610519565b6032887f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b6105c99150843d86116103915761038381836114ad565b886104cf565b6041867f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b3461011b57602060031936011261011b57610614611416565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff8216801590816107c6575b60011490816107bc575b1590816107b3575b5061078c575090818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516178655610757575b506106bb6117e0565b6106c36117e0565b6106cb6117e0565b6106d4336116af565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015561070457005b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291817fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff602093541690555160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001668010000000000000001178455856106b2565b85517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b90501587610667565b303b15915061065f565b859150610655565b503461011b578060031936011261011b576020906107ea611416565b6107f2611439565b73ffffffffffffffffffffffffffffffffffffffff8092165f526002845281835f2091165f528352815f2054169051908152f35b503461011b575f60031936011261011b576020905f549051908152f35b903461011b575f60031936011261011b578051918183019083821067ffffffffffffffff8311176108e6575081526005825260208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b503461011b575f60031936011261011b5780515f8054808352818052602080840194927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392915b82821061097b576105398686610971828b03836114ad565b519182918261145c565b835473ffffffffffffffffffffffffffffffffffffffff1687529586019560019384019390910190610959565b3461011b57602060031936011261011b5735905f5482101561011b5773ffffffffffffffffffffffffffffffffffffffff6109e4602093611555565b92905490519260031b1c168152f35b903461011b578060031936011261011b57610a0c611416565b916024359267ffffffffffffffff9081851680950361011b577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215610b47575b5050610b20577fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260208787877fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000847fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000008b73ffffffffffffffffffffffffffffffffffffffff8c167fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015516171716905551908152a1005b84517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8516101590508688610a59565b503461011b575f60031936011261011b5760209073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054169051908152f35b503461011b575f60031936011261011b5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b3461011b575f60031936011261011b57610bf3611770565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b903461011b575f60031936011261011b5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610cf057602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b8160031936011261011b57610d29611416565b602492833567ffffffffffffffff811161011b573660238201121561011b5780840135610d558161151b565b93610d62845195866114ad565b818552602091828601933689838301011161011b57815f928a86930187378701015273ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803014908115610ff5575b50610fcd57610dd4611770565b81169484517f52d1902d000000000000000000000000000000000000000000000000000000008152838189818a5afa5f9181610f9e575b50610e3f57505050505051917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103610f715750853b15610f445750817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610f115750505f6101199581925190845af4913d15610f07573d610ef9610ef08261151b565b925192836114ad565b81525f81943d92013e611839565b5060609250611839565b9450945050505034610f1f57005b7fb398979f000000000000000000000000000000000000000000000000000000008152fd5b83838851917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b84908851917faa1d49a4000000000000000000000000000000000000000000000000000000008352820152fd5b9091508481813d8311610fc6575b610fb681836114ad565b8101031261011b5751908a610e0b565b503d610fac565b8685517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141589610dc7565b3461011b576020918260031936011261011b5761103e611416565b91611047611770565b73ffffffffffffffffffffffffffffffffffffffff908184169384156111c6575f546801000000000000000081101561119a57906101dd82600161108d94015f55611555565b82517fcdf456e100000000000000000000000000000000000000000000000000000000815285818381885afa908115610398575f9161117d575b5085845180937ffdf262b700000000000000000000000000000000000000000000000000000000825281885afa918215610398579083915f9361115e575b501691825f5260028652835f2091165f528452815f20937fffffffffffffffffffffffff000000000000000000000000000000000000000094848682541617905560028152825f20915f52525f20918254161790555f80f35b611176919350873d89116103915761038381836114ad565b9187611105565b6111949150863d88116103915761038381836114ad565b866110c7565b6041837f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b608482878651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602b60248201527f42616c756e6956315661756c74466163746f72793a20494e56414c49445f766160448201527f756c745f414444524553530000000000000000000000000000000000000000006064820152fd5b3461011b57602090602060031936011261011b57611264611416565b915f549261127184611620565b925f9273ffffffffffffffffffffffffffffffffffffffff928316845b8781106112df575b50505050909192506112a782611620565b925f5b8381106112be57855180610539878261145c565b80836112cc6001938561169b565b51166112d8828861169b565b52016112aa565b846112e982611555565b90549060031b1c1689517fcdf456e100000000000000000000000000000000000000000000000000000000815284818781855afa9081156113de57849188915f916113c1575b50161461134c5750865186146113475760010161128e565b611296565b939496975050505061135e838661169b565b527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82146113955750600101829185808080611296565b6011907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b6113d89150873d89116103915761038381836114ad565b8d61132f565b8b513d5f823e3d90fd5b503461011b57602060031936011261011b5760209061140d611408611416565b6115b5565b90519015158152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361011b57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361011b57565b60209060206040818301928281528551809452019301915f5b828110611483575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101611475565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176114ee57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff81116114ee57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b5f54811015611588575f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f905f54915b8281106115c9575050505f90565b6115d281611555565b9073ffffffffffffffffffffffffffffffffffffffff90548185169260031b1c1614611600576001016115bb565b505050600190565b67ffffffffffffffff81116114ee5760051b60200190565b9061162a82611608565b61163760405191826114ad565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06116658294611608565b0190602036910137565b9081602091031261011b575173ffffffffffffffffffffffffffffffffffffffff8116810361011b5790565b80518210156115885760209160051b010190565b73ffffffffffffffffffffffffffffffffffffffff809116908115611740577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300541633036117b057565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561180f57565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b90611878575080511561184e57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b815115806118d0575b611889575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b1561188156fea2646970667358221220f40748ea2a2950fab3e84cf88cbc07cb542e042e7d05b65d126236b3e68307f264736f6c63430008190033";

type BaluniV1DCAVaultRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaluniV1DCAVaultRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaluniV1DCAVaultRegistry__factory extends ContractFactory {
  constructor(...args: BaluniV1DCAVaultRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BaluniV1DCAVaultRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BaluniV1DCAVaultRegistry__factory {
    return super.connect(runner) as BaluniV1DCAVaultRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaluniV1DCAVaultRegistryInterface {
    return new Interface(_abi) as BaluniV1DCAVaultRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaluniV1DCAVaultRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BaluniV1DCAVaultRegistry;
  }
}
