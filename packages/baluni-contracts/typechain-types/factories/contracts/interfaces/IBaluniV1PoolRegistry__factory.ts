/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBaluniV1PoolRegistry,
  IBaluniV1PoolRegistryInterface,
} from "../../../contracts/interfaces/IBaluniV1PoolRegistry";

const _abi = [
  {
    inputs: [],
    name: "getAllPools",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset1",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset2",
        type: "address",
      },
    ],
    name: "getPoolByAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPoolsByAsset",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "poolExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IBaluniV1PoolRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IBaluniV1PoolRegistryInterface {
    return new Interface(_abi) as IBaluniV1PoolRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBaluniV1PoolRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IBaluniV1PoolRegistry;
  }
}
