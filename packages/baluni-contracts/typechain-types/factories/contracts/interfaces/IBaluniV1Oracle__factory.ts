/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBaluniV1Oracle,
  IBaluniV1OracleInterface,
} from "../../../contracts/interfaces/IBaluniV1Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "valuation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "convertScaled",
    outputs: [
      {
        internalType: "uint256",
        name: "valuation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IBaluniV1Oracle__factory {
  static readonly abi = _abi;
  static createInterface(): IBaluniV1OracleInterface {
    return new Interface(_abi) as IBaluniV1OracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBaluniV1Oracle {
    return new Contract(address, _abi, runner) as unknown as IBaluniV1Oracle;
  }
}
