/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  BaluniV1HyperPoolZap,
  BaluniV1HyperPoolZapInterface,
} from "../../../../contracts/managers/BaluniV1HyperPoolZap.sol/BaluniV1HyperPoolZap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniHyperUniProxy",
    outputs: [
      {
        internalType: "contract IBaluniV1HyperUniProxy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baluniSwapper",
    outputs: [
      {
        internalType: "contract IBaluniV1Swapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "changeRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "changeSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniProxy",
        type: "address",
      },
    ],
    name: "changeUniProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniProxy",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IBaluniV1Registry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "hypervisor",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountsOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "zapIn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "hypervisor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "zapOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0806040523460295730608052612274908161002e823960805181818161128401526113870152f35b5f80fdfe6080604052600436101561001a575b3615610018575f80fd5b005b5f803560e01c806315554c55146119cf5780633ebb287c1461196b57806345b1cb8014611907578063485cc9551461161d5780634aa4a4fc146115ea5780634f1ef286146112fe57806352d1902d1461125d578063715018a6146111bf5780637b1039991461118d5780637dfb7ea11461115a5780638af90292146111275780638da5cb5b146110d5578063ad3cb1cc14611031578063b1aa8cd114610616578063b487c54a146101045763f2fde38b146100d5575061000e565b34610101576020600319360112610101576100fe6100f1611a31565b6100f9611da3565b611ce2565b80f35b80fd5b5060a060031936011261010157610119611a31565b610121611a54565b60443592606435610130611a77565b93610139611e13565b6040517f0dfe16810000000000000000000000000000000000000000000000000000000081529273ffffffffffffffffffffffffffffffffffffffff908282166020878188600481865afa9788156104d95784986105f7575b506040517fd21220a70000000000000000000000000000000000000000000000000000000081528281600481875afa9081156105bf5785916105ca575b50604051986101dd8a611aae565b60028a52604036858c0137866101f28b611b89565b91169052856102008a611bc3565b9116905284604051996102128b611aae565b60028b52604036858d0137168b816105465791505034036104e8578360035416803b156104e457838b916004604051809481937fd0e30db00000000000000000000000000000000000000000000000000000000083525af180156104d9579084916104c1575b50508360035416945b835b885181101561031957808989888f948e6001968d846102a28589611bd3565b5116858216145f146102d1575093505050506102bf915190611cab565b6102c9828d611bd3565b525b01610283565b866102f46102fc9361030c976102ea886103149c611bd3565b5116925190611cab565b903092611e6d565b6103068383611bd3565b52611bd3565b511015611c46565b6102cb565b508885898c87805b83518110156103f45780888661033a6103a29488611bd3565b5116610346838a611bd3565b51908a866040518097819582947f095ea7b3000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af19182156103e9576001926103bc575b5001610321565b6103db908a3d8c116103e2575b6103d38183611aca565b810190611be7565b508b6103b5565b503d6103c9565b6040513d85823e3d90fd5b508682818660a489868e84600254169061041761041085611b89565b5194611bc3565b519560405198899788967fe6d7b8760000000000000000000000000000000000000000000000000000000088526004880152602487015216604485015230606485015260848401525af180156103e957610494575b8260017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005580f35b813d83116104ba575b6104a78183611aca565b810103126104b657818061046c565b5f80fd5b503d61049d565b6104ca90611a9a565b6104d557825f610278565b8280fd5b6040513d86823e3d90fd5b8380fd5b606490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601460248201527f496e636f72726563742045544820616d6f756e740000000000000000000000006044820152fd5b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101919091529196919083908290606490829089905af180156105bf576105a2575b50610281565b6105b890833d85116103e2576103d38183611aca565b505f61059c565b6040513d87823e3d90fd5b6105ea9150833d85116105f0575b6105e28183611aca565b810190611b45565b5f6101cf565b503d6105d8565b61060f919850823d84116105f0576105e28183611aca565b965f610192565b50346104b65760a06003193601126104b657610630611a31565b73ffffffffffffffffffffffffffffffffffffffff60443516604435036104b657610659611a77565b90610662611e13565b604051927f0dfe168100000000000000000000000000000000000000000000000000000000845260208460048173ffffffffffffffffffffffffffffffffffffffff86165afa938415610886575f94611010575b506040517fd21220a700000000000000000000000000000000000000000000000000000000815260208160048173ffffffffffffffffffffffffffffffffffffffff87165afa908115610886575f91610ff1575b506040519461071886611aae565b60028652604036602088013773ffffffffffffffffffffffffffffffffffffffff61074287611b89565b9116905273ffffffffffffffffffffffffffffffffffffffff61076486611bc3565b911690526040519161077583611aae565b6002835260403660208501378451927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06107c76107b186611b71565b956107bf6040519788611aca565b808752611b71565b013660208601375f5b86518110156108915780602073ffffffffffffffffffffffffffffffffffffffff6107fd6024948b611bd3565b5116604051938480927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa8015610886575f90610853575b6001925061084c8288611bd3565b52016107d0565b506020823d60201161087e575b8161086d60209383611aca565b810103126104b6576001915161083e565b3d9150610860565b6040513d5f823e3d90fd5b50838686604051947f70a0823100000000000000000000000000000000000000000000000000000000865230600487015260208660248173ffffffffffffffffffffffffffffffffffffffff604435165afa958615610886575f96610fbd575b506040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024808301919091523560448201526020816064815f73ffffffffffffffffffffffffffffffffffffffff87165af1801561088657610f9e575b506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024803590820152602081806044810103815f73ffffffffffffffffffffffffffffffffffffffff87165af1801561088657610f7f575b50604051906080820182811067ffffffffffffffff821117610f525760405260803683375f82525f60208301525f60408301525f606083015260405180927fa85598720000000000000000000000000000000000000000000000000000000082526024356004830152336024830152306044830152606482015f905b60048210610f385750505060e4815f73ffffffffffffffffffffffffffffffffffffffff604095165af1801561088657610f0d575b505f95865b8351881015610ca95773ffffffffffffffffffffffffffffffffffffffff6044351673ffffffffffffffffffffffffffffffffffffffff610aca8a87611bd3565b511603610baa576024602073ffffffffffffffffffffffffffffffffffffffff610af48b88611bd3565b5116604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa908115610886575f91610b77575b50600191610b52610b6e92610b4b8c8a611bd3565b5190611bff565b610b5c8b8a611bd3565b52610b678a89611bd3565b5190611c39565b975b0196610a89565b90506020813d602011610ba2575b81610b9260209383611aca565b810103126104b657516001610b36565b3d9150610b85565b6024602073ffffffffffffffffffffffffffffffffffffffff610bcd8b88611bd3565b5116604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa908115610886575f91610c76575b50600191610c24610c7092610b4b8c8a611bd3565b610c2e8b8a611bd3565b52610c6a73ffffffffffffffffffffffffffffffffffffffff610c518c89611bd3565b51163390610c5f8d8c611bd3565b519060443590611e6d565b90611c39565b97610b70565b90506020813d602011610ca1575b81610c9160209383611aca565b810103126104b657516001610c0f565b3d9150610c84565b506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528660208260248160443573ffffffffffffffffffffffffffffffffffffffff165afa8015610886575f90610ed9575b610d0f9250611bff565b91610d1e606435841015611c46565b73ffffffffffffffffffffffffffffffffffffffff6003541673ffffffffffffffffffffffffffffffffffffffff60443516145f14610e375773ffffffffffffffffffffffffffffffffffffffff60035416803b156104b6575f80916024604051809481937f2e1a7d4d0000000000000000000000000000000000000000000000000000000083528960048401525af1801561088657610e24575b5081808094819382908215610e1a575b73ffffffffffffffffffffffffffffffffffffffff1690f115610e0e575b60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005580f35b604051903d90823e3d90fd5b6108fc9150610dc9565b610e2f919250611a9a565b5f9083610db9565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481019290925290602081806044810103815f73ffffffffffffffffffffffffffffffffffffffff604435165af1801561088657610eba575b50610de7565b610ed29060203d6020116103e2576103d38183611aca565b5081610eb4565b506020823d602011610f05575b81610ef360209383611aca565b810103126104b657610d0f9151610d05565b3d9150610ee6565b604090813d8311610f31575b610f238183611aca565b810103126104b65786610a84565b503d610f19565b829350602080916001939451815201930191018492610a4f565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610f979060203d6020116103e2576103d38183611aca565b50876109d3565b610fb69060203d6020116103e2576103d38183611aca565b5087610959565b9095506020813d602011610fe9575b81610fd960209383611aca565b810103126104b6575194876108f1565b3d9150610fcc565b61100a915060203d6020116105f0576105e28183611aca565b5f61070a565b61102a91945060203d6020116105f0576105e28183611aca565b925f6106b6565b346104b6575f6003193601126104b6576040516040810181811067ffffffffffffffff821117610f525760405260058152604060208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b346104b6575f6003193601126104b657602073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416604051908152f35b346104b6575f6003193601126104b657602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b346104b6575f6003193601126104b657602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b346104b6575f6003193601126104b657602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346104b6575f6003193601126104b6576111d7611da3565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346104b6575f6003193601126104b65773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036112d45760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b60406003193601126104b657611312611a31565b602490813567ffffffffffffffff81116104b657366023820112156104b657806004013561133f81611b0b565b9261134d6040519485611aca565b81845260209182850193368783830101116104b657815f928886930187378601015273ffffffffffffffffffffffffffffffffffffffff807f0000000000000000000000000000000000000000000000000000000000000000168030149081156115bc575b506112d4576113bf611da3565b8116936040517f52d1902d0000000000000000000000000000000000000000000000000000000081528381600481895afa5f918161158d575b5061142d578686604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc9182810361155f5750843b156115305750817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a28151156114fc57505f6100189481925190845af4903d156114f3573d6114d781611b0b565b906114e56040519283611aca565b81525f81943d92013e61219e565b6060925061219e565b93505050503461150857005b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b82604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907faa1d49a40000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508481813d83116115b5575b6115a58183611aca565b810103126104b6575190886113f8565b503d61159b565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54161415876113b2565b346104b6575f6003193601126104b657602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b346104b65760406003193601126104b657611636611a31565b61163e611a54565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009182549060ff8260401c16159067ffffffffffffffff831692831580611900575b600180951490816118f6575b1590816118ed575b506118c35782847fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000831617875561188e575b506116d0612145565b6116d8612145565b6116e133611ce2565b6116e9612145565b6116f1612145565b827f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005561171c612145565b73ffffffffffffffffffffffffffffffffffffffff809416937fffffffffffffffffffffffff00000000000000000000000000000000000000009185835f5416175f556040517f82755ebb0000000000000000000000000000000000000000000000000000000081526020968782600481845afa8015610886576004938580928b955f91611871575b5016878a541617895516856002541617600255604051928380927f6c9c00780000000000000000000000000000000000000000000000000000000082525afa908115610886575f91611854575b501690600354161760035561180357005b827fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29454169055604051908152a1005b61186b9150863d88116105f0576105e28183611aca565b876117f2565b6118889150863d88116105f0576105e28183611aca565b8d6117a5565b7fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001668010000000000000001178555856116c7565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b90501587611695565b303b15915061168d565b5082611681565b346104b65760206003193601126104b65773ffffffffffffffffffffffffffffffffffffffff611935611a31565b61193d611da3565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060025416176002555f80f35b346104b65760206003193601126104b65773ffffffffffffffffffffffffffffffffffffffff611999611a31565b6119a1611da3565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001555f80f35b346104b65760206003193601126104b65773ffffffffffffffffffffffffffffffffffffffff6119fd611a31565b611a05611da3565b167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f555f80f35b6004359073ffffffffffffffffffffffffffffffffffffffff821682036104b657565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036104b657565b6084359073ffffffffffffffffffffffffffffffffffffffff821682036104b657565b67ffffffffffffffff8111610f5257604052565b6060810190811067ffffffffffffffff821117610f5257604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610f5257604052565b67ffffffffffffffff8111610f5257601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b908160209103126104b6575173ffffffffffffffffffffffffffffffffffffffff811681036104b65790565b67ffffffffffffffff8111610f525760051b60200190565b805115611b965760200190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b805160011015611b965760400190565b8051821015611b965760209160051b010190565b908160209103126104b6575180151581036104b65790565b91908203918211611c0c57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b91908201809211611c0c57565b15611c4d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f496e73756666696369656e74206f757470757420616d6f756e740000000000006044820152fd5b8115611cb5570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff809116908115611d73577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054163303611de357565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f006002815414611e435760029055565b60046040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b91939273ffffffffffffffffffffffffffffffffffffffff90815f54169060409485519485937f6c9c007800000000000000000000000000000000000000000000000000000000855284600460209889935afa93841561213b579085915f9561211a575b5081169116918183146121115760015487517f095ea7b300000000000000000000000000000000000000000000000000000000815290861673ffffffffffffffffffffffffffffffffffffffff166004820152602481018a905298868a6044815f885af1998a15612107578798999a9796976120ea575b505f868860848160015416958d5194859384927f2d6bc8ea0000000000000000000000000000000000000000000000000000000084528b60048501528a602485015288604485015216978860648401525af15f91816120b9575b506120ab5750915f9160a494938860015416928b51998a9889977f5efaaebb00000000000000000000000000000000000000000000000000000000895260048901521660248701526044860152606485015260848401525af19081156120a1575f91612074575b50915b821561201757505090565b6064925051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600b60248201527f53776170206661696c65640000000000000000000000000000000000000000006044820152fd5b90508181813d831161209a575b61208b8183611aca565b810103126104b657515f612009565b503d612081565b83513d5f823e3d90fd5b96505050505050509161200c565b8881999293503d83116120e3575b6120d18183611aca565b810103126104b657889651905f611fa2565b503d6120c7565b61210090873d89116103e2576103d38183611aca565b505f611f48565b88513d5f823e3d90fd5b50505050505050565b8291955061213490883d8a116105f0576105e28183611aca565b9490611ed1565b87513d5f823e3d90fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c161561217457565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b906121dd57508051156121b357805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580612235575b6121ee575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b156121e656fea26469706673582212208e8c1b0accfdf8aecee604f5274030c707bcc1e7ffc43d263bac5b3a03ce976764736f6c63430008190033";

type BaluniV1HyperPoolZapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaluniV1HyperPoolZapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaluniV1HyperPoolZap__factory extends ContractFactory {
  constructor(...args: BaluniV1HyperPoolZapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BaluniV1HyperPoolZap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BaluniV1HyperPoolZap__factory {
    return super.connect(runner) as BaluniV1HyperPoolZap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaluniV1HyperPoolZapInterface {
    return new Interface(_abi) as BaluniV1HyperPoolZapInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaluniV1HyperPoolZap {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BaluniV1HyperPoolZap;
  }
}
