/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { DSMath, DSMathInterface } from "../../../contracts/libs/DSMath";

const _abi = [
  {
    inputs: [],
    name: "RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460185760df908161001d823930815050f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c908163552033c414606d5750636a14602414602f575f80fd5b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126069576020604051670de0b6b3a76400008152f35b5f80fd5b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112606957806b033b2e3c9fd0803ce800000060209252f3fea26469706673582212205e469a9ce9dc6c0d5b9780b9b8c74a7130ce7f7a7d5d00d352db5e2bfefb71e464736f6c63430008190033";

type DSMathConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DSMathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DSMath__factory extends ContractFactory {
  constructor(...args: DSMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DSMath & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DSMath__factory {
    return super.connect(runner) as DSMath__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DSMathInterface {
    return new Interface(_abi) as DSMathInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DSMath {
    return new Contract(address, _abi, runner) as unknown as DSMath;
  }
}
