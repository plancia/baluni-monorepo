/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { DSMath, DSMathInterface } from "../../../contracts/libs/DSMath";

const _abi = [
  {
    inputs: [],
    name: "RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234602057600e6024565b61019261002f82393081505061019290f35b602a565b60405190565b5f80fdfe60806040526004361015610013575b610158565b61001d5f3561003c565b8063552033c41461003757636a1460240361000e5761012d565b6100c4565b60e01c90565b60405190565b5f80fd5b5f91031261005657565b610048565b90565b90565b90565b61007861007361007d9261005b565b610061565b61005e565b90565b610094676765c793fa10079d601b1b610064565b90565b61009f610080565b90565b6100ab9061005e565b9052565b91906100c2905f602085019401906100a2565b565b6100cf36600461004c565b6100eb6100da610097565b6100e2610042565b918291826100af565b0390f35b90565b61010661010161010b926100ef565b610061565b61005e565b90565b61011f670de0b6b3a76400006100f2565b90565b61012a61010e565b90565b61013836600461004c565b610154610143610122565b61014b610042565b918291826100af565b0390f35b5f80fdfea264697066735822122037083fe96ec48fa66ac96c79beb98bba4bda9376dbba91c276326c4bc9c40ace64736f6c63430008190033";

type DSMathConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DSMathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DSMath__factory extends ContractFactory {
  constructor(...args: DSMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DSMath & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DSMath__factory {
    return super.connect(runner) as DSMath__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DSMathInterface {
    return new Interface(_abi) as DSMathInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DSMath {
    return new Contract(address, _abi, runner) as unknown as DSMath;
  }
}
