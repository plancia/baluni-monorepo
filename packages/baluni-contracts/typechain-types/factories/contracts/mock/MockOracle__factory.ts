/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockOracle,
  MockOracleInterface,
} from "../../../contracts/mock/MockOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "usdt",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wmatic",
        type: "address",
      },
      {
        internalType: "address",
        name: "weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "wbtc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_TO_USDT_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_TO_WBTC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_TO_WETH_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_TO_WMATIC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT_TO_USDC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT_TO_WBTC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT_TO_WETH_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT_TO_WMATIC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBTC_TO_USDC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBTC_TO_USDT_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBTC_TO_WETH_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBTC_TO_WMATIC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH_TO_USDC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH_TO_USDT_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH_TO_WBTC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH_TO_WMATIC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WMATIC_TO_USDC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WMATIC_TO_USDT_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WMATIC_TO_WBTC_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WMATIC_TO_WETH_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WNATIVE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "valuation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "convertScaled",
    outputs: [
      {
        internalType: "uint256",
        name: "valuation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461030e57601f610ccb38819003918201601f191683019291906001600160401b03841183851017610312578160a0928492604096875283398101031261030e5761004b81610326565b9060209061005a828201610326565b92610066858301610326565b9361007f608061007860608601610326565b9401610326565b9460018060a01b0390818060018060a01b03199481600294168685541617845516946001948681875416178655339060035416176003551693845f525f8752885f20905f528652670ddc9893b8f69331885f2055835f525f8652875f20828254165f5286526c110f11bc46bc3efcc5b8ff1223885f2055835f525f865281885f20971696875f52865266052de6f3e9958f885f2055835f525f865281885f20951694855f5286526ad47d67cce9223fad7de347885f2055865f525f8652875f20845f5286526824efc5d2223b2ab2b2885f2055865f525f8652875f20828254165f5286526d2d9856fc421a9fd095f8b44c49db885f2055865f525f8652875f20828454165f528652682506936e734ac2f926885f2055865f525f8652875f20855f5286526c0236febc16a26943df322289be885f2055818354165f525f8652875f20845f528652670de435a2a433cf48885f2055818354165f525f8652875f20875f528652660533304f826d31885f2055818354165f525f8652875f20828254165f5286526c110dcba2e6f97b2a41a7eba1b8885f2055818354165f525f8652875f20855f5286526ad4801858112018c8850bae885f2055818154165f525f8652875f20875f528652610438885f2055818154165f525f8652875f20855f52865265ac76a57eb9a4885f2055818154165f525f8652875f20828454165f528652620b32d1885f2055818154165f525f8652875f20845f528652620b68f7885f2055845f525f865281885f209154165f52855269011de1930ce9ab44b5a1875f2055835f525f8552865f209154165f52835263e163500a9081865f2055825f525f8452855f20905f528352845f20555f525f8152825f20915f52526254dddd815f205551610990908161033b8239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b038216820361030e5756fe6080604090808252600480361015610015575f80fd5b5f3560e01c91826302098719146107d6575081630e091762146107b9578163187029b81461079d5781631a1e4a1f14610776578163248391ff146106315781634039e6871461061357816343146399146105f6578163443dc789146105d15781635107e94e146105aa57816353ff493e146105875781635fc8cd691461056957816361d027b3146105355781637b0cf44d146104da57816389a30271146104a65781638e5139ed1461047e57816397db8e021461045d578163a58a7f8a1461043b578163ae3bcc961461041b578163b27b5e751461024757508063b381cf4014610213578063b537d24b146101f1578063b9e93810146101ca578063c0184983146101ad578063d135e3be1461018a578063e2338e72146101655763e30f68921461013e575f80fd5b34610161575f600319360112610161576020905169011de1930ce9ab44b5a18152f35b5f80fd5b5034610161575f60031936011261016157602090516ad4801858112018c8850bae8152f35b5034610161575f60031936011261016157602090516824efc5d2223b2ab2b28152f35b5034610161575f6003193601126101615760209051620b32d18152f35b5034610161575f60031936011261016157602090516c0236febc16a26943df322289be8152f35b5034610161575f6003193601126101615760209051670de435a2a433cf488152f35b5034610161575f6003193601126101615760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b823461016157610256366107f5565b90939173ffffffffffffffffffffffffffffffffffffffff809116908451917f313ce567000000000000000000000000000000000000000000000000000000009182845260209788858881865afa948515610411575f956103f2575b501690865192835287838781855afa9283156103e8575f936103b9575b505f525f8752855f20905f5286526103056102f6865f20546102f0856108be565b906108fc565b6102ff836108be565b9061090f565b9160ff821694856012039060ff821161038d575091670de0b6b3a764000093916103336103539796946108be565b9560ff821680820361035a575050505061034c916108fc565b045b6108fc565b9051908152f35b111561037957926102ff61037461034e9361034c96610946565b6108be565b926102f061037461034c9561034e94610946565b6011907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b6103da919350883d8a116103e1575b6103d28183610837565b8101906108a5565b91886102cf565b503d6103c8565b87513d5f823e3d90fd5b61040a919550893d8b116103e1576103d28183610837565b93896102b2565b88513d5f823e3d90fd5b8234610161575f600319360112610161576020905165ac76a57eb9a48152f35b8234610161575f6003193601126101615760209051670ddc9893b8f693318152f35b8234610161575f600319360112610161576020905166052de6f3e9958f8152f35b8234610161575f60031936011261016157602090516d2d9856fc421a9fd095f8b44c49db8152f35b8234610161575f6003193601126101615760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b905034610161578160031936011261016157359073ffffffffffffffffffffffffffffffffffffffff80831680930361016157602435908116809103610161576020925f525f8352815f20905f528252805f20549051908152f35b8234610161575f6003193601126101615760209073ffffffffffffffffffffffffffffffffffffffff600354169051908152f35b8234610161575f600319360112610161576020905163df77b36f8152f35b8234610161575f6003193601126101615760209051682506936e734ac2f9268152f35b8234610161575f60031936011261016157602090516c110dcba2e6f97b2a41a7eba1b88152f35b8234610161575f60031936011261016157602090516ad47d67cce9223fad7de3478152f35b8234610161575f60031936011261016157602090516254dddd8152f35b8234610161575f600319360112610161576020905163e163500a8152f35b823461016157610640366107f5565b90929173ffffffffffffffffffffffffffffffffffffffff8091168351917f313ce567000000000000000000000000000000000000000000000000000000009081845260209687858a81875afa9485156103e857908892915f96610757575b5016918651988991825281845afa91821561074d57670de0b6b3a76400009596975f9361072e575b505f525f8752855f20905f5286526106e86102f6865f20546102f0856108be565b9160ff8281169082161061071357926102ff61037461034e9361070a96610946565b04905b51908152f35b926102f06103746107279561034e94610946565b049061070d565b610746919350883d8a116103e1576103d28183610837565b91886106c7565b85513d5f823e3d90fd5b61076f919650833d85116103e1576103d28183610837565b948a61069f565b8234610161575f60031936011261016157602090516c110f11bc46bc3efcc5b8ff12238152f35b8234610161575f60031936011261016157602090516104388152f35b8234610161575f6003193601126101615760209051620b68f78152f35b34610161575f6003193601126101615780660533304f826d3160209252f35b60031960609101126101615773ffffffffffffffffffffffffffffffffffffffff90600435828116810361016157916024359081168103610161579060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761087857604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90816020910312610161575160ff811681036101615790565b60ff16604d81116108cf57600a0a90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b818102929181159184041417156108cf57565b8115610919570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b9060ff8091169116039060ff82116108cf5756fea264697066735822122047d3e63f3ea767e3fc229981561c7b9d2fe8f0288b7e7f8363e9b270f84f065064736f6c63430008190033";

type MockOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOracle__factory extends ContractFactory {
  constructor(...args: MockOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    usdt: AddressLike,
    _usdc: AddressLike,
    _wmatic: AddressLike,
    weth: AddressLike,
    wbtc: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      usdt,
      _usdc,
      _wmatic,
      weth,
      wbtc,
      overrides || {}
    );
  }
  override deploy(
    usdt: AddressLike,
    _usdc: AddressLike,
    _wmatic: AddressLike,
    weth: AddressLike,
    wbtc: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      usdt,
      _usdc,
      _wmatic,
      weth,
      wbtc,
      overrides || {}
    ) as Promise<
      MockOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockOracle__factory {
    return super.connect(runner) as MockOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOracleInterface {
    return new Interface(_abi) as MockOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockOracle {
    return new Contract(address, _abi, runner) as unknown as MockOracle;
  }
}
